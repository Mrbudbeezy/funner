/*
** This file has been pre-processed with DynASM.
** http://luajit.org/dynasm.html
** DynASM version 1.3.0, DynASM ppc version 1.3.0
** DO NOT EDIT! The original file is in "buildvm_ppc.dasc".
*/

#if DASM_VERSION != 10300
#error "Version mismatch between DynASM and included encoding engine"
#endif

#define DASM_SECTION_CODE_OP	0
#define DASM_SECTION_CODE_SUB	1
#define DASM_MAXSECTION		2
static const unsigned int build_actionlist[5561] = {
0x00010001,
0x00060014,
0x72000000,
0x00090200,
0x39000000,
0x00098200,
0x41820000,
0x00050815,
0x8209fff8,
0x7d2e4b78,
0x9514fff8,
0x00060016,
0x72000000,
0x00090200,
0x398c0008,
0x7d936378,
0x41820000,
0x00050817,
0x00060018,
0x2c000000,
0x00098200,
0x56090038,
0x38000000,
0x00098200,
0x7d297050,
0x40820000,
0x00050814,
0x350cfff8,
0x91320000,
0x00098200,
0x81210018,
0x39cefff8,
0x90110000,
0x00098200,
0x55291800,
0x000900a1,
0x41820000,
0x00050802,
0x0006000b,
0x3508fff8,
0xc8140000,
0x3a940008,
0xd80e0000,
0x39ce0008,
0x40820000,
0x0005080b,
0x0006000c,
0x7c096000,
0x40820000,
0x00050806,
0x0006000d,
0x91d20000,
0x00098200,
0x00060019,
0x00000000,
0x80010014,
0x38600000,
0x90120000,
0x00098200,
0x0006001a,
0x80010104,
0x81c10000,
0x00098200,
0xc9c10000,
0x00098200,
0x81e10000,
0x00098200,
0xc9e10000,
0x00098200,
0x82010000,
0x00098200,
0xca010000,
0x00098200,
0x82210000,
0x00098200,
0xca210000,
0x00098200,
0x82410000,
0x00098200,
0xca410000,
0x00098200,
0x82610000,
0x00098200,
0xca610000,
0x00098200,
0x7c0803a6,
0x82810000,
0x00098200,
0xca810000,
0x00098200,
0x82a10000,
0x00098200,
0xcaa10000,
0x00098200,
0x82c10000,
0x00098200,
0xcac10000,
0x00098200,
0x82e10000,
0x00098200,
0xcae10000,
0x00098200,
0x00000000,
0x83010000,
0x00098200,
0xcb010000,
0x00098200,
0x83210000,
0x00098200,
0xcb210000,
0x00098200,
0x83410000,
0x00098200,
0xcb410000,
0x00098200,
0x83610000,
0x00098200,
0xcb610000,
0x00098200,
0x83810000,
0x00098200,
0xcb810000,
0x00098200,
0x83a10000,
0x00098200,
0xcba10000,
0x00098200,
0x83c10000,
0x00098200,
0xcbc10000,
0x00098200,
0x83e10000,
0x00098200,
0xcbe10000,
0x00098200,
0x38210100,
0x4e800020,
0x00060010,
0x40810000,
0x00050807,
0x81120000,
0x00098200,
0x7c0e4040,
0x40800000,
0x00050808,
0x92ee0000,
0x398c0008,
0x39ce0008,
0x48000000,
0x0005000c,
0x00060011,
0x00000000,
0x20c90000,
0x7c096050,
0x7d084110,
0x7c004038,
0x7dc07050,
0x48000000,
0x0005000d,
0x00060012,
0x91d20000,
0x00098200,
0x7d956378,
0x7d244b78,
0x7e439378,
0x48000001,
0x00030000,
0x81210018,
0x7eacab78,
0x55291800,
0x000900a1,
0x81d20000,
0x00098200,
0x48000000,
0x0005000c,
0x0006001b,
0x7c611b78,
0x7c832378,
0x0006001c,
0x82410010,
0x38000000,
0x00098200,
0x81120000,
0x00098200,
0x90080000,
0x00098200,
0x48000000,
0x0005001a,
0x0006001d,
0x5461003a,
0x0006001e,
0x82410010,
0x3ac00000,
0x00098200,
0x81d20000,
0x00098200,
0x3cc059c0,
0x82320000,
0x00098200,
0x3b000000,
0x90c10008,
0x39000000,
0x00098200,
0x60c60004,
0x3ae00000,
0x00098200,
0x38000000,
0x00098200,
0xc3c10008,
0x820efff8,
0x3a8efff8,
0x90c10008,
0x3a310000,
0x00098200,
0x00000000,
0x91140000,
0x39800010,
0x90110000,
0x00098200,
0xc3e10008,
0x48000000,
0x00050016,
0x0006001f,
0x38800000,
0x00098200,
0x48000000,
0x00050002,
0x00060020,
0x7d6e5a14,
0x7e8ea050,
0x91d20000,
0x00098200,
0x3a100004,
0x91720000,
0x00098200,
0x568400fe,
0x000900ab,
0x0006000c,
0x92010008,
0x7e439378,
0x48000001,
0x00030000,
0x81d20000,
0x00098200,
0x81720000,
0x00098200,
0x814efffc,
0x7d6e5850,
0x820a0000,
0x00098200,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54f4dd78,
0x7c11402e,
0x7e947214,
0x7c0903a6,
0x4e800420,
0x00060021,
0x9421ff00,
0x91c10000,
0x00098200,
0xd9c10000,
0x00098200,
0x91e10000,
0x00098200,
0xd9e10000,
0x00098200,
0x92010000,
0x00098200,
0xda010000,
0x00098200,
0x92210000,
0x00098200,
0x00000000,
0xda210000,
0x00098200,
0x92410000,
0x00098200,
0xda410000,
0x00098200,
0x92610000,
0x00098200,
0xda610000,
0x00098200,
0x7c0802a6,
0x92810000,
0x00098200,
0xda810000,
0x00098200,
0x92a10000,
0x00098200,
0xdaa10000,
0x00098200,
0x92c10000,
0x00098200,
0xdac10000,
0x00098200,
0x92e10000,
0x00098200,
0xdae10000,
0x00098200,
0x93010000,
0x00098200,
0xdb010000,
0x00098200,
0x93210000,
0x00098200,
0xdb210000,
0x00098200,
0x90010104,
0x93410000,
0x00098200,
0xdb410000,
0x00098200,
0x93610000,
0x00098200,
0xdb610000,
0x00098200,
0x93810000,
0x00098200,
0x00000000,
0xdb810000,
0x00098200,
0x93a10000,
0x00098200,
0xdba10000,
0x00098200,
0x93c10000,
0x00098200,
0xdbc10000,
0x00098200,
0x93e10000,
0x00098200,
0xdbe10000,
0x00098200,
0x7c721b78,
0x82320000,
0x00098200,
0x7c8e2378,
0x89120000,
0x00098200,
0x92410010,
0x3a000000,
0x00098200,
0x38010000,
0x00098200,
0x3a310000,
0x00098200,
0x90a10018,
0x28080000,
0x90a1001c,
0x90120000,
0x00098200,
0x90a10014,
0x90610008,
0x41820000,
0x00050803,
0x7dd47378,
0x81d20000,
0x00098200,
0x3ac00000,
0x00098200,
0x81120000,
0x00098200,
0x820efff8,
0x3cc059c0,
0x7d8e4050,
0x98b20000,
0x00098200,
0x90c10008,
0x72000000,
0x00090200,
0x60c60004,
0xc3c10008,
0x3b000000,
0x90c10008,
0x398c0008,
0x3c004338,
0x7d936378,
0x90010020,
0x38000000,
0x00098200,
0xc3e10008,
0x3ae00000,
0x00098200,
0x90110000,
0x00098200,
0x00000000,
0x41820000,
0x00050817,
0x48000000,
0x00050018,
0x00060022,
0x9421ff00,
0x91c10000,
0x00098200,
0xd9c10000,
0x00098200,
0x91e10000,
0x00098200,
0xd9e10000,
0x00098200,
0x92010000,
0x00098200,
0xda010000,
0x00098200,
0x92210000,
0x00098200,
0xda210000,
0x00098200,
0x92410000,
0x00098200,
0xda410000,
0x00098200,
0x92610000,
0x00098200,
0xda610000,
0x00098200,
0x7c0802a6,
0x92810000,
0x00098200,
0xda810000,
0x00098200,
0x92a10000,
0x00098200,
0xdaa10000,
0x00098200,
0x92c10000,
0x00098200,
0xdac10000,
0x00098200,
0x92e10000,
0x00098200,
0x00000000,
0xdae10000,
0x00098200,
0x93010000,
0x00098200,
0xdb010000,
0x00098200,
0x93210000,
0x00098200,
0xdb210000,
0x00098200,
0x90010104,
0x93410000,
0x00098200,
0xdb410000,
0x00098200,
0x93610000,
0x00098200,
0xdb610000,
0x00098200,
0x93810000,
0x00098200,
0xdb810000,
0x00098200,
0x93a10000,
0x00098200,
0xdba10000,
0x00098200,
0x93c10000,
0x00098200,
0xdbc10000,
0x00098200,
0x93e10000,
0x00098200,
0xdbe10000,
0x00098200,
0x3a000000,
0x00098200,
0x90c1001c,
0x48000000,
0x00050001,
0x00060023,
0x9421ff00,
0x91c10000,
0x00098200,
0xd9c10000,
0x00098200,
0x00000000,
0x91e10000,
0x00098200,
0xd9e10000,
0x00098200,
0x92010000,
0x00098200,
0xda010000,
0x00098200,
0x92210000,
0x00098200,
0xda210000,
0x00098200,
0x92410000,
0x00098200,
0xda410000,
0x00098200,
0x92610000,
0x00098200,
0xda610000,
0x00098200,
0x7c0802a6,
0x92810000,
0x00098200,
0xda810000,
0x00098200,
0x92a10000,
0x00098200,
0xdaa10000,
0x00098200,
0x92c10000,
0x00098200,
0xdac10000,
0x00098200,
0x92e10000,
0x00098200,
0xdae10000,
0x00098200,
0x93010000,
0x00098200,
0xdb010000,
0x00098200,
0x93210000,
0x00098200,
0xdb210000,
0x00098200,
0x00000000,
0x90010104,
0x93410000,
0x00098200,
0xdb410000,
0x00098200,
0x93610000,
0x00098200,
0xdb610000,
0x00098200,
0x93810000,
0x00098200,
0xdb810000,
0x00098200,
0x93a10000,
0x00098200,
0xdba10000,
0x00098200,
0x93c10000,
0x00098200,
0xdbc10000,
0x00098200,
0x93e10000,
0x00098200,
0xdbe10000,
0x00098200,
0x3a000000,
0x00098200,
0x0006000b,
0x81030000,
0x00098200,
0x90a10018,
0x7c721b78,
0x90610010,
0x7c8e2378,
0x90320000,
0x00098200,
0x82320000,
0x00098200,
0x90610008,
0x91010014,
0x3a310000,
0x00098200,
0x0006000d,
0x81320000,
0x00098200,
0x3ac00000,
0x00098200,
0x81120000,
0x00098200,
0x00000000,
0x3cc059c0,
0x7e107214,
0x90c10008,
0x3b000000,
0x60c60004,
0xc3c10008,
0x7e098050,
0x90c10008,
0x3c004338,
0x7d6e4050,
0x90010020,
0x38000000,
0x00098200,
0xc3e10008,
0x3ae00000,
0x00098200,
0x90110000,
0x00098200,
0x00060024,
0x800efff8,
0x814efffc,
0x2c000000,
0x00098200,
0x40820000,
0x00050825,
0x00060026,
0x920efff8,
0x820a0000,
0x00098200,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54f4dd78,
0x7c11402e,
0x7e947214,
0x7c0903a6,
0x4e800420,
0x00060027,
0x9421ff00,
0x91c10000,
0x00098200,
0xd9c10000,
0x00098200,
0x91e10000,
0x00098200,
0xd9e10000,
0x00098200,
0x92010000,
0x00098200,
0xda010000,
0x00098200,
0x92210000,
0x00098200,
0xda210000,
0x00098200,
0x92410000,
0x00098200,
0xda410000,
0x00098200,
0x92610000,
0x00098200,
0xda610000,
0x00098200,
0x7c0802a6,
0x92810000,
0x00098200,
0x00000000,
0xda810000,
0x00098200,
0x92a10000,
0x00098200,
0xdaa10000,
0x00098200,
0x92c10000,
0x00098200,
0xdac10000,
0x00098200,
0x92e10000,
0x00098200,
0xdae10000,
0x00098200,
0x93010000,
0x00098200,
0xdb010000,
0x00098200,
0x93210000,
0x00098200,
0xdb210000,
0x00098200,
0x90010104,
0x93410000,
0x00098200,
0xdb410000,
0x00098200,
0x93610000,
0x00098200,
0xdb610000,
0x00098200,
0x93810000,
0x00098200,
0xdb810000,
0x00098200,
0x93a10000,
0x00098200,
0xdba10000,
0x00098200,
0x93c10000,
0x00098200,
0xdbc10000,
0x00098200,
0x93e10000,
0x00098200,
0x00000000,
0xdbe10000,
0x00098200,
0x7c721b78,
0x80030000,
0x00098200,
0x90610010,
0x81120000,
0x00098200,
0x90610008,
0x7c080050,
0x81120000,
0x00098200,
0x90320000,
0x00098200,
0x39200000,
0x90010018,
0x9121001c,
0x91010014,
0x7cc903a6,
0x4e800421,
0x7c6e1b79,
0x82320000,
0x00098200,
0x3a000000,
0x00098200,
0x3a310000,
0x00098200,
0x40820000,
0x0005080d,
0x48000000,
0x00050019,
0x00060015,
0x800efff4,
0x7dca7378,
0x7d2e4b78,
0x8109fffc,
0x28000000,
0x820afff0,
0x41820000,
0x00050801,
0x392cfff8,
0x81080000,
0x00098200,
0x7ef4492e,
0x81e80000,
0x00098200,
0x7c0903a6,
0x4e800420,
0x0006000b,
0x390afff0,
0x7d6e4050,
0x48000000,
0x00050028,
0x00060029,
0x80f0fffc,
0x388afff0,
0x54f55d78,
0xc8140000,
0x7d0eaa14,
0x91d20000,
0x00098200,
0x7c082040,
0x7ca82050,
0x54f4dd78,
0xd8040000,
0x40820000,
0x0005082a,
0x7c0ea5ae,
0x48000000,
0x0005002b,
0x0006002c,
0x38b10000,
0x00098200,
0x00000000,
0x38000000,
0x00098200,
0x54ea5d78,
0x91650004,
0x7c8e5214,
0x90050000,
0x48000000,
0x00050001,
0x0006002d,
0x38910000,
0x00098200,
0x38000000,
0x00098200,
0x91440004,
0x38b10000,
0x00098200,
0x90040000,
0x39000000,
0x00098200,
0x91650004,
0x91050000,
0x48000000,
0x00050001,
0x0006002e,
0x90010024,
0xc8010020,
0xfc00f028,
0x54ea5d78,
0x38b10000,
0x00098200,
0x7c8e5214,
0xd8050000,
0x48000000,
0x00050001,
0x0006002f,
0x54ea5d78,
0x54eb9d78,
0x7c8e5214,
0x7cae5a14,
0x0006000b,
0x91d20000,
0x00098200,
0x7e439378,
0x92010008,
0x48000001,
0x00030001,
0x28030000,
0x41820000,
0x00050803,
0xc8030000,
0x80f00000,
0x3a100004,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000d,
0x210e0000,
0x00098200,
0x81d20000,
0x00098200,
0x920efff0,
0x7e087214,
0x814efffc,
0x39600010,
0x48000000,
0x00050026,
0x00060030,
0x38b10000,
0x00098200,
0x00000000,
0x38000000,
0x00098200,
0x54ea5d78,
0x91650004,
0x7c8e5214,
0x90050000,
0x48000000,
0x00050001,
0x00060031,
0x38910000,
0x00098200,
0x38000000,
0x00098200,
0x91440004,
0x38b10000,
0x00098200,
0x90040000,
0x39000000,
0x00098200,
0x91650004,
0x91050000,
0x48000000,
0x00050001,
0x00060032,
0x90010024,
0xc8010020,
0xfc00f028,
0x54ea5d78,
0x38b10000,
0x00098200,
0x7c8e5214,
0xd8050000,
0x48000000,
0x00050001,
0x00060033,
0x54ea5d78,
0x54eb9d78,
0x7c8e5214,
0x7cae5a14,
0x0006000b,
0x91d20000,
0x00098200,
0x7e439378,
0x92010008,
0x48000001,
0x00030002,
0x28030000,
0x7c0ea4ae,
0x41820000,
0x00050803,
0x80f00000,
0x3a100004,
0xd8030000,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000d,
0x210e0000,
0x00098200,
0x81d20000,
0x00098200,
0x920efff0,
0x7e087214,
0x814efffc,
0x39600018,
0xd80e0010,
0x48000000,
0x00050026,
0x00060034,
0x7e439378,
0x3a10fffc,
0x7c8ea214,
0x92010008,
0x7cae6214,
0x91d20000,
0x00098200,
0x00000000,
0x54e6063e,
0x48000001,
0x00030003,
0x0006000d,
0x28030001,
0x41810000,
0x00050835,
0x20630000,
0x0006000e,
0x80f00000,
0x3a100004,
0x54e993ba,
0x3d290000,
0x00098200,
0x7d291838,
0x7e104a14,
0x0006002b,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00060036,
0x80f0fffc,
0xc8140000,
0x54e8dd78,
0x7c0e45ae,
0x48000000,
0x0005002b,
0x00060037,
0x80140000,
0x20000000,
0x00098200,
0x7c631910,
0x7c6318f8,
0x48000000,
0x0005000e,
0x00060038,
0x80140000,
0x20000000,
0x00098200,
0x7c631910,
0x48000000,
0x0005000e,
0x00060039,
0x3a10fffc,
0x91d20000,
0x00098200,
0x7e439378,
0x92010008,
0x48000001,
0x00030004,
0x48000000,
0x0005000d,
0x0006003a,
0x7cae5214,
0x7ccf5a14,
0x48000000,
0x00050001,
0x0006003b,
0x7caf5a14,
0x7cce5214,
0x48000000,
0x00050001,
0x0006003c,
0x00000000,
0x7d856378,
0x7d866378,
0x48000000,
0x00050001,
0x0006003d,
0x7cae5214,
0x7cce5a14,
0x0006000b,
0x7c8ea214,
0x91d20000,
0x00098200,
0x7e439378,
0x92010008,
0x54e7063e,
0x48000001,
0x00030005,
0x28030000,
0x41820000,
0x0005082b,
0x00060035,
0x7d0e1850,
0x9203fff0,
0x7dc97378,
0x3a080000,
0x00098200,
0x7c6e1b78,
0x39600010,
0x48000000,
0x00050024,
0x0006003e,
0x00000000,
0x7c751b78,
0x00000000,
0x7d846378,
0x91d20000,
0x00098200,
0x7e439378,
0x92010008,
0x48000001,
0x00030006,
0x00000000,
0x28030000,
0x40820000,
0x00050835,
0x7ea3ab78,
0x48000000,
0x0005003f,
0x00000000,
0x48000000,
0x00050035,
0x00000000,
0x00060025,
0x7e439378,
0x91320000,
0x00098200,
0x388efff8,
0x92010008,
0x7cae5a14,
0x7d755b78,
0x48000001,
0x00030007,
0x814efffc,
0x39750008,
0x920efff8,
0x820a0000,
0x00098200,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54f4dd78,
0x7c11402e,
0x7e947214,
0x7c0903a6,
0x4e800420,
0x00060040,
0x7e439378,
0x91d20000,
0x00098200,
0x3894fff8,
0x92010008,
0x7cb45a14,
0x7d755b78,
0x48000001,
0x00030007,
0x810efff8,
0x39750008,
0x8154fffc,
0x48000000,
0x00050041,
0x00060042,
0x7e439378,
0x91d20000,
0x00098200,
0x7e84a378,
0x92010008,
0x7cf53b78,
0x48000001,
0x00030008,
0x00000000,
0x56a0063e,
0x00000000,
0x56b4dd78,
0x00000000,
0x2c000000,
0x00098200,
0x00000000,
0x56ac9b78,
0x00000000,
0x41820000,
0x00070800,
0x00000000,
0x48000000,
0x00070000,
0x00060043,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x39000000,
0x00098200,
0x3a8efff8,
0x7c854040,
0x820efff8,
0x40840000,
0x00050844,
0x90b40000,
0x398b0008,
0x90740004,
0x41820000,
0x00050845,
0x39000008,
0x396bfff8,
0x0006000b,
0x7c085840,
0x7c0e44ae,
0x7c1445ae,
0x39080008,
0x40820000,
0x0005080b,
0x48000000,
0x00050045,
0x00060046,
0x280b0008,
0x806e0000,
0x41800000,
0x00050844,
0x7c161810,
0x7d231910,
0x7d280338,
0x39080000,
0x00098200,
0x55081800,
0x000900a1,
0x392a0000,
0x00098200,
0x7c2944ae,
0x48000000,
0x00050047,
0x00060048,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x40820000,
0x00050806,
0x0006000b,
0x80630000,
0x00098200,
0x0006000c,
0x00000000,
0x38a00000,
0x00098200,
0x28030000,
0x81710000,
0x00098200,
0x41820000,
0x00050849,
0x80030000,
0x00098200,
0x38a00000,
0x00098200,
0x810b0000,
0x00098200,
0x81230000,
0x00098200,
0x7d080038,
0x55002800,
0x000900a1,
0x55081800,
0x000900a1,
0x7d080050,
0x7d294214,
0x0006000d,
0x80c90000,
0x00098200,
0x80090000,
0x00098200,
0x80890000,
0x00098200,
0x81090000,
0x00098200,
0x2c060000,
0x00098200,
0x40820000,
0x00050804,
0x7c005800,
0x41820000,
0x00050805,
0x0006000e,
0x81290000,
0x00098200,
0x28090000,
0x41820000,
0x00050849,
0x48000000,
0x0005000d,
0x0006000f,
0x00000000,
0x2c040000,
0x00098200,
0x41820000,
0x00050849,
0x7c852378,
0x7d034378,
0x48000000,
0x00050049,
0x00060010,
0x2c050000,
0x00098200,
0x41820000,
0x0005080b,
0x7c162810,
0x7d252910,
0x7d280338,
0x39080000,
0x00098200,
0x55081000,
0x000900a1,
0x39310000,
0x00098200,
0x7c69402e,
0x48000000,
0x0005000c,
0x0006004a,
0x280b0010,
0x80ae0000,
0x80ce0008,
0x806e0004,
0x808e000c,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x40820000,
0x00050844,
0x81030000,
0x00098200,
0x2c060000,
0x00098200,
0x40820000,
0x00050844,
0x28080000,
0x88c30000,
0x00098200,
0x40820000,
0x00050844,
0x70c00000,
0x00090200,
0x90830000,
0x00098200,
0x41820000,
0x00050849,
0x00000000,
0x80110000,
0x00098200,
0x54c607b8,
0x90710000,
0x00098200,
0x98c30000,
0x00098200,
0x90030000,
0x00098200,
0x48000000,
0x00050049,
0x0006004b,
0x280b0008,
0x80ce0000,
0x808e0004,
0x41800000,
0x00050844,
0x2c060000,
0x00098200,
0x40820000,
0x00050844,
0x38ae0008,
0x7e439378,
0x48000001,
0x00030009,
0xc8230000,
0x48000000,
0x00050047,
0x0006004c,
0x280b0008,
0x806e0000,
0xc82e0000,
0x40820000,
0x00050844,
0x7c03b040,
0x41810000,
0x00050844,
0x48000000,
0x00050047,
0x0006004d,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x41820000,
0x00050849,
0x80110000,
0x00098200,
0x7c05b040,
0x28800000,
0x91d20000,
0x00098200,
0x4c413342,
0x92010008,
0x41820000,
0x00050844,
0x00000000,
0x80110000,
0x00098200,
0x81110000,
0x00098200,
0x7c004040,
0x40800001,
0x0005084e,
0x7e439378,
0x7dc47378,
0x48000001,
0x0003000a,
0x38a00000,
0x00098200,
0x48000000,
0x00050049,
0x0006004f,
0x280b0008,
0x806e0000,
0x808e0004,
0x41800000,
0x00050844,
0x7eee592e,
0x2c030000,
0x00098200,
0x820efff8,
0x40820000,
0x00050844,
0x91d20000,
0x00098200,
0x7e439378,
0x91d20000,
0x00098200,
0x38ae0008,
0x92010008,
0x48000001,
0x0003000b,
0x28030000,
0x38a00000,
0x00098200,
0x41820000,
0x00050849,
0xc80e0008,
0x3a8efff8,
0xc82e0010,
0xd8140000,
0x39800000,
0x00098200,
0xd8340008,
0x48000000,
0x00050045,
0x00060050,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x820efff8,
0x40820000,
0x00050844,
0x00000000,
0x81230000,
0x00098200,
0xc80a0000,
0x00098200,
0x28090000,
0x3a8efff8,
0x40820000,
0x00050844,
0x00000000,
0xc80a0000,
0x00098200,
0x3a8efff8,
0x00000000,
0x92ee0008,
0x39800000,
0x00098200,
0xd8140000,
0x48000000,
0x00050045,
0x00060051,
0x280b0010,
0x80ae0000,
0x806e0004,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x7c86b040,
0x820efff8,
0x3c003ff0,
0x9301000c,
0x40820000,
0x00050844,
0x90010008,
0x40840000,
0x00050844,
0xc8210008,
0xfc00101e,
0xd8010008,
0x8121000c,
0x80030000,
0x00098200,
0x81030000,
0x00098200,
0xfc42082a,
0x39290001,
0x3a8efff8,
0x7c004840,
0x55261800,
0x000900a1,
0xd8540000,
0x40810000,
0x00050802,
0x7d28302e,
0x7c0834ae,
0x0006000b,
0x2c090000,
0x00098200,
0x39800000,
0x00098200,
0x41820000,
0x00050845,
0x39800000,
0x00098200,
0xd8140008,
0x48000000,
0x00050045,
0x0006000c,
0x80030000,
0x00098200,
0x28000000,
0x39800000,
0x00098200,
0x41820000,
0x00050845,
0x7d244b78,
0x48000001,
0x0003000c,
0x00000000,
0x28030000,
0x39800000,
0x00098200,
0x41820000,
0x00050845,
0x81230000,
0xc8030000,
0x48000000,
0x0005000b,
0x00060052,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x820efff8,
0x40820000,
0x00050844,
0x00000000,
0x81230000,
0x00098200,
0xc80a0000,
0x00098200,
0x28090000,
0x3a8efff8,
0x40820000,
0x00050844,
0x00000000,
0xc80a0000,
0x00098200,
0x3a8efff8,
0x00000000,
0x930e0008,
0x930e000c,
0x39800000,
0x00098200,
0xd8140000,
0x48000000,
0x00050045,
0x00060053,
0x280b0008,
0x88d10000,
0x00098200,
0x41800000,
0x00050844,
0x7dc97378,
0x39ce0008,
0x54c607fe,
0x000900ab,
0x396bfff8,
0x3a060000,
0x00098200,
0x48000000,
0x00050024,
0x00060054,
0x280b0010,
0x80ce0008,
0xc84e0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x89110000,
0x00098200,
0x7dc97378,
0x2c060000,
0x00098200,
0x40820000,
0x00050844,
0x39ce0010,
0x550807fe,
0x000900ab,
0xd8490000,
0x396bfff0,
0xd8290008,
0x3a080000,
0x00098200,
0x48000000,
0x00050024,
0x00060055,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x40820000,
0x00050844,
0x88030000,
0x00098200,
0x81030000,
0x00098200,
0x00000000,
0x80830000,
0x00098200,
0x28000000,
0x00090200,
0x81230000,
0x00098200,
0x28880000,
0x80030000,
0x00098200,
0x7f844840,
0x820efff8,
0x4f013342,
0x7d245a14,
0x4f3e1102,
0x7c890040,
0x4f18cb82,
0x92010008,
0x4f182b82,
0x91d20000,
0x00098200,
0x41980000,
0x00050844,
0x0006000b,
0x39ce0008,
0x396bfff8,
0x3929fff8,
0x91230000,
0x00098200,
0x39000000,
0x91d20000,
0x00098200,
0x0006000c,
0x7c085800,
0x7c0e44ae,
0x41820000,
0x00050803,
0x7c0445ae,
0x39080008,
0x48000000,
0x0005000c,
0x0006000d,
0x38a00000,
0x7c751b78,
0x38c00000,
0x48000001,
0x00050021,
0x0006000e,
0x81350000,
0x00098200,
0x28030000,
0x00090200,
0x80d50000,
0x00098200,
0x38000000,
0x00098200,
0x81d20000,
0x00098200,
0x90110000,
0x00098200,
0x41810000,
0x00050808,
0x00000000,
0x7d893050,
0x80120000,
0x00098200,
0x280c0000,
0x7d0e6214,
0x41820000,
0x00050806,
0x7c080040,
0x39000000,
0x41810000,
0x00050809,
0x38ccfff8,
0x91350000,
0x00098200,
0x0006000f,
0x7c083040,
0x7c0944ae,
0x7c0e45ae,
0x39080008,
0x40820000,
0x0005080f,
0x00060010,
0x72000000,
0x00090200,
0x39000000,
0x00098200,
0x3a8efff8,
0x910efff8,
0x398c0010,
0x00060011,
0x92010008,
0x7d936378,
0x41820000,
0x00050817,
0x48000000,
0x00050018,
0x00060012,
0x72000000,
0x00090200,
0x38c6fff8,
0x39000000,
0x00098200,
0xc8060000,
0x90d50000,
0x00098200,
0x39800000,
0x00098200,
0x910efff8,
0x3a8efff8,
0xd80e0000,
0x48000000,
0x00050011,
0x00060013,
0x7e439378,
0x558400fe,
0x000900ab,
0x48000001,
0x00030000,
0x38600000,
0x48000000,
0x0005000e,
0x00060056,
0x00000000,
0x806a0000,
0x00098200,
0x88030000,
0x00098200,
0x81030000,
0x00098200,
0x80830000,
0x00098200,
0x28000000,
0x00090200,
0x81230000,
0x00098200,
0x28880000,
0x80030000,
0x00098200,
0x7f844840,
0x820efff8,
0x4f013342,
0x7d245a14,
0x4f3e1102,
0x7c890040,
0x4f18cb82,
0x92010008,
0x4f182b82,
0x91d20000,
0x00098200,
0x41980000,
0x00050844,
0x0006000b,
0x91230000,
0x00098200,
0x39000000,
0x91d20000,
0x00098200,
0x0006000c,
0x7c085800,
0x7c0e44ae,
0x41820000,
0x00050803,
0x7c0445ae,
0x39080008,
0x48000000,
0x0005000c,
0x0006000d,
0x38a00000,
0x7c751b78,
0x38c00000,
0x48000001,
0x00050021,
0x0006000e,
0x81350000,
0x00098200,
0x28030000,
0x00090200,
0x80d50000,
0x00098200,
0x38000000,
0x00098200,
0x00000000,
0x81d20000,
0x00098200,
0x90110000,
0x00098200,
0x41810000,
0x00050808,
0x7d893050,
0x80120000,
0x00098200,
0x280c0000,
0x7d0e6214,
0x41820000,
0x00050806,
0x7c080040,
0x39000000,
0x41810000,
0x00050809,
0x38ccfff8,
0x91350000,
0x00098200,
0x0006000f,
0x7c083040,
0x7c0944ae,
0x7c0e45ae,
0x39080008,
0x40820000,
0x0005080f,
0x00060010,
0x72000000,
0x00090200,
0x7dd47378,
0x398c0008,
0x00060011,
0x92010008,
0x7d936378,
0x41820000,
0x00050817,
0x48000000,
0x00050018,
0x00060012,
0x7e439378,
0x7ea4ab78,
0x48000001,
0x0003000d,
0x00060013,
0x7e439378,
0x558400fe,
0x000900ab,
0x48000001,
0x00030000,
0x38600000,
0x48000000,
0x0005000e,
0x00060057,
0x80120000,
0x00098200,
0x00000000,
0x7d0e5a14,
0x91d20000,
0x00098200,
0x70000000,
0x00090200,
0x91120000,
0x00098200,
0x38600000,
0x00098200,
0x41820000,
0x00050844,
0x93120000,
0x00098200,
0x98720000,
0x00098200,
0x48000000,
0x0005001a,
0x00060058,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x54a5007e,
0x00060049,
0x820efff8,
0x90aefff8,
0x3a8efff8,
0x906efffc,
0x00060059,
0x39800000,
0x00098200,
0x00060045,
0x72000000,
0x00090200,
0x7d936378,
0x40820000,
0x00050818,
0x80f0fffc,
0x54ea5d78,
0x0006000f,
0x7c0a6040,
0x54e0dd78,
0x41810000,
0x00050806,
0x80f00000,
0x3a100004,
0x7dc0a050,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00060010,
0x390cfff8,
0x398c0008,
0x7ef4412e,
0x48000000,
0x0005000f,
0x0006005a,
0x00000000,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x0003000e,
0x48000000,
0x00050047,
0x0006005b,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x0003000f,
0x48000000,
0x00050047,
0x0006005c,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x00030010,
0x48000000,
0x00050047,
0x0006005d,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x00030011,
0x48000000,
0x00050047,
0x0006005e,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x00000000,
0x48000001,
0x00030012,
0x48000000,
0x00050047,
0x0006005f,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x00030013,
0x48000000,
0x00050047,
0x00060060,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x00030014,
0x48000000,
0x00050047,
0x00060061,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x00030015,
0x48000000,
0x00050047,
0x00060062,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x00030016,
0x48000000,
0x00050047,
0x00060063,
0x00000000,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x00030017,
0x48000000,
0x00050047,
0x00060064,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x00030018,
0x48000000,
0x00050047,
0x00060065,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x00030019,
0x48000000,
0x00050047,
0x00060066,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x0003001a,
0x48000000,
0x00050047,
0x00060067,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x00000000,
0x48000001,
0x0003001b,
0x48000000,
0x00050047,
0x00060068,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x48000001,
0x0003001c,
0x48000000,
0x00050047,
0x00060069,
0x280b0010,
0x80ae0000,
0xc82e0000,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x7c06b040,
0x40800000,
0x00050844,
0x48000001,
0x0003001d,
0x48000000,
0x00050047,
0x0006006a,
0x280b0010,
0x80ae0000,
0xc82e0000,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x7c06b040,
0x40800000,
0x00050844,
0x48000001,
0x0003001e,
0x48000000,
0x00050047,
0x0006006b,
0x280b0010,
0x80ae0000,
0xc82e0000,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x00000000,
0x7c06b040,
0x40800000,
0x00050844,
0x48000001,
0x0003001f,
0x48000000,
0x00050047,
0x0006006c,
0x0006006d,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0xc84a0000,
0x00098200,
0xfc2100b2,
0x48000000,
0x00050047,
0x0006006e,
0x280b0010,
0x80ae0000,
0xc82e0000,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x7c06b040,
0x40800000,
0x00050844,
0xfc40101e,
0xd8410008,
0x8061000c,
0x48000001,
0x00030020,
0x48000000,
0x00050047,
0x0006006f,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x38710000,
0x00098200,
0x820efff8,
0x48000001,
0x00030021,
0x81110000,
0x00098200,
0x3a8efff8,
0x6d088000,
0x91010024,
0xc8410020,
0xfc42f828,
0xd8340000,
0x39800000,
0x00098200,
0x00000000,
0xd8540008,
0x48000000,
0x00050045,
0x00060070,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x386efff8,
0x820efff8,
0x48000001,
0x00030022,
0x3a8efff8,
0xd82e0000,
0x39800000,
0x00098200,
0x48000000,
0x00050045,
0x00060071,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x39000008,
0x0006000b,
0x7c8e402e,
0x7c4e44ae,
0x7c885840,
0x7c04b040,
0x40840000,
0x00050847,
0x40800000,
0x00050844,
0xfc011028,
0x39080008,
0xfc2008ae,
0x48000000,
0x0005000b,
0x00060072,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x39000008,
0x0006000b,
0x7c8e402e,
0x7c4e44ae,
0x7c885840,
0x7c04b040,
0x40840000,
0x00050847,
0x40800000,
0x00050844,
0xfc011028,
0x39080008,
0xfc20106e,
0x48000000,
0x0005000b,
0x00060073,
0x00000000,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x40820000,
0x00050844,
0x80630000,
0x00098200,
0x48000000,
0x00050074,
0x00060075,
0x280b0008,
0x80ae0000,
0x806e0004,
0x40820000,
0x00050844,
0x2c050000,
0x00098200,
0x40820000,
0x00050844,
0x80030000,
0x00098200,
0x89030000,
0x00098200,
0x30c0ffff,
0x7d860110,
0x91010024,
0x398c0001,
0xc8010020,
0x3a8efff8,
0x820efff8,
0xfc00f028,
0x558c1800,
0x000900a1,
0xd8140000,
0x48000000,
0x00050045,
0x00060076,
0x80110000,
0x00098200,
0x81110000,
0x00098200,
0x7c004040,
0x40800001,
0x0005084e,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x40820000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0xfc20081e,
0xd8210008,
0x8001000c,
0x3881000f,
0x38a00001,
0x280000ff,
0x41810000,
0x00050844,
0x00060077,
0x7e439378,
0x91d20000,
0x00098200,
0x00000000,
0x92010008,
0x48000001,
0x00030023,
0x81d20000,
0x00098200,
0x38a00000,
0x00098200,
0x48000000,
0x00050049,
0x00060078,
0x80110000,
0x00098200,
0x81110000,
0x00098200,
0x7c004040,
0x40800001,
0x0005084e,
0x280b0010,
0x80ae0010,
0xc80e0010,
0x800e0000,
0x806e0004,
0x41800000,
0x00050844,
0x808e0008,
0xc82e0008,
0x3920ffff,
0x41820000,
0x00050801,
0x7c05b040,
0x40800000,
0x00050844,
0xfc00001e,
0xd8010008,
0x8121000c,
0x0006000b,
0x7c04b040,
0x40800000,
0x00050844,
0x2c000000,
0x00098200,
0x40820000,
0x00050844,
0xfc20081e,
0xd8210008,
0x8101000c,
0x80030000,
0x00098200,
0x7c004840,
0x38c90001,
0x41800000,
0x00050805,
0x0006000c,
0x2c080000,
0x7cc80214,
0x40810000,
0x00050807,
0x0006000d,
0x7ca84850,
0x38830000,
0x00098200,
0x7ca0fe70,
0x38a50001,
0x7c844214,
0x7ca50078,
0x48000000,
0x00050077,
0x0006000f,
0x00000000,
0x7c890050,
0x7c84fe70,
0x7cc62078,
0x7d203214,
0x48000000,
0x0005000c,
0x00060011,
0x30a8ffff,
0x7ca52910,
0x7cc4fe70,
0x7cc62878,
0x7cc82078,
0x39080001,
0x48000000,
0x0005000d,
0x00060079,
0x80110000,
0x00098200,
0x81110000,
0x00098200,
0x7c004040,
0x40800001,
0x0005084e,
0x280b0010,
0x80ae0000,
0x806e0004,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x40820000,
0x00050844,
0x7c06b040,
0x40800000,
0x00050844,
0xfc40101e,
0xd8410008,
0x80a1000c,
0x80030000,
0x00098200,
0x2c050000,
0x81110000,
0x00098200,
0x40810000,
0x00050802,
0x28000001,
0x3925ffff,
0x41800000,
0x00050802,
0x7c882840,
0x40820000,
0x00050844,
0x88030000,
0x00098200,
0x80910000,
0x00098200,
0x41840000,
0x00050844,
0x0006000b,
0x28090000,
0x7c0449ae,
0x3929ffff,
0x40820000,
0x0005080b,
0x48000000,
0x00050077,
0x0006000c,
0x00000000,
0x38710000,
0x00098200,
0x38a00000,
0x00098200,
0x48000000,
0x00050049,
0x0006007a,
0x80110000,
0x00098200,
0x81110000,
0x00098200,
0x7c004040,
0x40800001,
0x0005084e,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x81110000,
0x00098200,
0x40820000,
0x00050844,
0x80a30000,
0x00098200,
0x38630000,
0x00098200,
0x80910000,
0x00098200,
0x39200000,
0x7c082840,
0x38c5ffff,
0x41800000,
0x00050844,
0x0006000b,
0x2c060000,
0x7d0348ae,
0x41800000,
0x00050877,
0x7d0431ae,
0x38c6ffff,
0x39290001,
0x48000000,
0x0005000b,
0x0006007b,
0x80110000,
0x00098200,
0x81110000,
0x00098200,
0x7c004040,
0x40800001,
0x0005084e,
0x00000000,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x81110000,
0x00098200,
0x40820000,
0x00050844,
0x80a30000,
0x00098200,
0x38630000,
0x00098200,
0x80910000,
0x00098200,
0x7c082840,
0x39200000,
0x41800000,
0x00050844,
0x0006000b,
0x7c092840,
0x7d0348ae,
0x40800000,
0x00050877,
0x3808ffbf,
0x69060020,
0x3000ffe6,
0x7cc63110,
0x70c60020,
0x7d083278,
0x7d0449ae,
0x39290001,
0x48000000,
0x0005000b,
0x0006007c,
0x80110000,
0x00098200,
0x81110000,
0x00098200,
0x7c004040,
0x40800001,
0x0005084e,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x81110000,
0x00098200,
0x40820000,
0x00050844,
0x80a30000,
0x00098200,
0x38630000,
0x00098200,
0x80910000,
0x00098200,
0x00000000,
0x7c082840,
0x39200000,
0x41800000,
0x00050844,
0x0006000b,
0x7c092840,
0x7d0348ae,
0x40800000,
0x00050877,
0x3808ff9f,
0x69060020,
0x3000ffe6,
0x7cc63110,
0x70c60020,
0x7d083278,
0x7d0449ae,
0x39290001,
0x48000000,
0x0005000b,
0x0006007d,
0x280b0008,
0x80ae0000,
0x806e0004,
0x41800000,
0x00050844,
0x2c050000,
0x00098200,
0x40820000,
0x00050844,
0x48000001,
0x00030024,
0x48000000,
0x00050074,
0x0006007e,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0xfc21f02a,
0xd8210008,
0x8061000c,
0x00060074,
0x6c638000,
0x90610024,
0xc8210020,
0xfc21f828,
0x00060047,
0x820efff8,
0x3a8efff8,
0xd82efff8,
0x48000000,
0x00050059,
0x0006007f,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0xfc21f02a,
0xd8210008,
0x8061000c,
0x39000008,
0x0006000b,
0x7cce402e,
0x7c885840,
0x7c2e44ae,
0x7c06b040,
0x40840000,
0x00050874,
0xfc21f02a,
0x40800000,
0x00050844,
0x00000000,
0xd8210008,
0x8081000c,
0x7c632038,
0x39080008,
0x48000000,
0x0005000b,
0x00060080,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0xfc21f02a,
0xd8210008,
0x8061000c,
0x39000008,
0x0006000b,
0x7cce402e,
0x7c885840,
0x7c2e44ae,
0x7c06b040,
0x40840000,
0x00050874,
0xfc21f02a,
0x40800000,
0x00050844,
0xd8210008,
0x8081000c,
0x7c632378,
0x39080008,
0x48000000,
0x0005000b,
0x00060081,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0xfc21f02a,
0xd8210008,
0x8061000c,
0x39000008,
0x0006000b,
0x7cce402e,
0x7c885840,
0x7c2e44ae,
0x7c06b040,
0x40840000,
0x00050874,
0xfc21f02a,
0x40800000,
0x00050844,
0xd8210008,
0x8081000c,
0x7c632278,
0x39080008,
0x48000000,
0x0005000b,
0x00060082,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0xfc21f02a,
0xd8210008,
0x8061000c,
0x5460403e,
0x5060c00e,
0x5060c42e,
0x7c030378,
0x48000000,
0x00050074,
0x00060083,
0x280b0008,
0x80ae0000,
0xc82e0000,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x00000000,
0xfc21f02a,
0xd8210008,
0x8061000c,
0x7c6318f8,
0x48000000,
0x00050074,
0x00060084,
0x280b0010,
0x80ae0000,
0xc82e0000,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x7c06b040,
0x40800000,
0x00050844,
0xfc21f02a,
0xfc42f02a,
0xd8210008,
0x8061000c,
0xd8410008,
0x8081000c,
0x548406fe,
0x7c632030,
0x48000000,
0x00050074,
0x00060085,
0x280b0010,
0x80ae0000,
0xc82e0000,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x7c06b040,
0x40800000,
0x00050844,
0xfc21f02a,
0xfc42f02a,
0xd8210008,
0x8061000c,
0xd8410008,
0x8081000c,
0x548406fe,
0x7c632430,
0x48000000,
0x00050074,
0x00060086,
0x280b0010,
0x80ae0000,
0xc82e0000,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x7c06b040,
0x40800000,
0x00050844,
0xfc21f02a,
0xfc42f02a,
0xd8210008,
0x8061000c,
0xd8410008,
0x8081000c,
0x548406fe,
0x7c632630,
0x48000000,
0x00050074,
0x00060087,
0x280b0010,
0x80ae0000,
0xc82e0000,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x7c06b040,
0x40800000,
0x00050844,
0xfc21f02a,
0xfc42f02a,
0xd8210008,
0x8061000c,
0xd8410008,
0x8081000c,
0x5c63203e,
0x48000000,
0x00050074,
0x00060088,
0x00000000,
0x280b0010,
0x80ae0000,
0xc82e0000,
0x80ce0008,
0xc84e0008,
0x41800000,
0x00050844,
0x7c05b040,
0x40800000,
0x00050844,
0x7c06b040,
0x40800000,
0x00050844,
0xfc21f02a,
0xfc42f02a,
0xd8210008,
0x8061000c,
0xd8410008,
0x8081000c,
0x7c8400d0,
0x5c63203e,
0x48000000,
0x00050074,
0x00060044,
0x80ca0000,
0x00098200,
0x7d0e5a14,
0x820efff8,
0x38080000,
0x00098200,
0x81320000,
0x00098200,
0x92010008,
0x7c004840,
0x91d20000,
0x00098200,
0x91120000,
0x00098200,
0x7e439378,
0x41810000,
0x00050805,
0x7cc903a6,
0x4e800421,
0x81d20000,
0x00098200,
0x2c030000,
0x546c1800,
0x000900a1,
0x3a8efff8,
0x41810000,
0x00050845,
0x0006000b,
0x80120000,
0x00098200,
0x814efffc,
0x7d6e0050,
0x40820000,
0x00050828,
0x820a0000,
0x00098200,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54f4dd78,
0x7c11402e,
0x7e947214,
0x7c0903a6,
0x4e800420,
0x00060028,
0x72000000,
0x00090200,
0x56080038,
0x40820000,
0x00050803,
0x80f0fffc,
0x54e8dd78,
0x0006000d,
0x00000000,
0x7d287050,
0x48000000,
0x00050024,
0x0006000f,
0x38800000,
0x00098200,
0x48000001,
0x00030000,
0x81d20000,
0x00098200,
0x7c000000,
0x48000000,
0x0005000b,
0x0006004e,
0x7ea802a6,
0x91d20000,
0x00098200,
0x7c0e5a14,
0x92010008,
0x90120000,
0x00098200,
0x7e439378,
0x48000001,
0x00030025,
0x81d20000,
0x00098200,
0x7ea803a6,
0x80120000,
0x00098200,
0x7d6e0050,
0x814efffc,
0x4e800020,
0x00060089,
0x00000000,
0x7c810808,
0x00000000,
0x0006008a,
0x88d10000,
0x00098200,
0x70c00000,
0x00090200,
0x41820000,
0x00050801,
0x0006000f,
0x39080000,
0x00098200,
0x7c11402e,
0x7c0903a6,
0x4e800420,
0x0006008b,
0x88d10000,
0x00098200,
0x81310000,
0x00098200,
0x70c00000,
0x00090200,
0x54c007c0,
0x000900ab,
0x40820000,
0x0005080f,
0x2c800000,
0x3529ffff,
0x41860000,
0x0005080f,
0x91310000,
0x00098200,
0x41820000,
0x00050801,
0x40840000,
0x0005080f,
0x0006000b,
0x7e439378,
0x9261000c,
0x7e048378,
0x91d20000,
0x00098200,
0x48000001,
0x00030026,
0x0006000d,
0x81d20000,
0x00098200,
0x0006000e,
0x00000000,
0x80f0fffc,
0x54e815ba,
0x54ea5d78,
0x39080000,
0x00098200,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006008c,
0x3a100004,
0x826affec,
0x48000000,
0x0005000e,
0x0006008d,
0x00000000,
0x7c810808,
0x00000000,
0x0006008e,
0x7e048378,
0x00000000,
0x48000000,
0x00050001,
0x00000000,
0x0006008f,
0x00000000,
0x62040001,
0x0006000b,
0x00000000,
0x7c0e5a14,
0x92010008,
0x7e439378,
0x91d20000,
0x00098200,
0x7e8ea050,
0x90120000,
0x00098200,
0x48000001,
0x00030027,
0x81d20000,
0x00098200,
0x80120000,
0x00098200,
0x93010008,
0x7d6e0050,
0x7e8ea214,
0x814efffc,
0x7c6903a6,
0x4e800420,
0x00060090,
0x00000000,
0x7c810808,
0x00000000,
0x00060091,
0x00000000,
0x7c810808,
0x00000000,
0x00060092,
0x48000000,
0x0003000e,
0x00060093,
0x48000000,
0x0003000f,
0x00060094,
0x00000000,
0x48000000,
0x00030028,
0x00000000,
0x00060095,
0x00000000,
0x7c810808,
0x00000000,
0x00060096,
0x00000000,
0x7c810808,
0x00000000,
0x00060097,
0x28030001,
0x41820000,
0x00050801,
0x41810000,
0x00050802,
0xfc21102a,
0x4e800020,
0x0006000b,
0xfc211028,
0x4e800020,
0x0006000c,
0x28030003,
0x41820000,
0x00050801,
0x41810000,
0x00050802,
0xfc2100b2,
0x4e800020,
0x0006000b,
0xfc211024,
0x4e800020,
0x0006000c,
0x28030005,
0x41820000,
0x00050801,
0x41810000,
0x00050802,
0x9421ffe0,
0xd9c10010,
0xd9e10018,
0x7c0802a6,
0xfdc00890,
0xfc211024,
0x90010024,
0xfde01090,
0x48000001,
0x0003000e,
0x80010024,
0xfc2103f2,
0x7c0803a6,
0xfc2e0828,
0xc9c10010,
0xc9e10018,
0x38210020,
0x4e800020,
0x0006000b,
0x48000000,
0x0003001d,
0x0006000c,
0x28030007,
0x41820000,
0x00050801,
0x41810000,
0x00050802,
0xfc200850,
0x4e800020,
0x0006000b,
0xfc200a10,
0x4e800020,
0x0006000c,
0x7c810808,
0x00060098,
0x00000000,
0x7c810808,
0x00000000,
0x00080000,
0x00000000,
0x7c0ea02e,
0x3a100004,
0x7c0ea4ae,
0x7d0e602e,
0x7c00b040,
0x8130fffc,
0x7c2e64ae,
0x7c88b040,
0x552993ba,
0x40800000,
0x00050834,
0x3d290000,
0x00098200,
0x40840000,
0x00050834,
0xfc000800,
0x00000000,
0x40800000,
0x00050801,
0x00000000,
0x41800000,
0x00050801,
0x00000000,
0x4c001382,
0x40800000,
0x00050801,
0x00000000,
0x4c001382,
0x41800000,
0x00050801,
0x00000000,
0x7e104a14,
0x0006000b,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c14706e,
0x81300000,
0xc8140000,
0x3a100004,
0x7d0c706e,
0x7c00b040,
0x552993ba,
0xc82c0000,
0x7c88b040,
0x3d290000,
0x00098200,
0x40800000,
0x00050805,
0x40840000,
0x00050805,
0xfc000800,
0x00000000,
0x40820000,
0x00050801,
0x7e104a14,
0x00000000,
0x41820000,
0x00050801,
0x7e104a14,
0x00000000,
0x0006000b,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000f,
0x80940004,
0x80ac0004,
0x7c0600f8,
0x7c004040,
0x28860000,
0x00090200,
0x2b060000,
0x00090200,
0x7e842840,
0x4c222902,
0x4c161342,
0x4c42b202,
0x7e158378,
0x4c420b82,
0x4c000b82,
0x00000000,
0x40820000,
0x00050806,
0x7e104a14,
0x00060010,
0x00000000,
0x41820000,
0x00050806,
0x7e104a14,
0x00060010,
0x00000000,
0x41800000,
0x0005080b,
0x41980000,
0x0005080b,
0x81240000,
0x00098200,
0x38c00000,
0x00098200,
0x28090000,
0x41820000,
0x0005080b,
0x89290000,
0x00098200,
0x71290000,
0x00090200,
0x40820000,
0x0005080b,
0x7eb0ab78,
0x48000000,
0x00050039,
0x00000000,
0x7c14706e,
0x558c007e,
0x000900ab,
0x80d40004,
0x80f00000,
0x218cfffc,
0x3a100004,
0x7d0f602e,
0x20000000,
0x00098200,
0x7d064050,
0x7c004378,
0x54e993ba,
0x20000000,
0x3d290000,
0x00098200,
0x7d084110,
0x00000000,
0x7d294078,
0x00000000,
0x7d294038,
0x00000000,
0x7e104a14,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c0ea02e,
0x7c0ea4ae,
0x3a100004,
0x7c2f64ae,
0x80f0fffc,
0x7c00b040,
0x40800000,
0x00050805,
0xfc000800,
0x54e993ba,
0x3d290000,
0x00098200,
0x00000000,
0x40820000,
0x00050805,
0x7e104a14,
0x0006000f,
0x00000000,
0x41820000,
0x00050802,
0x0006000b,
0x7e104a14,
0x0006000c,
0x00000000,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x0006000f,
0x54e993ba,
0x3d290000,
0x00098200,
0x48000000,
0x0005000b,
0x00000000,
0x7c0ea02e,
0x558800fe,
0x000900ab,
0x80f00000,
0x7d0840f8,
0x3a100004,
0x7c080050,
0x54e993ba,
0x3000ffff,
0x3d290000,
0x00098200,
0x7d084110,
0x00000000,
0x7d294038,
0x00000000,
0x7d294078,
0x00000000,
0x7e104a14,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c0e602e,
0x80f00000,
0x3a100004,
0x00000000,
0x20000000,
0x00098200,
0x54e993ba,
0x7d084110,
0x3d290000,
0x00098200,
0x00000000,
0x7d294078,
0x00000000,
0x7d294038,
0x00000000,
0x7e104a14,
0x00000000,
0x39000000,
0x00098200,
0x7c0e64ae,
0x7c004040,
0x00000000,
0x40800000,
0x00050801,
0x00000000,
0x41800000,
0x00050801,
0x00000000,
0x3e100000,
0x00098200,
0x54e993ba,
0x7c0ea5ae,
0x7e104a14,
0x0006000b,
0x00000000,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x80f00000,
0x3a100004,
0x7c0e64ae,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x80f00000,
0x3a100004,
0x7c0e602e,
0x21000000,
0x00098200,
0x7c004114,
0x7c0ea12e,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7d0c706e,
0x800c0004,
0x7c08b040,
0x40800000,
0x0005083c,
0x6d088000,
0x80f00000,
0x3a100004,
0x7d14716e,
0x90140004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c0c706e,
0x806c0004,
0x2c000000,
0x00098200,
0x40820000,
0x00050802,
0x80630000,
0x00098200,
0x0006000b,
0x90610024,
0xc8010020,
0xfc00f028,
0x80f00000,
0x3a100004,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000c,
0x2c000000,
0x00098200,
0x40820000,
0x0005083e,
0x00000000,
0x81230000,
0x00098200,
0x28090000,
0x40820000,
0x00050809,
0x0006000d,
0x00000000,
0x0006003f,
0x48000001,
0x00030024,
0x48000000,
0x0005000b,
0x00000000,
0x00060013,
0x88090000,
0x00098200,
0x70000000,
0x00090200,
0x40820000,
0x0005080d,
0x48000000,
0x0005003e,
0x00000000,
0x7c6e502e,
0x7c0e54ae,
0x7c2f5cae,
0x7c03b040,
0x40800000,
0x0005083a,
0x00000000,
0x7c6e502e,
0x7c2e54ae,
0x7c0f5cae,
0x7c03b040,
0x40800000,
0x0005083b,
0x00000000,
0x7c6e502e,
0x7c8e582e,
0x7c0e54ae,
0x7c2e5cae,
0x7c03b040,
0x7c84b040,
0x4c002202,
0x40800000,
0x0005083d,
0x00000000,
0x80f00000,
0x3a100004,
0xfc00082a,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c6e502e,
0x7c0e54ae,
0x7c2f5cae,
0x7c03b040,
0x40800000,
0x0005083a,
0x00000000,
0x7c6e502e,
0x7c2e54ae,
0x7c0f5cae,
0x7c03b040,
0x40800000,
0x0005083b,
0x00000000,
0x7c6e502e,
0x7c8e582e,
0x7c0e54ae,
0x7c2e5cae,
0x7c03b040,
0x7c84b040,
0x4c002202,
0x40800000,
0x0005083d,
0x00000000,
0x80f00000,
0x3a100004,
0xfc000828,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c6e502e,
0x7c0e54ae,
0x7c2f5cae,
0x7c03b040,
0x40800000,
0x0005083a,
0x00000000,
0x7c6e502e,
0x7c2e54ae,
0x7c0f5cae,
0x7c03b040,
0x40800000,
0x0005083b,
0x00000000,
0x7c6e502e,
0x7c8e582e,
0x7c0e54ae,
0x7c2e5cae,
0x7c03b040,
0x7c84b040,
0x4c002202,
0x40800000,
0x0005083d,
0x00000000,
0x80f00000,
0x3a100004,
0xfc000072,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c6e502e,
0x7c0e54ae,
0x7c2f5cae,
0x7c03b040,
0x40800000,
0x0005083a,
0x00000000,
0x7c6e502e,
0x7c2e54ae,
0x7c0f5cae,
0x7c03b040,
0x40800000,
0x0005083b,
0x00000000,
0x7c6e502e,
0x7c8e582e,
0x7c0e54ae,
0x7c2e5cae,
0x7c03b040,
0x7c84b040,
0x4c002202,
0x40800000,
0x0005083d,
0x00000000,
0x80f00000,
0x3a100004,
0xfc000824,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c6e502e,
0x7dce54ae,
0x7def5cae,
0x7c03b040,
0x40800000,
0x0005083a,
0x00000000,
0x7c6e502e,
0x7dee54ae,
0x7dcf5cae,
0x7c03b040,
0x40800000,
0x0005083b,
0x00000000,
0x7c6e502e,
0x7c8e582e,
0x7dce54ae,
0x7dee5cae,
0x7c03b040,
0x7c84b040,
0x4c002202,
0x40800000,
0x0005083d,
0x00000000,
0x00060099,
0xfc2e7824,
0x48000001,
0x0003000e,
0xfc0103f2,
0x80f00000,
0x3a100004,
0xfc0e0028,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c6e502e,
0x7dce54ae,
0x7def5cae,
0x7c03b040,
0x40800000,
0x0005083a,
0x00000000,
0x7c6e502e,
0x7dee54ae,
0x7dcf5cae,
0x7c03b040,
0x40800000,
0x0005083b,
0x00000000,
0x7c6e502e,
0x7c8e582e,
0x7dce54ae,
0x7dee5cae,
0x7c03b040,
0x7c84b040,
0x4c002202,
0x40800000,
0x0005083d,
0x00000000,
0x48000000,
0x00050099,
0x00000000,
0x7c6e502e,
0x7c2e54ae,
0x7c8e582e,
0x7c4e5cae,
0x7c03b040,
0x7c84b040,
0x4c002202,
0x40800000,
0x0005083d,
0x48000001,
0x0003001d,
0x7c2ea5ae,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7caa5850,
0x91d20000,
0x00098200,
0x7c8e5a14,
0x7d555378,
0x0006002a,
0x92010008,
0x7e439378,
0x54a500fe,
0x000900ab,
0x48000001,
0x00030029,
0x28030000,
0x81d20000,
0x00098200,
0x40820000,
0x00050835,
0x7c0eacae,
0x7c0ea5ae,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x5588007e,
0x000900ab,
0x2108fffc,
0x7c0f402e,
0x39200000,
0x00098200,
0x80f00000,
0x3a100004,
0x7d34716e,
0x90140004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x5588007e,
0x000900ab,
0x2108fffc,
0x7c0f402e,
0x39200000,
0x00098200,
0x80f00000,
0x3a100004,
0x7d34716e,
0x90140004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x558c6800,
0x000900a1,
0x7d8c8670,
0x6d8c8000,
0x91810024,
0xc8010020,
0xfc00f828,
0x80f00000,
0x3a100004,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c0f64ae,
0x80f00000,
0x3a100004,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x558800fe,
0x000900ab,
0x7d0040f8,
0x80f00000,
0x3a100004,
0x7c0ea12e,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7eeea12e,
0x3a940008,
0x0006000b,
0x7eeea12e,
0x7c146000,
0x3a940008,
0x41800000,
0x0005080b,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x80f00000,
0x3a100004,
0x814efffc,
0x558c007e,
0x000900ab,
0x398c0000,
0x00098200,
0x7d4a602e,
0x810a0000,
0x00098200,
0xc8080000,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x814efffc,
0x5694007e,
0x000900ab,
0x3a940000,
0x00098200,
0x7c0c74ee,
0x7d4aa02e,
0x88ca0000,
0x00098200,
0x808a0000,
0x00098200,
0x70c60000,
0x00090200,
0x880a0000,
0x00098200,
0x812c0000,
0xd8040000,
0x28800000,
0x810c0004,
0x4c423382,
0x39290000,
0x00098200,
0x40820000,
0x00050802,
0x0006000b,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000c,
0x28090000,
0x00090200,
0x40800000,
0x0005080b,
0x88c80000,
0x00098200,
0x70c60000,
0x00090200,
0x38710000,
0x00098200,
0x41820000,
0x0005080b,
0x48000001,
0x0003002a,
0x48000000,
0x0005000b,
0x00000000,
0x80f00000,
0x3a100004,
0x814efffc,
0x5588007e,
0x000900ab,
0x5694007e,
0x000900ab,
0x2108fffc,
0x3a940000,
0x00098200,
0x7d0f402e,
0x7d4aa02e,
0x88ca0000,
0x00098200,
0x808a0000,
0x00098200,
0x70c60000,
0x00090200,
0x88c80000,
0x00098200,
0x892a0000,
0x00098200,
0x38000000,
0x00098200,
0x91040004,
0x90040000,
0x40820000,
0x00050802,
0x0006000b,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000c,
0x70c60000,
0x00090200,
0x28890000,
0x4c423382,
0x38710000,
0x00098200,
0x41820000,
0x0005080b,
0x48000001,
0x0003002a,
0x48000000,
0x0005000b,
0x00000000,
0x80f00000,
0x3a100004,
0x814efffc,
0x5694007e,
0x000900ab,
0x3a940000,
0x00098200,
0x7c0f64ae,
0x7d4aa02e,
0x810a0000,
0x00098200,
0xd8080000,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x80f00000,
0x3a100004,
0x814efffc,
0x5694007e,
0x000900ab,
0x3a940000,
0x00098200,
0x558000fe,
0x000900ab,
0x7d4aa02e,
0x7c0000f8,
0x810a0000,
0x00098200,
0x90080000,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x81120000,
0x00098200,
0x5580007e,
0x000900ab,
0x7e100214,
0x3e100000,
0x00098200,
0x91d20000,
0x00098200,
0x28080000,
0x7e439378,
0x41820000,
0x00050801,
0x7c8ea214,
0x48000001,
0x0003002b,
0x81d20000,
0x00098200,
0x0006000b,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x5588007e,
0x000900ab,
0x91d20000,
0x00098200,
0x2108fffc,
0x92010008,
0x7c8f402e,
0x7e439378,
0x80aefffc,
0x48000001,
0x0003002c,
0x81d20000,
0x00098200,
0x38000000,
0x00098200,
0x7c14716e,
0x90740004,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x80110000,
0x00098200,
0x7e439378,
0x81110000,
0x00098200,
0x91d20000,
0x00098200,
0x7c004040,
0x92010008,
0x40800000,
0x00050805,
0x0006000b,
0x00000000,
0x5584ed7e,
0x558596fe,
0x2c0407ff,
0x41820000,
0x00050803,
0x0006000c,
0x48000001,
0x0003002d,
0x00000000,
0x5588007e,
0x000900ab,
0x2108fffc,
0x7c8f402e,
0x48000001,
0x0003002e,
0x00000000,
0x81d20000,
0x00098200,
0x38000000,
0x00098200,
0x7c14716e,
0x90740004,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x0006000d,
0x38800801,
0x48000000,
0x0005000c,
0x00000000,
0x0006000f,
0x7d956378,
0x48000001,
0x0003002f,
0x7eacab78,
0x7e439378,
0x48000000,
0x0005000b,
0x00000000,
0x812efffc,
0x5588007e,
0x000900ab,
0x81490000,
0x00098200,
0x2108fffc,
0x7d6f402e,
0x00000000,
0x48000000,
0x0005009a,
0x00000000,
0x48000000,
0x0005009b,
0x00000000,
0x7c6a706e,
0x7c8b706e,
0x814a0004,
0xc80b0000,
0x2c030000,
0x00098200,
0x7c84b040,
0x40820000,
0x0005082f,
0x40840000,
0x00050805,
0xfc20001e,
0xfc40f02a,
0xd8210008,
0x800a0000,
0x00098200,
0xfc42f028,
0x8121000c,
0x810a0000,
0x00098200,
0xfc801000,
0x7c004840,
0x4c213202,
0x55291800,
0x000900a1,
0x40810000,
0x0005082f,
0x7c08482e,
0x7dc84cae,
0x2c000000,
0x00098200,
0x41820000,
0x00050802,
0x0006000b,
0x80f00000,
0x3a100004,
0x7dcea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000c,
0x812a0000,
0x00098200,
0x28090000,
0x41820000,
0x0005080b,
0x88090000,
0x00098200,
0x70000000,
0x00090200,
0x40820000,
0x0005080b,
0x48000000,
0x0005002f,
0x0006000f,
0x2c040000,
0x00098200,
0x40820000,
0x0005082f,
0x816b0004,
0x48000000,
0x0005009a,
0x00000000,
0x7c6a706e,
0x5568007e,
0x000900ab,
0x814a0004,
0x2108fffc,
0x2c030000,
0x00098200,
0x7d6f402e,
0x40820000,
0x0005082c,
0x0006009a,
0x800a0000,
0x00098200,
0x810b0000,
0x00098200,
0x812a0000,
0x00098200,
0x7d080038,
0x55002800,
0x000900a1,
0x55081800,
0x000900a1,
0x7d080050,
0x7d294214,
0x0006000b,
0x80690000,
0x00098200,
0x80090000,
0x00098200,
0x80890000,
0x00098200,
0x81090000,
0x00098200,
0x2c030000,
0x00098200,
0x40820000,
0x00050804,
0x7c005800,
0x40820000,
0x00050804,
0x2c040000,
0x00098200,
0x41820000,
0x00050805,
0x0006000d,
0x7c94716e,
0x91140004,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000e,
0x81290000,
0x00098200,
0x00000000,
0x28090000,
0x40820000,
0x0005080b,
0x38800000,
0x00098200,
0x0006000f,
0x812a0000,
0x00098200,
0x28090000,
0x41820000,
0x0005080d,
0x88090000,
0x00098200,
0x70000000,
0x00090200,
0x40820000,
0x0005080d,
0x48000000,
0x0005002d,
0x00000000,
0x7c6a706e,
0x814a0004,
0x556000fe,
0x000900ab,
0x2c030000,
0x00098200,
0x40820000,
0x0005082e,
0x810a0000,
0x00098200,
0x812a0000,
0x00098200,
0x7c004040,
0x40800000,
0x0005082e,
0x7d09582e,
0x7c095cae,
0x2c080000,
0x00098200,
0x41820000,
0x00050805,
0x0006000b,
0x80f00000,
0x3a100004,
0x7c0ea5ae,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000f,
0x812a0000,
0x00098200,
0x28090000,
0x41820000,
0x0005080b,
0x89290000,
0x00098200,
0x71290000,
0x00090200,
0x40820000,
0x0005080b,
0x48000000,
0x0005002e,
0x00000000,
0x7c6a706e,
0x7c8b706e,
0x814a0004,
0xc80b0000,
0x2c030000,
0x00098200,
0x7c84b040,
0x40820000,
0x00050833,
0x40840000,
0x00050805,
0xfc20001e,
0xfc40f02a,
0xd8210008,
0x800a0000,
0x00098200,
0xfc42f028,
0x8121000c,
0x810a0000,
0x00098200,
0xfc801000,
0x7c004840,
0x4c213202,
0x55201800,
0x000900a1,
0x40810000,
0x00050833,
0x7d28002e,
0x88ca0000,
0x00098200,
0x7dcea4ae,
0x2c090000,
0x00098200,
0x41820000,
0x00050803,
0x0006000b,
0x70c90000,
0x00090200,
0x7dc805ae,
0x40820000,
0x00050807,
0x0006000c,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000d,
0x812a0000,
0x00098200,
0x28090000,
0x41820000,
0x0005080b,
0x89290000,
0x00098200,
0x71290000,
0x00090200,
0x40820000,
0x0005080b,
0x48000000,
0x00050033,
0x0006000f,
0x00000000,
0x2c040000,
0x00098200,
0x40820000,
0x00050833,
0x816b0004,
0x48000000,
0x0005009b,
0x00060011,
0x80110000,
0x00098200,
0x54c607b8,
0x91510000,
0x00098200,
0x98ca0000,
0x00098200,
0x900a0000,
0x00098200,
0x48000000,
0x0005000c,
0x00000000,
0x0006000b,
0x2c030000,
0x00098200,
0x40820000,
0x00050804,
0x7c005800,
0x40820000,
0x00050804,
0x2c040000,
0x00098200,
0x41820000,
0x00050805,
0x0006000d,
0x7c94716e,
0x91140004,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c6a706e,
0x5568007e,
0x000900ab,
0x814a0004,
0x2108fffc,
0x2c030000,
0x00098200,
0x7d6f402e,
0x40820000,
0x00050830,
0x0006009b,
0x800a0000,
0x00098200,
0x810b0000,
0x00098200,
0x812a0000,
0x00098200,
0x9b0a0000,
0x00098200,
0x7d080038,
0x7dcea4ae,
0x55002800,
0x000900a1,
0x55081800,
0x000900a1,
0x7d080050,
0x88ca0000,
0x00098200,
0x7d294214,
0x0006000b,
0x80690000,
0x00098200,
0x80090000,
0x00098200,
0x80890000,
0x00098200,
0x81090000,
0x00098200,
0x2c030000,
0x00098200,
0x40820000,
0x00050805,
0x7c005800,
0x40820000,
0x00050805,
0x2c040000,
0x00098200,
0x41820000,
0x00050804,
0x0006000c,
0x00000000,
0x70c00000,
0x00090200,
0xd9c90000,
0x00098200,
0x40820000,
0x00050807,
0x0006000d,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000e,
0x810a0000,
0x00098200,
0x28080000,
0x41820000,
0x0005080c,
0x88080000,
0x00098200,
0x70000000,
0x00090200,
0x40820000,
0x0005080c,
0x48000000,
0x00050031,
0x0006000f,
0x81290000,
0x00098200,
0x28090000,
0x40820000,
0x0005080b,
0x810a0000,
0x00098200,
0x38b10000,
0x00098200,
0x92010008,
0x7e439378,
0x28080000,
0x91d20000,
0x00098200,
0x41820000,
0x00050806,
0x88080000,
0x00098200,
0x70000000,
0x00090200,
0x41820000,
0x00050831,
0x00060010,
0x00000000,
0x38000000,
0x00098200,
0x91650004,
0x7d445378,
0x90050000,
0x48000001,
0x00030030,
0x81d20000,
0x00098200,
0xd9c30000,
0x48000000,
0x0005000d,
0x00060011,
0x80110000,
0x00098200,
0x54c607b8,
0x91510000,
0x00098200,
0x98ca0000,
0x00098200,
0x900a0000,
0x00098200,
0x48000000,
0x0005000d,
0x00000000,
0x7c6a706e,
0x814a0004,
0x556000fe,
0x000900ab,
0x2c030000,
0x00098200,
0x40820000,
0x00050832,
0x810a0000,
0x00098200,
0x812a0000,
0x00098200,
0x88ca0000,
0x00098200,
0x7c004040,
0x7dcea4ae,
0x40800000,
0x00050832,
0x7d09582e,
0x2c080000,
0x00098200,
0x41820000,
0x00050805,
0x0006000b,
0x70c00000,
0x00090200,
0x7dc95dae,
0x40820000,
0x00050807,
0x0006000c,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000f,
0x810a0000,
0x00098200,
0x28080000,
0x41820000,
0x0005080b,
0x89080000,
0x00098200,
0x71080000,
0x00090200,
0x40820000,
0x0005080b,
0x48000000,
0x00050032,
0x00060011,
0x80110000,
0x00098200,
0x00000000,
0x54c607b8,
0x91510000,
0x00098200,
0x98ca0000,
0x00098200,
0x900a0000,
0x00098200,
0x48000000,
0x0005000c,
0x00000000,
0x7e8ea214,
0x0006000b,
0x7ccf6214,
0x8094fffc,
0x3413fff8,
0x80c60004,
0x540500fe,
0x000900ab,
0x41820000,
0x00050804,
0x7ca53214,
0x81240000,
0x00098200,
0x54c81800,
0x000900a1,
0x88c40000,
0x00098200,
0x7c054840,
0x7d340214,
0x80040000,
0x00098200,
0x41810000,
0x00050805,
0x7d080214,
0x70c00000,
0x00090200,
0x0006000d,
0xc8140000,
0x3a940008,
0x7c944800,
0xd8080000,
0x39080008,
0x41840000,
0x0005080d,
0x40820000,
0x00050807,
0x0006000e,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000f,
0x91d20000,
0x00098200,
0x7e439378,
0x92010008,
0x7d956378,
0x48000001,
0x00030031,
0x7eacab78,
0x48000000,
0x0005000b,
0x00060011,
0x80110000,
0x00098200,
0x54c607b8,
0x91510000,
0x00098200,
0x98ca0000,
0x00098200,
0x900a0000,
0x00098200,
0x00000000,
0x48000000,
0x0005000e,
0x00000000,
0x7d6b9a14,
0x00000000,
0x7dc97378,
0x7c0ea06e,
0x814e0004,
0x396bfff8,
0x39ce0008,
0x2c000000,
0x00098200,
0x40820000,
0x00050825,
0x920efff8,
0x820a0000,
0x00098200,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54f4dd78,
0x7c11402e,
0x7e947214,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7d6b9a14,
0x00000000,
0x7c14706e,
0x81540004,
0x396bfff8,
0x810efff8,
0x2c000000,
0x00098200,
0x3a940008,
0x40820000,
0x00050840,
0x00060041,
0x71000000,
0x00090200,
0x88ca0000,
0x00098200,
0x69090000,
0x00090200,
0x288b0000,
0x40820000,
0x00050807,
0x0006000b,
0x914efffc,
0x39200000,
0x2b860001,
0x41860000,
0x00050803,
0x0006000c,
0x38c90008,
0x7c144cae,
0x7c865840,
0x7c0e4dae,
0x7cc93378,
0x40860000,
0x0005080c,
0x0006000d,
0x4c42ea02,
0x41820000,
0x00050805,
0x0006000e,
0x820a0000,
0x00098200,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54f4dd78,
0x7c11402e,
0x7e947214,
0x7c0903a6,
0x4e800420,
0x0006000f,
0x80e8fffc,
0x54f4dd78,
0x7d147050,
0x81080000,
0x00098200,
0x81080000,
0x00098200,
0x81e80000,
0x00098200,
0x48000000,
0x0005000e,
0x00060011,
0x71200000,
0x00090200,
0x00000000,
0x40820000,
0x0005080b,
0x7dc97050,
0x810efff8,
0x71000000,
0x00090200,
0x48000000,
0x0005000b,
0x00000000,
0x7dc97378,
0x7dcea214,
0x810effe8,
0x814effec,
0xc82efff8,
0xc80efff0,
0x910e0000,
0x914e0004,
0x2c080000,
0x00098200,
0xd82e0010,
0x39600010,
0xdc0e0008,
0x40820000,
0x00050825,
0x920efff8,
0x820a0000,
0x00098200,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54f4dd78,
0x7c11402e,
0x7e947214,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7e8ea214,
0x8154fff4,
0x8174fffc,
0x800a0000,
0x00098200,
0x810a0000,
0x00098200,
0x3a100004,
0x0006000b,
0x7c0b0040,
0x55661800,
0x000900a1,
0x40800000,
0x00050805,
0x7d28302e,
0x7c0834ae,
0x2c090000,
0x00098200,
0x80f0fffc,
0x41820000,
0x00050804,
0x91610024,
0xc8210020,
0xfc21f028,
0x396b0001,
0x3cd00000,
0x00098200,
0xd8140008,
0x54e893ba,
0x9174fffc,
0x7e083214,
0xd8340000,
0x0006000d,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000e,
0x396b0001,
0x48000000,
0x0005000b,
0x0006000f,
0x810a0000,
0x00098200,
0x7d605850,
0x812a0000,
0x00098200,
0x00060010,
0x7c0b4040,
0x55662800,
0x000900a1,
0x41810000,
0x0005080d,
0x556a1800,
0x000900a1,
0x7cca3050,
0x7d49302e,
0x7c0934ae,
0x7cc93214,
0x2c0a0000,
0x00098200,
0x80f0fffc,
0x41820000,
0x00050807,
0xc8260000,
0x00098200,
0x3d300000,
0x00098200,
0x00000000,
0xd8140008,
0x7d6b0214,
0x54e893ba,
0xd8340000,
0x396b0001,
0x7e084a14,
0x9174fffc,
0x48000000,
0x0005000d,
0x00060011,
0x396b0001,
0x48000000,
0x00050010,
0x00000000,
0x7e8ea214,
0x8014ffe8,
0x8114ffec,
0x8134fff0,
0x80d4fff8,
0x2c090000,
0x00098200,
0x2c800000,
0x00098200,
0x2f060000,
0x00098200,
0x40860000,
0x00050805,
0x89080000,
0x00098200,
0x4c42d202,
0x2f880000,
0x00098200,
0x5580007e,
0x000900ab,
0x4c42f202,
0x7cd00214,
0x40820000,
0x00050805,
0x9314fffc,
0x3e060000,
0x00098200,
0x0006000b,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000f,
0x38000000,
0x00098200,
0x39000000,
0x00098200,
0x9810ffff,
0x3e060000,
0x00098200,
0x99100003,
0x48000000,
0x0005000b,
0x00000000,
0x800efff8,
0x7d6e5a14,
0x7e8ea214,
0x396b0000,
0x00098200,
0x7d345214,
0x38cefff8,
0x7d605850,
0x288a0000,
0x7d0b3051,
0x41860000,
0x00050805,
0x3929fff0,
0x40810000,
0x00050802,
0x0006000b,
0xc80b0000,
0x396b0008,
0xd8140000,
0x7c144840,
0x7c8b3040,
0x40800000,
0x00050803,
0x3a940008,
0x41840000,
0x0005080b,
0x0006000c,
0x92f40000,
0x7c144840,
0x3a940008,
0x41800000,
0x0005080c,
0x0006000d,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000f,
0x80120000,
0x00098200,
0x3a600008,
0x40810000,
0x0005080d,
0x7d344214,
0x7c090040,
0x3a680008,
0x41810000,
0x00050807,
0x00060010,
0xc80b0000,
0x396b0008,
0xd8140000,
0x7c0b3040,
0x3a940008,
0x41800000,
0x00050810,
0x48000000,
0x0005000d,
0x00060011,
0x7e439378,
0x92920000,
0x00098200,
0x7eae5850,
0x91d20000,
0x00098200,
0x7e8ea050,
0x92010008,
0x550400fe,
0x000900ab,
0x48000001,
0x00030000,
0x81d20000,
0x00098200,
0x00000000,
0x7e8ea214,
0x7d6eaa14,
0x38cefff8,
0x48000000,
0x00050010,
0x00000000,
0x7d8c9a14,
0x00000000,
0x820efff8,
0x7e8ea214,
0x7d936378,
0x0006000b,
0x72000000,
0x00090200,
0x6a080000,
0x00090200,
0x40820000,
0x0005089c,
0x00060017,
0x80f0fffc,
0x2c0c0008,
0x392efff8,
0x396cfff8,
0x54ea5d78,
0x41820000,
0x00050803,
0x39000000,
0x0006000c,
0x38c80008,
0x7c1444ae,
0x7c065800,
0x7c0945ae,
0x41820000,
0x00050803,
0x39060008,
0x7c3434ae,
0x7c085800,
0x7c2935ae,
0x40820000,
0x0005080c,
0x0006000d,
0x0006000f,
0x7c0a6040,
0x54f4dd78,
0x41810000,
0x00050806,
0x7dd44850,
0x810efffc,
0x80f00000,
0x3a100004,
0x81080000,
0x00098200,
0x81e80000,
0x00098200,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00060010,
0x390cfff8,
0x398c0008,
0x7ee9412e,
0x48000000,
0x0005000f,
0x0006009c,
0x71090000,
0x00090200,
0x40820000,
0x00050818,
0x7dc87050,
0x820efff8,
0x48000000,
0x0005000b,
0x00000000,
0x820efff8,
0x7e8ea214,
0x7d936378,
0x72000000,
0x00090200,
0x6a080000,
0x00090200,
0x40820000,
0x0005089c,
0x80f0fffc,
0x392efff8,
0x54ea5d78,
0x00000000,
0xc8140000,
0xd8090000,
0x00000000,
0x0006000f,
0x7c0a6040,
0x54f4dd78,
0x41810000,
0x00050806,
0x7dd44850,
0x810efffc,
0x80f00000,
0x3a100004,
0x81080000,
0x00098200,
0x81e80000,
0x00098200,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00060010,
0x390cfff8,
0x398c0008,
0x7ee9412e,
0x48000000,
0x0005000f,
0x00000000,
0x7c810808,
0x00000000,
0x7c3474ee,
0xc8740000,
0x00098200,
0xc8540000,
0x00098200,
0x80d40000,
0x00098200,
0xfc21182a,
0xd8340000,
0x00098200,
0x00000000,
0x7d14706e,
0xc8340000,
0x00098200,
0x80d40000,
0x00098200,
0xc8740000,
0x00098200,
0x81340000,
0x00098200,
0xc8540000,
0x00098200,
0x7c08b040,
0x7f86b040,
0x7c89b040,
0x4c00e202,
0x4c002202,
0x40800000,
0x00050842,
0x00000000,
0x2d860000,
0x00000000,
0x558c007e,
0x000900ab,
0x00000000,
0xd8340000,
0x00098200,
0x00000000,
0x7d906214,
0x00000000,
0xfc011000,
0x00000000,
0x3e0c0000,
0x00098200,
0x00000000,
0x418c0000,
0x00050805,
0x00000000,
0x41810000,
0x00050803,
0x00000000,
0x41810000,
0x00050802,
0x0006000b,
0x3e0c0000,
0x00098200,
0x00000000,
0x40810000,
0x00070800,
0x00000000,
0x0006000c,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000f,
0x00000000,
0x40800000,
0x0005080c,
0x0006000d,
0x3e0c0000,
0x00098200,
0x00000000,
0x40800000,
0x0005080b,
0x00000000,
0x40800000,
0x00070800,
0x00000000,
0x48000000,
0x0005000c,
0x00000000,
0x7c810808,
0x00000000,
0x7d14706e,
0x81340004,
0x2c080000,
0x00098200,
0x41820000,
0x00050801,
0x00000000,
0x7c810808,
0x00000000,
0x5580007e,
0x000900ab,
0x7e100214,
0x3e100000,
0x00098200,
0x9114fff8,
0x9134fffc,
0x00000000,
0x0006000b,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c810808,
0x00000000,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c810808,
0x00000000,
0x5580007e,
0x000900ab,
0x7e100214,
0x3e100000,
0x00098200,
0x80f00000,
0x3a100004,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x7c810808,
0x00000000,
0x81320000,
0x00098200,
0x89100000,
0x00098200,
0x81f00000,
0x00098200,
0x7c144840,
0x55081800,
0x000900a1,
0x41810000,
0x00050820,
0x80f00000,
0x3a100004,
0x0006000c,
0x7c0b4040,
0x40810000,
0x00050803,
0x00000000,
0x7c810808,
0x00000000,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x00000000,
0x0006000d,
0x7eee592e,
0x396b0008,
0x48000000,
0x0005000c,
0x00000000,
0x7c810808,
0x00000000,
0x81320000,
0x00098200,
0x7d0e5a14,
0x7c145a14,
0x91480004,
0x38cb0000,
0x00098200,
0x81f00000,
0x00098200,
0x7c004840,
0x90c80000,
0x40800000,
0x00050820,
0x89300000,
0x00098200,
0x7dd47378,
0x7d0b4378,
0x80f00000,
0x3a100004,
0x2c090000,
0x39c80008,
0x41820000,
0x00050803,
0x0006000b,
0x7c145840,
0x80140000,
0x80d40004,
0x40800000,
0x00050804,
0x92f40000,
0x3a940008,
0x0006000c,
0x3529ffff,
0x90080008,
0x90c8000c,
0x39080008,
0x40820000,
0x0005080b,
0x0006000d,
0x54e815ba,
0x54ea5d78,
0x54ec9b78,
0x7c11402e,
0x54f4dd78,
0x54eb9d78,
0x7c0903a6,
0x4e800420,
0x0006000e,
0x38000000,
0x00098200,
0x48000000,
0x0005000c,
0x00000000,
0x80ca0000,
0x00098200,
0x00000000,
0x80d10000,
0x00098200,
0x00000000,
0x7d145a14,
0x81320000,
0x00098200,
0x7d6e5a14,
0x91d20000,
0x00098200,
0x7c084840,
0x91720000,
0x00098200,
0x38000000,
0x00098200,
0x7cc903a6,
0x00000000,
0x808a0000,
0x00098200,
0x00000000,
0x7e439378,
0x41810000,
0x0005081f,
0x90110000,
0x00098200,
0x4e800421,
0x81120000,
0x00098200,
0x546c1800,
0x000900a1,
0x81d20000,
0x00098200,
0x38000000,
0x00098200,
0x820efff8,
0x7e8c4050,
0x90110000,
0x00098200,
0x48000000,
0x00050016,
0x00000000,
0x00010000
};

enum {
  GLOB_vm_returnp,
  GLOB_cont_dispatch,
  GLOB_vm_returnc,
  GLOB_BC_RET_Z,
  GLOB_vm_return,
  GLOB_vm_leave_cp,
  GLOB_vm_leave_unw,
  GLOB_vm_unwind_c,
  GLOB_vm_unwind_c_eh,
  GLOB_vm_unwind_ff,
  GLOB_vm_unwind_ff_eh,
  GLOB_vm_growstack_c,
  GLOB_vm_growstack_l,
  GLOB_vm_resume,
  GLOB_vm_pcall,
  GLOB_vm_call,
  GLOB_vm_call_dispatch,
  GLOB_vmeta_call,
  GLOB_vm_call_dispatch_f,
  GLOB_vm_cpcall,
  GLOB_vm_call_tail,
  GLOB_cont_cat,
  GLOB_BC_CAT_Z,
  GLOB_cont_nop,
  GLOB_vmeta_tgets1,
  GLOB_vmeta_tgets,
  GLOB_vmeta_tgetb,
  GLOB_vmeta_tgetv,
  GLOB_vmeta_tsets1,
  GLOB_vmeta_tsets,
  GLOB_vmeta_tsetb,
  GLOB_vmeta_tsetv,
  GLOB_vmeta_comp,
  GLOB_vmeta_binop,
  GLOB_cont_ra,
  GLOB_cont_condt,
  GLOB_cont_condf,
  GLOB_vmeta_equal,
  GLOB_vmeta_arith_vn,
  GLOB_vmeta_arith_nv,
  GLOB_vmeta_unm,
  GLOB_vmeta_arith_vv,
  GLOB_vmeta_len,
  GLOB_BC_LEN_Z,
  GLOB_vmeta_callt,
  GLOB_BC_CALLT_Z,
  GLOB_vmeta_for,
  GLOB_ff_assert,
  GLOB_fff_fallback,
  GLOB_fff_res,
  GLOB_ff_type,
  GLOB_fff_resn,
  GLOB_ff_getmetatable,
  GLOB_fff_restv,
  GLOB_ff_setmetatable,
  GLOB_ff_rawget,
  GLOB_ff_tonumber,
  GLOB_ff_tostring,
  GLOB_fff_gcstep,
  GLOB_ff_next,
  GLOB_ff_pairs,
  GLOB_ff_ipairs_aux,
  GLOB_ff_ipairs,
  GLOB_ff_pcall,
  GLOB_ff_xpcall,
  GLOB_ff_coroutine_resume,
  GLOB_ff_coroutine_wrap_aux,
  GLOB_ff_coroutine_yield,
  GLOB_ff_math_abs,
  GLOB_fff_res1,
  GLOB_ff_math_floor,
  GLOB_ff_math_ceil,
  GLOB_ff_math_sqrt,
  GLOB_ff_math_log,
  GLOB_ff_math_log10,
  GLOB_ff_math_exp,
  GLOB_ff_math_sin,
  GLOB_ff_math_cos,
  GLOB_ff_math_tan,
  GLOB_ff_math_asin,
  GLOB_ff_math_acos,
  GLOB_ff_math_atan,
  GLOB_ff_math_sinh,
  GLOB_ff_math_cosh,
  GLOB_ff_math_tanh,
  GLOB_ff_math_pow,
  GLOB_ff_math_atan2,
  GLOB_ff_math_fmod,
  GLOB_ff_math_deg,
  GLOB_ff_math_rad,
  GLOB_ff_math_ldexp,
  GLOB_ff_math_frexp,
  GLOB_ff_math_modf,
  GLOB_ff_math_min,
  GLOB_ff_math_max,
  GLOB_ff_string_len,
  GLOB_fff_resi,
  GLOB_ff_string_byte,
  GLOB_ff_string_char,
  GLOB_fff_newstr,
  GLOB_ff_string_sub,
  GLOB_ff_string_rep,
  GLOB_ff_string_reverse,
  GLOB_ff_string_lower,
  GLOB_ff_string_upper,
  GLOB_ff_table_getn,
  GLOB_ff_bit_tobit,
  GLOB_ff_bit_band,
  GLOB_ff_bit_bor,
  GLOB_ff_bit_bxor,
  GLOB_ff_bit_bswap,
  GLOB_ff_bit_bnot,
  GLOB_ff_bit_lshift,
  GLOB_ff_bit_rshift,
  GLOB_ff_bit_arshift,
  GLOB_ff_bit_rol,
  GLOB_ff_bit_ror,
  GLOB_vm_record,
  GLOB_vm_rethook,
  GLOB_vm_inshook,
  GLOB_cont_hook,
  GLOB_vm_hotloop,
  GLOB_vm_callhook,
  GLOB_vm_hotcall,
  GLOB_vm_exit_handler,
  GLOB_vm_exit_interp,
  GLOB_vm_floor,
  GLOB_vm_ceil,
  GLOB_vm_trunc,
  GLOB_vm_powi,
  GLOB_vm_foldfpm,
  GLOB_vm_foldarith,
  GLOB_vm_ffi_call,
  GLOB_BC_MODVN_Z,
  GLOB_BC_TGETS_Z,
  GLOB_BC_TSETS_Z,
  GLOB_BC_RETV_Z,
  GLOB__MAX
};
static const char *const globnames[] = {
  "vm_returnp",
  "cont_dispatch",
  "vm_returnc",
  "BC_RET_Z",
  "vm_return",
  "vm_leave_cp",
  "vm_leave_unw",
  "vm_unwind_c",
  "vm_unwind_c_eh",
  "vm_unwind_ff",
  "vm_unwind_ff_eh",
  "vm_growstack_c",
  "vm_growstack_l",
  "vm_resume",
  "vm_pcall",
  "vm_call",
  "vm_call_dispatch",
  "vmeta_call",
  "vm_call_dispatch_f",
  "vm_cpcall",
  "vm_call_tail",
  "cont_cat",
  "BC_CAT_Z",
  "cont_nop",
  "vmeta_tgets1",
  "vmeta_tgets",
  "vmeta_tgetb",
  "vmeta_tgetv",
  "vmeta_tsets1",
  "vmeta_tsets",
  "vmeta_tsetb",
  "vmeta_tsetv",
  "vmeta_comp",
  "vmeta_binop",
  "cont_ra",
  "cont_condt",
  "cont_condf",
  "vmeta_equal",
  "vmeta_arith_vn",
  "vmeta_arith_nv",
  "vmeta_unm",
  "vmeta_arith_vv",
  "vmeta_len",
  "BC_LEN_Z",
  "vmeta_callt",
  "BC_CALLT_Z",
  "vmeta_for",
  "ff_assert",
  "fff_fallback",
  "fff_res",
  "ff_type",
  "fff_resn",
  "ff_getmetatable",
  "fff_restv",
  "ff_setmetatable",
  "ff_rawget",
  "ff_tonumber",
  "ff_tostring",
  "fff_gcstep",
  "ff_next",
  "ff_pairs",
  "ff_ipairs_aux",
  "ff_ipairs",
  "ff_pcall",
  "ff_xpcall",
  "ff_coroutine_resume",
  "ff_coroutine_wrap_aux",
  "ff_coroutine_yield",
  "ff_math_abs",
  "fff_res1",
  "ff_math_floor",
  "ff_math_ceil",
  "ff_math_sqrt",
  "ff_math_log",
  "ff_math_log10",
  "ff_math_exp",
  "ff_math_sin",
  "ff_math_cos",
  "ff_math_tan",
  "ff_math_asin",
  "ff_math_acos",
  "ff_math_atan",
  "ff_math_sinh",
  "ff_math_cosh",
  "ff_math_tanh",
  "ff_math_pow",
  "ff_math_atan2",
  "ff_math_fmod",
  "ff_math_deg",
  "ff_math_rad",
  "ff_math_ldexp",
  "ff_math_frexp",
  "ff_math_modf",
  "ff_math_min",
  "ff_math_max",
  "ff_string_len",
  "fff_resi",
  "ff_string_byte",
  "ff_string_char",
  "fff_newstr",
  "ff_string_sub",
  "ff_string_rep",
  "ff_string_reverse",
  "ff_string_lower",
  "ff_string_upper",
  "ff_table_getn",
  "ff_bit_tobit",
  "ff_bit_band",
  "ff_bit_bor",
  "ff_bit_bxor",
  "ff_bit_bswap",
  "ff_bit_bnot",
  "ff_bit_lshift",
  "ff_bit_rshift",
  "ff_bit_arshift",
  "ff_bit_rol",
  "ff_bit_ror",
  "vm_record",
  "vm_rethook",
  "vm_inshook",
  "cont_hook",
  "vm_hotloop",
  "vm_callhook",
  "vm_hotcall",
  "vm_exit_handler",
  "vm_exit_interp",
  "vm_floor",
  "vm_ceil",
  "vm_trunc",
  "vm_powi",
  "vm_foldfpm",
  "vm_foldarith",
  "vm_ffi_call",
  "BC_MODVN_Z",
  "BC_TGETS_Z",
  "BC_TSETS_Z",
  "BC_RETV_Z",
  (const char *)0
};
static const char *const extnames[] = {
  "lj_state_growstack",
  "lj_meta_tget",
  "lj_meta_tset",
  "lj_meta_comp",
  "lj_meta_equal",
  "lj_meta_arith",
  "lj_meta_len",
  "lj_meta_call",
  "lj_meta_for",
  "lj_tab_get",
  "lj_str_fromnum",
  "lj_tab_next",
  "lj_tab_getinth",
  "lj_ffh_coroutine_wrap_err",
  "floor",
  "ceil",
  "sqrt",
  "log",
  "log10",
  "exp",
  "sin",
  "cos",
  "tan",
  "asin",
  "acos",
  "atan",
  "sinh",
  "cosh",
  "tanh",
  "pow",
  "atan2",
  "fmod",
  "ldexp",
  "frexp",
  "modf",
  "lj_str_new",
  "lj_tab_len",
  "lj_gc_step",
  "lj_dispatch_ins",
  "lj_dispatch_call",
  "trunc",
  "lj_meta_cat",
  "lj_gc_barrieruv",
  "lj_func_closeuv",
  "lj_func_newL_gc",
  "lj_tab_new",
  "lj_tab_dup",
  "lj_gc_step_fixtop",
  "lj_tab_newkey",
  "lj_tab_reasize",
  (const char *)0
};
#define Dt1(_V) (int)(ptrdiff_t)&(((lua_State *)0)_V)
#define Dt2(_V) (int)(ptrdiff_t)&(((global_State *)0)_V)
#define Dt3(_V) (int)(ptrdiff_t)&(((TValue *)0)_V)
#define Dt4(_V) (int)(ptrdiff_t)&(((GCobj *)0)_V)
#define Dt5(_V) (int)(ptrdiff_t)&(((GCstr *)0)_V)
#define Dt6(_V) (int)(ptrdiff_t)&(((GCtab *)0)_V)
#define Dt7(_V) (int)(ptrdiff_t)&(((GCfuncL *)0)_V)
#define Dt8(_V) (int)(ptrdiff_t)&(((GCfuncC *)0)_V)
#define Dt9(_V) (int)(ptrdiff_t)&(((GCproto *)0)_V)
#define DtA(_V) (int)(ptrdiff_t)&(((GCupval *)0)_V)
#define DtB(_V) (int)(ptrdiff_t)&(((Node *)0)_V)
#define DtC(_V) (int)(ptrdiff_t)&(((int *)0)_V)
#define DtD(_V) (int)(ptrdiff_t)&(((GCtrace *)0)_V)
#define DISPATCH_GL(field)	(GG_DISP2G + (int)offsetof(global_State, field))
#define DISPATCH_J(field)	(GG_DISP2J + (int)offsetof(jit_State, field))
#define PC2PROTO(field)  ((int)offsetof(GCproto, field)-(int)sizeof(GCproto))

/* Generate subroutines used by opcodes and other parts of the VM. */
/* The .code_sub section should be last to help static branch prediction. */
static void build_subroutines(BuildCtx *ctx)
{
  dasm_put(Dst, 0);
  dasm_put(Dst, 1, FRAME_P, LJ_TTRUE, FRAME_TYPE, FRAME_C, ~LJ_VMST_C, Dt1(->base), DISPATCH_GL(vmstate), 31-3, Dt1(->top));
  dasm_put(Dst, 55, Dt1(->cframe), 184+(14-14)*4, 40+(14-14)*8, 184+(15-14)*4, 40+(15-14)*8, 184+(16-14)*4, 40+(16-14)*8, 184+(17-14)*4, 40+(17-14)*8, 184+(18-14)*4, 40+(18-14)*8, 184+(19-14)*4, 40+(19-14)*8, 184+(20-14)*4, 40+(20-14)*8, 184+(21-14)*4, 40+(21-14)*8, 184+(22-14)*4, 40+(22-14)*8, 184+(23-14)*4, 40+(23-14)*8);
  dasm_put(Dst, 103, 184+(24-14)*4, 40+(24-14)*8, 184+(25-14)*4, 40+(25-14)*8, 184+(26-14)*4, 40+(26-14)*8, 184+(27-14)*4, 40+(27-14)*8, 184+(28-14)*4, 40+(28-14)*8, 184+(29-14)*4, 40+(29-14)*8, 184+(30-14)*4, 40+(30-14)*8, 184+(31-14)*4, 40+(31-14)*8, Dt1(->maxstack));
  dasm_put(Dst, 152, Dt1(->top), 31-3, Dt1(->top), ~LJ_VMST_C, Dt1(->glref), Dt2(->vmstate), LJ_TISNUM, Dt1(->base), Dt1(->glref), LJ_TFALSE, LJ_TNIL, ~LJ_VMST_INTERP, GG_G2DISP);
  dasm_put(Dst, 215, DISPATCH_GL(vmstate), LUA_MINSTACK, Dt1(->base), Dt1(->top), 32-3, Dt1(->base), Dt1(->top), Dt7(->pc), 184+(14-14)*4, 40+(14-14)*8, 184+(15-14)*4, 40+(15-14)*8, 184+(16-14)*4, 40+(16-14)*8, 184+(17-14)*4);
  dasm_put(Dst, 275, 40+(17-14)*8, 184+(18-14)*4, 40+(18-14)*8, 184+(19-14)*4, 40+(19-14)*8, 184+(20-14)*4, 40+(20-14)*8, 184+(21-14)*4, 40+(21-14)*8, 184+(22-14)*4, 40+(22-14)*8, 184+(23-14)*4, 40+(23-14)*8, 184+(24-14)*4, 40+(24-14)*8, 184+(25-14)*4, 40+(25-14)*8, 184+(26-14)*4, 40+(26-14)*8, 184+(27-14)*4, 40+(27-14)*8, 184+(28-14)*4);
  dasm_put(Dst, 322, 40+(28-14)*8, 184+(29-14)*4, 40+(29-14)*8, 184+(30-14)*4, 40+(30-14)*8, 184+(31-14)*4, 40+(31-14)*8, Dt1(->glref), Dt1(->status), FRAME_CP, CFRAME_RESUME, GG_G2DISP, Dt1(->cframe), Dt1(->base), LJ_TISNUM, Dt1(->top), Dt1(->status), FRAME_TYPE, ~LJ_VMST_INTERP, LJ_TNIL, DISPATCH_GL(vmstate));
  dasm_put(Dst, 389, 184+(14-14)*4, 40+(14-14)*8, 184+(15-14)*4, 40+(15-14)*8, 184+(16-14)*4, 40+(16-14)*8, 184+(17-14)*4, 40+(17-14)*8, 184+(18-14)*4, 40+(18-14)*8, 184+(19-14)*4, 40+(19-14)*8, 184+(20-14)*4, 40+(20-14)*8, 184+(21-14)*4, 40+(21-14)*8, 184+(22-14)*4, 40+(22-14)*8, 184+(23-14)*4);
  dasm_put(Dst, 435, 40+(23-14)*8, 184+(24-14)*4, 40+(24-14)*8, 184+(25-14)*4, 40+(25-14)*8, 184+(26-14)*4, 40+(26-14)*8, 184+(27-14)*4, 40+(27-14)*8, 184+(28-14)*4, 40+(28-14)*8, 184+(29-14)*4, 40+(29-14)*8, 184+(30-14)*4, 40+(30-14)*8, 184+(31-14)*4, 40+(31-14)*8, FRAME_CP, 184+(14-14)*4, 40+(14-14)*8);
  dasm_put(Dst, 482, 184+(15-14)*4, 40+(15-14)*8, 184+(16-14)*4, 40+(16-14)*8, 184+(17-14)*4, 40+(17-14)*8, 184+(18-14)*4, 40+(18-14)*8, 184+(19-14)*4, 40+(19-14)*8, 184+(20-14)*4, 40+(20-14)*8, 184+(21-14)*4, 40+(21-14)*8, 184+(22-14)*4, 40+(22-14)*8, 184+(23-14)*4, 40+(23-14)*8, 184+(24-14)*4, 40+(24-14)*8, 184+(25-14)*4, 40+(25-14)*8);
  dasm_put(Dst, 528, 184+(26-14)*4, 40+(26-14)*8, 184+(27-14)*4, 40+(27-14)*8, 184+(28-14)*4, 40+(28-14)*8, 184+(29-14)*4, 40+(29-14)*8, 184+(30-14)*4, 40+(30-14)*8, 184+(31-14)*4, 40+(31-14)*8, FRAME_C, Dt1(->cframe), Dt1(->cframe), Dt1(->glref), GG_G2DISP, Dt1(->base), LJ_TISNUM, Dt1(->top));
  dasm_put(Dst, 578, ~LJ_VMST_INTERP, LJ_TNIL, DISPATCH_GL(vmstate), LJ_TFUNC, Dt7(->pc), 184+(14-14)*4, 40+(14-14)*8, 184+(15-14)*4, 40+(15-14)*8, 184+(16-14)*4, 40+(16-14)*8, 184+(17-14)*4, 40+(17-14)*8, 184+(18-14)*4, 40+(18-14)*8, 184+(19-14)*4, 40+(19-14)*8, 184+(20-14)*4);
  dasm_put(Dst, 645, 40+(20-14)*8, 184+(21-14)*4, 40+(21-14)*8, 184+(22-14)*4, 40+(22-14)*8, 184+(23-14)*4, 40+(23-14)*8, 184+(24-14)*4, 40+(24-14)*8, 184+(25-14)*4, 40+(25-14)*8, 184+(26-14)*4, 40+(26-14)*8, 184+(27-14)*4, 40+(27-14)*8, 184+(28-14)*4, 40+(28-14)*8, 184+(29-14)*4, 40+(29-14)*8, 184+(30-14)*4, 40+(30-14)*8, 184+(31-14)*4);
  dasm_put(Dst, 691, 40+(31-14)*8, Dt1(->stack), Dt1(->top), Dt1(->cframe), Dt1(->cframe), Dt1(->glref), FRAME_CP, GG_G2DISP, Dt7(->pc), PC2PROTO(k), Dt1(->base), DISPATCH_GL(tmptv));
  dasm_put(Dst, 765, LJ_TSTR, DISPATCH_GL(tmptv), LJ_TTAB, DISPATCH_GL(tmptv2), LJ_TSTR, DISPATCH_GL(tmptv), Dt1(->base), FRAME_CONT, Dt1(->top), DISPATCH_GL(tmptv));
  dasm_put(Dst, 841, LJ_TSTR, DISPATCH_GL(tmptv), LJ_TTAB, DISPATCH_GL(tmptv2), LJ_TSTR, DISPATCH_GL(tmptv), Dt1(->base), FRAME_CONT, Dt1(->top), Dt1(->base));
  dasm_put(Dst, 923, -(BCBIAS_J*4 >> 16), LJ_TTRUE, LJ_TTRUE, Dt1(->base));
  dasm_put(Dst, 994, Dt1(->base), FRAME_CONT);
#ifdef LUAJIT_ENABLE_LUA52COMPAT
  dasm_put(Dst, 1025);
#endif
  dasm_put(Dst, 1027, Dt1(->base));
#ifdef LUAJIT_ENABLE_LUA52COMPAT
  dasm_put(Dst, 1035);
#else
  dasm_put(Dst, 1042);
#endif
  dasm_put(Dst, 1045, Dt1(->base), Dt7(->pc), Dt1(->base), Dt1(->base));
#if LJ_HASJIT
  dasm_put(Dst, 1093);
#endif
  dasm_put(Dst, 1095);
#if LJ_HASJIT
  dasm_put(Dst, 1097, BC_JFORI);
#endif
  dasm_put(Dst, 1100);
#if LJ_HASJIT
  dasm_put(Dst, 1102, BC_JFORI);
#endif
  dasm_put(Dst, 1105, BC_FORI, LJ_TFALSE, ~LJ_TISNUM+1, 31-3, Dt8(->upvalue), LJ_TTAB, Dt6(->metatable));
  dasm_put(Dst, 1168, LJ_TNIL, DISPATCH_GL(gcroot[GCROOT_MMNAME+MM_metatable]), Dt6(->hmask), LJ_TTAB, Dt5(->hash), Dt6(->node), 31-5, 31-3, DtB(->key), 4+offsetof(Node, key), DtB(->val), 4+offsetof(Node, val), LJ_TSTR, DtB(->next));
  dasm_put(Dst, 1216, LJ_TNIL, LJ_TUDATA, ~LJ_TISNUM+1, 31-2, DISPATCH_GL(gcroot[GCROOT_BASEMT]), LJ_TTAB, Dt6(->metatable), LJ_TTAB, Dt6(->marked), LJ_GC_BLACK, Dt6(->metatable));
  dasm_put(Dst, 1271, DISPATCH_GL(gc.grayagain), DISPATCH_GL(gc.grayagain), Dt6(->marked), Dt6(->gclist), LJ_TTAB, LJ_TSTR, DISPATCH_GL(gcroot[GCROOT_BASEMT_NUM]), Dt1(->base));
  dasm_put(Dst, 1331, DISPATCH_GL(gc.total), DISPATCH_GL(gc.threshold), LJ_TSTR, LJ_TTAB, Dt1(->base), Dt1(->top), LJ_TNIL, (2+1)*8, LJ_TTAB);
#ifdef LUAJIT_ENABLE_LUA52COMPAT
  dasm_put(Dst, 1393, Dt6(->metatable), Dt8(->upvalue[0]));
#else
  dasm_put(Dst, 1402, Dt8(->upvalue[0]));
#endif
  dasm_put(Dst, 1406, (3+1)*8, LJ_TTAB, Dt6(->asize), Dt6(->array), 31-3, LJ_TNIL, (0+1)*8, (2+1)*8, Dt6(->hmask), (0+1)*8);
  dasm_put(Dst, 1474, (0+1)*8, LJ_TTAB);
#ifdef LUAJIT_ENABLE_LUA52COMPAT
  dasm_put(Dst, 1495, Dt6(->metatable), Dt8(->upvalue[0]));
#else
  dasm_put(Dst, 1504, Dt8(->upvalue[0]));
#endif
  dasm_put(Dst, 1508, (3+1)*8, DISPATCH_GL(hookmask), 32-HOOK_ACTIVE_SHIFT, 8+FRAME_PCALL, DISPATCH_GL(hookmask), LJ_TFUNC, 32-HOOK_ACTIVE_SHIFT, 16+FRAME_PCALL, LJ_TTHREAD, Dt1(->status), Dt1(->cframe));
  dasm_put(Dst, 1570, Dt1(->top), LUA_YIELD, Dt1(->base), Dt1(->maxstack), Dt1(->base), Dt1(->top), Dt1(->top), Dt1(->base), LUA_YIELD, Dt1(->top), ~LJ_VMST_INTERP, Dt1(->base), DISPATCH_GL(vmstate));
  dasm_put(Dst, 1632, Dt1(->maxstack), Dt1(->top), FRAME_TYPE, LJ_TTRUE, FRAME_TYPE, LJ_TFALSE, Dt1(->top), (2+1)*8, 32-3);
  dasm_put(Dst, 1695, Dt8(->upvalue[0].gcr), Dt1(->status), Dt1(->cframe), Dt1(->top), LUA_YIELD, Dt1(->base), Dt1(->maxstack), Dt1(->base), Dt1(->top), Dt1(->top), Dt1(->base), LUA_YIELD, Dt1(->top), ~LJ_VMST_INTERP);
  dasm_put(Dst, 1754, Dt1(->base), DISPATCH_GL(vmstate), Dt1(->maxstack), Dt1(->top), FRAME_TYPE, 32-3, Dt1(->cframe));
  dasm_put(Dst, 1811, Dt1(->base), CFRAME_RESUME, Dt1(->top), LUA_YIELD, Dt1(->cframe), Dt1(->status), (1+1)*8, FRAME_TYPE);
  dasm_put(Dst, 1878);
  dasm_put(Dst, 1939);
  dasm_put(Dst, 1997);
  dasm_put(Dst, 2058);
  dasm_put(Dst, 2123, Dt8(->upvalue[0]), DISPATCH_GL(tmptv), DISPATCH_GL(tmptv), (2+1)*8);
  dasm_put(Dst, 2191, (2+1)*8);
  dasm_put(Dst, 2263, LJ_TSTR, Dt5(->len), LJ_TSTR, Dt5(->len), Dt5([1]), 31-3, DISPATCH_GL(gc.total), DISPATCH_GL(gc.threshold), Dt1(->base));
  dasm_put(Dst, 2332, Dt1(->base), LJ_TSTR, DISPATCH_GL(gc.total), DISPATCH_GL(gc.threshold), LJ_TSTR, Dt5(->len), sizeof(GCstr)-1);
  dasm_put(Dst, 2401, DISPATCH_GL(gc.total), DISPATCH_GL(gc.threshold), LJ_TSTR, Dt5(->len), DISPATCH_GL(tmpbuf.sz), Dt5([1]), DISPATCH_GL(tmpbuf.buf));
  dasm_put(Dst, 2471, DISPATCH_GL(strempty), LJ_TSTR, DISPATCH_GL(gc.total), DISPATCH_GL(gc.threshold), LJ_TSTR, DISPATCH_GL(tmpbuf.sz), Dt5(->len), sizeof(GCstr), DISPATCH_GL(tmpbuf.buf), DISPATCH_GL(gc.total), DISPATCH_GL(gc.threshold));
  dasm_put(Dst, 2526, LJ_TSTR, DISPATCH_GL(tmpbuf.sz), Dt5(->len), sizeof(GCstr), DISPATCH_GL(tmpbuf.buf), DISPATCH_GL(gc.total), DISPATCH_GL(gc.threshold), LJ_TSTR, DISPATCH_GL(tmpbuf.sz), Dt5(->len), sizeof(GCstr), DISPATCH_GL(tmpbuf.buf));
  dasm_put(Dst, 2588, LJ_TTAB);
  dasm_put(Dst, 2668);
  dasm_put(Dst, 2760);
  dasm_put(Dst, 2863, Dt8(->f), 8*LUA_MINSTACK, Dt1(->maxstack), Dt1(->base), Dt1(->top), Dt1(->base), 31-3, Dt1(->top), Dt7(->pc), FRAME_TYPE);
  dasm_put(Dst, 2941, LUA_MINSTACK, Dt1(->base), Dt1(->base), Dt1(->top), Dt1(->base), Dt1(->top));
#if LJ_HASJIT
  dasm_put(Dst, 2975);
#endif
  dasm_put(Dst, 2977, DISPATCH_GL(hookmask), HOOK_ACTIVE, GG_DISP2STATIC, DISPATCH_GL(hookmask), DISPATCH_GL(hookcount), HOOK_ACTIVE, 31-LUA_HOOKLINE, DISPATCH_GL(hookcount), Dt1(->base), Dt1(->base));
  dasm_put(Dst, 3024, GG_DISP2STATIC);
#if LJ_HASJIT
  dasm_put(Dst, 3042);
#endif
  dasm_put(Dst, 3044);
#if LJ_HASJIT
  dasm_put(Dst, 3047);
#endif
  dasm_put(Dst, 3050);
#if LJ_HASJIT
  dasm_put(Dst, 3052);
#endif
  dasm_put(Dst, 3055, Dt1(->base), Dt1(->top), Dt1(->base), Dt1(->top));
#if LJ_HASJIT
  dasm_put(Dst, 3077);
#endif
  dasm_put(Dst, 3079);
#if LJ_HASJIT
  dasm_put(Dst, 3081);
#endif
  dasm_put(Dst, 3083);
#if LJ_HASJIT
  dasm_put(Dst, 3091);
#endif
  dasm_put(Dst, 3094);
#if LJ_HASJIT
  dasm_put(Dst, 3096);
#endif
  dasm_put(Dst, 3098);
#if LJ_HASJIT
  dasm_put(Dst, 3100);
#endif
  dasm_put(Dst, 3102);
#if LJ_HASFFI
  dasm_put(Dst, 3166);
#endif
}

/* Generate the code for a single instruction. */
static void build_ins(BuildCtx *ctx, BCOp op, int defop)
{
  int vk = 0;
  dasm_put(Dst, 3168, defop);

  switch (op) {

  /* -- Comparison ops ---------------------------------------------------- */

  /* Remember: all ops branch for a true comparison, fall through otherwise. */

  case BC_ISLT: case BC_ISGE: case BC_ISLE: case BC_ISGT:
    dasm_put(Dst, 3170, -(BCBIAS_J*4 >> 16));
    if (op == BC_ISLT) {
      dasm_put(Dst, 3187);
    } else if (op == BC_ISGE) {
      dasm_put(Dst, 3190);
    } else if (op == BC_ISLE) {
      dasm_put(Dst, 3193);
    } else {
      dasm_put(Dst, 3197);
    }
    dasm_put(Dst, 3201);
    break;

  case BC_ISEQV: case BC_ISNEV:
    vk = op == BC_ISEQV;
    dasm_put(Dst, 3214, -(BCBIAS_J*4 >> 16));
    if (vk) {
      dasm_put(Dst, 3231);
    } else {
      dasm_put(Dst, 3235);
    }
    dasm_put(Dst, 3239, ~LJ_TISPRI, ~LJ_TISTABUD);
    if (vk) {
      dasm_put(Dst, 3267);
    } else {
      dasm_put(Dst, 3272);
    }
    dasm_put(Dst, 3277, Dt6(->metatable), 1-vk, Dt6(->nomm), 1<<MM_eq);
    break;

  case BC_ISEQS: case BC_ISNES:
    vk = op == BC_ISEQS;
    dasm_put(Dst, 3298, 32-1, LJ_TSTR, -(BCBIAS_J*4 >> 16));
    if (vk) {
      dasm_put(Dst, 3316);
    } else {
      dasm_put(Dst, 3318);
    }
    dasm_put(Dst, 3320);
    break;

  case BC_ISEQN: case BC_ISNEN:
    vk = op == BC_ISEQN;
    dasm_put(Dst, 3332, -(BCBIAS_J*4 >> 16));
    if (vk) {
      dasm_put(Dst, 3345);
    } else {
      dasm_put(Dst, 3350);
    }
    dasm_put(Dst, 3356);
    if (!vk) {
      dasm_put(Dst, 3367, -(BCBIAS_J*4 >> 16));
    }
    break;

  case BC_ISEQP: case BC_ISNEP:
    vk = op == BC_ISEQP;
    dasm_put(Dst, 3374, 32-3, -(BCBIAS_J*4 >> 16));
    if (vk) {
      dasm_put(Dst, 3387);
    } else {
      dasm_put(Dst, 3389);
    }
    dasm_put(Dst, 3391);
    break;

  /* -- Unary test and copy ops ------------------------------------------- */

  case BC_ISTC: case BC_ISFC: case BC_IST: case BC_ISF:
    dasm_put(Dst, 3403);
    if (op == BC_IST || op == BC_ISF) {
      dasm_put(Dst, 3407, LJ_TTRUE, -(BCBIAS_J*4 >> 16));
      if (op == BC_IST) {
	dasm_put(Dst, 3414);
      } else {
	dasm_put(Dst, 3416);
      }
      dasm_put(Dst, 3418);
    } else {
      dasm_put(Dst, 3420, LJ_TFALSE);
      if (op == BC_ISTC) {
	dasm_put(Dst, 3425);
      } else {
	dasm_put(Dst, 3428);
      }
      dasm_put(Dst, 3431, -(BCBIAS_J*4 >> 16));
    }
    dasm_put(Dst, 3438);
    break;

  /* -- Unary ops --------------------------------------------------------- */

  case BC_MOV:
    dasm_put(Dst, 3449);
    break;
  case BC_NOT:
    dasm_put(Dst, 3462, LJ_TTRUE);
    break;
  case BC_UNM:
    dasm_put(Dst, 3478);
    break;
  case BC_LEN:
    dasm_put(Dst, 3497, LJ_TSTR, Dt5(->len), LJ_TTAB);
#ifdef LUAJIT_ENABLE_LUA52COMPAT
    dasm_put(Dst, 3526, Dt6(->metatable));
#endif
    dasm_put(Dst, 3533);
#ifdef LUAJIT_ENABLE_LUA52COMPAT
    dasm_put(Dst, 3539, Dt6(->nomm), 1<<MM_len);
#endif
    break;

  /* -- Binary ops -------------------------------------------------------- */


  case BC_ADDVN: case BC_ADDNV: case BC_ADDVV:
    vk = ((int)op - BC_ADDVN) / (BC_ADDNV-BC_ADDVN);
    switch (vk) {
    case 0:
    dasm_put(Dst, 3549);
      break;
    case 1:
    dasm_put(Dst, 3556);
      break;
    default:
    dasm_put(Dst, 3563);
      break;
    }
    dasm_put(Dst, 3573);
    break;
  case BC_SUBVN: case BC_SUBNV: case BC_SUBVV:
    vk = ((int)op - BC_ADDVN) / (BC_ADDNV-BC_ADDVN);
    switch (vk) {
    case 0:
    dasm_put(Dst, 3586);
      break;
    case 1:
    dasm_put(Dst, 3593);
      break;
    default:
    dasm_put(Dst, 3600);
      break;
    }
    dasm_put(Dst, 3610);
    break;
  case BC_MULVN: case BC_MULNV: case BC_MULVV:
    vk = ((int)op - BC_ADDVN) / (BC_ADDNV-BC_ADDVN);
    switch (vk) {
    case 0:
    dasm_put(Dst, 3623);
      break;
    case 1:
    dasm_put(Dst, 3630);
      break;
    default:
    dasm_put(Dst, 3637);
      break;
    }
    dasm_put(Dst, 3647);
    break;
  case BC_DIVVN: case BC_DIVNV: case BC_DIVVV:
    vk = ((int)op - BC_ADDVN) / (BC_ADDNV-BC_ADDVN);
    switch (vk) {
    case 0:
    dasm_put(Dst, 3660);
      break;
    case 1:
    dasm_put(Dst, 3667);
      break;
    default:
    dasm_put(Dst, 3674);
      break;
    }
    dasm_put(Dst, 3684);
    break;
  case BC_MODVN:
    vk = ((int)op - BC_ADDVN) / (BC_ADDNV-BC_ADDVN);
    switch (vk) {
    case 0:
    dasm_put(Dst, 3697);
      break;
    case 1:
    dasm_put(Dst, 3704);
      break;
    default:
    dasm_put(Dst, 3711);
      break;
    }
    dasm_put(Dst, 3721);
    break;
  case BC_MODNV: case BC_MODVV:
    vk = ((int)op - BC_ADDVN) / (BC_ADDNV-BC_ADDVN);
    switch (vk) {
    case 0:
    dasm_put(Dst, 3739);
      break;
    case 1:
    dasm_put(Dst, 3746);
      break;
    default:
    dasm_put(Dst, 3753);
      break;
    }
    dasm_put(Dst, 3763);
    break;
  case BC_POW:
    dasm_put(Dst, 3766);
    break;

  case BC_CAT:
    dasm_put(Dst, 3789, Dt1(->base), 32-3, Dt1(->base));
    break;

  /* -- Constant ops ------------------------------------------------------ */

  case BC_KSTR:
    dasm_put(Dst, 3819, 32-1, LJ_TSTR);
    break;
  case BC_KCDATA:
#if LJ_HASFFI
    dasm_put(Dst, 3838, 32-1, LJ_TCDATA);
#endif
    break;
  case BC_KSHORT:
    dasm_put(Dst, 3857, 31-13);
    break;
  case BC_KNUM:
    dasm_put(Dst, 3876);
    break;
  case BC_KPRI:
    dasm_put(Dst, 3889, 32-3);
    break;
  case BC_KNIL:
    dasm_put(Dst, 3904);
    break;

  /* -- Upvalue and function ops ------------------------------------------ */

  case BC_UGET:
    dasm_put(Dst, 3923, 32-1, offsetof(GCfuncL, uvptr), DtA(->v));
    break;
  case BC_USETV:
    dasm_put(Dst, 3944, 32-1, offsetof(GCfuncL, uvptr), DtA(->marked), DtA(->v), LJ_GC_BLACK, DtA(->closed), -(LJ_TISNUM+1), LJ_TISGCV - (LJ_TISNUM+1), Dt4(->gch.marked), LJ_GC_WHITES, GG_DISP2G);
    break;
  case BC_USETS:
    dasm_put(Dst, 3997, 32-1, 32-1, offsetof(GCfuncL, uvptr), DtA(->marked), DtA(->v), LJ_GC_BLACK, Dt5(->marked), DtA(->closed), LJ_TSTR, LJ_GC_WHITES, GG_DISP2G);
    break;
  case BC_USETN:
    dasm_put(Dst, 4048, 32-1, offsetof(GCfuncL, uvptr), DtA(->v));
    break;
  case BC_USETP:
    dasm_put(Dst, 4069, 32-1, offsetof(GCfuncL, uvptr), 32-3, DtA(->v));
    break;

  case BC_UCLO:
    dasm_put(Dst, 4092, Dt1(->openupval), 32-1, -(BCBIAS_J*4 >> 16), Dt1(->base), Dt1(->base));
    break;

  case BC_FNEW:
    dasm_put(Dst, 4122, 32-1, Dt1(->base), Dt1(->base), LJ_TFUNC);
    break;

  /* -- Table ops --------------------------------------------------------- */

  case BC_TNEW:
  case BC_TDUP:
    dasm_put(Dst, 4150, DISPATCH_GL(gc.total), DISPATCH_GL(gc.threshold), Dt1(->base));
    if (op == BC_TNEW) {
      dasm_put(Dst, 4163);
    } else {
      dasm_put(Dst, 4172, 32-1);
    }
    dasm_put(Dst, 4179, Dt1(->base), LJ_TTAB);
    if (op == BC_TNEW) {
      dasm_put(Dst, 4196);
    }
    dasm_put(Dst, 4201);
    break;

  case BC_GGET:
  case BC_GSET:
    dasm_put(Dst, 4210, 32-1, Dt7(->env));
    if (op == BC_GGET) {
      dasm_put(Dst, 4218);
    } else {
      dasm_put(Dst, 4221);
    }
    break;

  case BC_TGETV:
    dasm_put(Dst, 4224, LJ_TTAB, Dt6(->asize), Dt6(->array), 31-3, LJ_TNIL, Dt6(->metatable), Dt6(->nomm), 1<<MM_index, LJ_TSTR);
    break;
  case BC_TGETS:
    dasm_put(Dst, 4292, 32-1, LJ_TTAB, Dt6(->hmask), Dt5(->hash), Dt6(->node), 31-5, 31-3, DtB(->key), 4+offsetof(Node, key), DtB(->val), 4+offsetof(Node, val), LJ_TSTR, LJ_TNIL, DtB(->next));
    dasm_put(Dst, 4353, LJ_TNIL, Dt6(->metatable), Dt6(->nomm), 1<<MM_index);
    break;
  case BC_TGETB:
    dasm_put(Dst, 4373, 32-3, LJ_TTAB, Dt6(->asize), Dt6(->array), LJ_TNIL, Dt6(->metatable), Dt6(->nomm), 1<<MM_index);
    break;

  case BC_TSETV:
    dasm_put(Dst, 4421, LJ_TTAB, Dt6(->asize), Dt6(->array), 31-3, Dt6(->marked), LJ_TNIL, LJ_GC_BLACK, Dt6(->metatable), Dt6(->nomm), 1<<MM_newindex);
    dasm_put(Dst, 4489, LJ_TSTR, DISPATCH_GL(gc.grayagain), DISPATCH_GL(gc.grayagain), Dt6(->marked), Dt6(->gclist));
    break;
    dasm_put(Dst, 4509, LJ_TSTR, LJ_TNIL);
  case BC_TSETS:
    dasm_put(Dst, 4535, 32-1, LJ_TTAB, Dt6(->hmask), Dt5(->hash), Dt6(->node), Dt6(->nomm), 31-5, 31-3, Dt6(->marked), DtB(->key), 4+offsetof(Node, key), DtB(->val), 4+offsetof(Node, val), LJ_TSTR, LJ_TNIL);
    dasm_put(Dst, 4586, LJ_GC_BLACK, DtB(->val), Dt6(->metatable), Dt6(->nomm), 1<<MM_newindex, DtB(->next), Dt6(->metatable), DISPATCH_GL(tmptv), Dt1(->base), Dt6(->nomm), 1<<MM_newindex);
    dasm_put(Dst, 4642, LJ_TSTR, Dt1(->base), DISPATCH_GL(gc.grayagain), DISPATCH_GL(gc.grayagain), Dt6(->marked), Dt6(->gclist));
    break;
  case BC_TSETB:
    dasm_put(Dst, 4667, 32-3, LJ_TTAB, Dt6(->asize), Dt6(->array), Dt6(->marked), LJ_TNIL, LJ_GC_BLACK, Dt6(->metatable), Dt6(->nomm), 1<<MM_newindex, DISPATCH_GL(gc.grayagain));
    dasm_put(Dst, 4725, DISPATCH_GL(gc.grayagain), Dt6(->marked), Dt6(->gclist));
    break;

  case BC_TSETM:
    dasm_put(Dst, 4735, 32-3, Dt6(->asize), 31-3, Dt6(->marked), Dt6(->array), LJ_GC_BLACK, Dt1(->base), DISPATCH_GL(gc.grayagain), DISPATCH_GL(gc.grayagain), Dt6(->marked), Dt6(->gclist));
    dasm_put(Dst, 4804);
    break;

  /* -- Calls and vararg handling ----------------------------------------- */

  case BC_CALLM:
    dasm_put(Dst, 4807);
    break;
  case BC_CALL:
    dasm_put(Dst, 4809, LJ_TFUNC, Dt7(->pc));
    break;

  case BC_CALLMT:
    dasm_put(Dst, 4830);
    break;
  case BC_CALLT:
    dasm_put(Dst, 4832, LJ_TFUNC, FRAME_TYPE, Dt7(->ffid), FRAME_VARG, Dt7(->pc), -4-8, Dt7(->pc), PC2PROTO(k), FRAME_TYPEP);
    dasm_put(Dst, 4896, FRAME_TYPE);
    break;

  case BC_ITERC:
    dasm_put(Dst, 4905, LJ_TFUNC, Dt7(->pc));
    break;

  case BC_ITERN:
#if LJ_HASJIT
#endif
    dasm_put(Dst, 4932, Dt6(->asize), Dt6(->array), 31-3, LJ_TNIL, -(BCBIAS_J*4 >> 16), Dt6(->hmask), Dt6(->node), 31-5, 31-3, LJ_TNIL, DtB(->key), -(BCBIAS_J*4 >> 16));
    dasm_put(Dst, 5007);
    break;

  case BC_ISNEXT:
    dasm_put(Dst, 5021, LJ_TTAB, LJ_TFUNC, LJ_TNIL, Dt8(->ffid), FF_next_N, 32-1, -(BCBIAS_J*4 >> 16), BC_JMP, BC_ITERC, -(BCBIAS_J*4 >> 16));
    break;

  case BC_VARG:
    dasm_put(Dst, 5071, FRAME_VARG, Dt1(->maxstack), Dt1(->top), Dt1(->base), 32-3, Dt1(->base));
    dasm_put(Dst, 5151);
    break;

  /* -- Returns ----------------------------------------------------------- */

  case BC_RETM:
    dasm_put(Dst, 5157);
    break;

  case BC_RET:
    dasm_put(Dst, 5159, FRAME_TYPE, FRAME_VARG, Dt7(->pc), PC2PROTO(k), FRAME_TYPEP);
    break;

  case BC_RET0: case BC_RET1:
    dasm_put(Dst, 5229, FRAME_TYPE, FRAME_VARG);
    if (op == BC_RET1) {
      dasm_put(Dst, 5242);
    }
    dasm_put(Dst, 5245, Dt7(->pc), PC2PROTO(k));
    break;

  /* -- Loops and branches ------------------------------------------------ */

  case BC_FORL:
#if LJ_HASJIT
    dasm_put(Dst, 5273);
#endif
    break;

  case BC_JFORI:
  case BC_JFORL:
#if !LJ_HASJIT
    break;
#endif
  case BC_FORI:
  case BC_IFORL:
    vk = (op == BC_IFORL || op == BC_JFORL);
    if (vk) {
      dasm_put(Dst, 5275, FORL_STEP*8, FORL_STOP*8, FORL_STEP*8, FORL_IDX*8);
    } else {
      dasm_put(Dst, 5286, FORL_IDX*8, FORL_STEP*8, FORL_STEP*8, FORL_STOP*8, FORL_STOP*8);
    }
    dasm_put(Dst, 5305);
    if (op != BC_JFORL) {
      dasm_put(Dst, 5307, 32-1);
    }
    dasm_put(Dst, 5310, FORL_EXT*8);
    if (op != BC_JFORL) {
      dasm_put(Dst, 5313);
    }
    dasm_put(Dst, 5315);
    if (op == BC_JFORI) {
      dasm_put(Dst, 5317, -(BCBIAS_J*4 >> 16));
    }
    dasm_put(Dst, 5320);
    if (op == BC_FORI) {
      dasm_put(Dst, 5323);
    } else if (op == BC_IFORL) {
      dasm_put(Dst, 5326, -(BCBIAS_J*4 >> 16));
    } else {
      dasm_put(Dst, 5332, BC_JLOOP);
    }
    dasm_put(Dst, 5335);
    if (op == BC_FORI) {
      dasm_put(Dst, 5348, -(BCBIAS_J*4 >> 16));
    } else if (op == BC_IFORL) {
      dasm_put(Dst, 5354);
    } else {
      dasm_put(Dst, 5357, BC_JLOOP);
    }
    dasm_put(Dst, 5360);
    break;

  case BC_ITERL:
#if LJ_HASJIT
    dasm_put(Dst, 5363);
#endif
    break;

  case BC_JITERL:
#if !LJ_HASJIT
    break;
#endif
  case BC_IITERL:
    dasm_put(Dst, 5365, LJ_TNIL);
    if (op == BC_JITERL) {
      dasm_put(Dst, 5372);
    } else {
      dasm_put(Dst, 5374, 32-1, -(BCBIAS_J*4 >> 16));
    }
    dasm_put(Dst, 5382);
    break;

  case BC_LOOP:
#if LJ_HASJIT
    dasm_put(Dst, 5394);
#endif
    break;

  case BC_ILOOP:
    dasm_put(Dst, 5396);
    break;

  case BC_JLOOP:
#if LJ_HASJIT
    dasm_put(Dst, 5407);
#endif
    break;

  case BC_JMP:
    dasm_put(Dst, 5409, 32-1, -(BCBIAS_J*4 >> 16));
    break;

  /* -- Function headers -------------------------------------------------- */

  case BC_FUNCF:
#if LJ_HASJIT
    dasm_put(Dst, 5425);
#endif
  case BC_FUNCV:  /* NYI: compiled vararg functions. */
    break;

  case BC_JFUNCF:
#if !LJ_HASJIT
    break;
#endif
  case BC_IFUNCF:
    dasm_put(Dst, 5427, Dt1(->maxstack), -4+PC2PROTO(numparams), -4+PC2PROTO(k), 31-3);
    if (op == BC_JFUNCF) {
      dasm_put(Dst, 5445);
    } else {
      dasm_put(Dst, 5447);
    }
    dasm_put(Dst, 5456);
    break;

  case BC_JFUNCV:
#if !LJ_HASJIT
    break;
#endif
    dasm_put(Dst, 5462);
    break;  /* NYI: compiled vararg functions. */

  case BC_IFUNCV:
    dasm_put(Dst, 5464, Dt1(->maxstack), 8+FRAME_VARG, -4+PC2PROTO(k), -4+PC2PROTO(numparams), LJ_TNIL);
    break;

  case BC_FUNCC:
  case BC_FUNCCW:
    if (op == BC_FUNCC) {
      dasm_put(Dst, 5517, Dt8(->f));
    } else {
      dasm_put(Dst, 5520, DISPATCH_GL(wrapf));
    }
    dasm_put(Dst, 5523, Dt1(->maxstack), Dt1(->base), Dt1(->top), ~LJ_VMST_C);
    if (op == BC_FUNCCW) {
      dasm_put(Dst, 5536, Dt8(->f));
    }
    dasm_put(Dst, 5539, DISPATCH_GL(vmstate), Dt1(->top), 31-3, Dt1(->base), ~LJ_VMST_INTERP, DISPATCH_GL(vmstate));
    break;

  /* ---------------------------------------------------------------------- */

  default:
    fprintf(stderr, "Error: undefined opcode BC_%s\n", bc_names[op]);
    exit(2);
    break;
  }
}

static int build_backend(BuildCtx *ctx)
{
  int op;

  dasm_growpc(Dst, BC__MAX);

  build_subroutines(ctx);

  dasm_put(Dst, 5560);
  for (op = 0; op < BC__MAX; op++)
    build_ins(ctx, (BCOp)op, op);

  return BC__MAX;
}

/* Emit pseudo frame-info for all assembler functions. */
static void emit_asm_debug(BuildCtx *ctx)
{
  int i;
  switch (ctx->mode) {
  case BUILD_elfasm:
    fprintf(ctx->fp, "\t.section .debug_frame,\"\",@progbits\n");
    fprintf(ctx->fp,
	".Lframe0:\n"
	"\t.long .LECIE0-.LSCIE0\n"
	".LSCIE0:\n"
	"\t.long 0xffffffff\n"
	"\t.byte 0x1\n"
	"\t.string \"\"\n"
	"\t.uleb128 0x1\n"
	"\t.sleb128 -4\n"
	"\t.byte 65\n"
	"\t.byte 0xc\n\t.uleb128 1\n\t.uleb128 0\n"
	"\t.align 2\n"
	".LECIE0:\n\n");
    fprintf(ctx->fp,
	".LSFDE0:\n"
	"\t.long .LEFDE0-.LASFDE0\n"
	".LASFDE0:\n"
	"\t.long .Lframe0\n"
	"\t.long .Lbegin\n"
	"\t.long %d\n"
	"\t.byte 0xe\n\t.uleb128 %d\n"
	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -1\n",
	(int)ctx->codesz, CFRAME_SIZE);
    for (i = 14; i <= 31; i++)
      fprintf(ctx->fp,
	"\t.byte %d\n\t.uleb128 %d\n"
	"\t.byte %d\n\t.uleb128 %d\n",
	0x80+i, 37+(31-i), 0x80+32+i, 2+2*(31-i));
    fprintf(ctx->fp,
	"\t.align 2\n"
	".LEFDE0:\n\n");
    fprintf(ctx->fp, "\t.section .eh_frame,\"a\",@progbits\n");
    fprintf(ctx->fp,
	".Lframe1:\n"
	"\t.long .LECIE1-.LSCIE1\n"
	".LSCIE1:\n"
	"\t.long 0\n"
	"\t.byte 0x1\n"
	"\t.string \"zPR\"\n"
	"\t.uleb128 0x1\n"
	"\t.sleb128 -4\n"
	"\t.byte 65\n"
	"\t.uleb128 6\n"			/* augmentation length */
	"\t.byte 0x1b\n"			/* pcrel|sdata4 */
	"\t.long lj_err_unwind_dwarf-.\n"
	"\t.byte 0x1b\n"			/* pcrel|sdata4 */
	"\t.byte 0xc\n\t.uleb128 1\n\t.uleb128 0\n"
	"\t.align 2\n"
	".LECIE1:\n\n");
    fprintf(ctx->fp,
	".LSFDE1:\n"
	"\t.long .LEFDE1-.LASFDE1\n"
	".LASFDE1:\n"
	"\t.long .LASFDE1-.Lframe1\n"
	"\t.long .Lbegin-.\n"
	"\t.long %d\n"
	"\t.uleb128 0\n"			/* augmentation length */
	"\t.byte 0xe\n\t.uleb128 %d\n"
	"\t.byte 0x11\n\t.uleb128 65\n\t.sleb128 -1\n",
	(int)ctx->codesz, CFRAME_SIZE);
    for (i = 14; i <= 31; i++)
      fprintf(ctx->fp,
	"\t.byte %d\n\t.uleb128 %d\n"
	"\t.byte %d\n\t.uleb128 %d\n",
	0x80+i, 37+(31-i), 0x80+32+i, 2+2*(31-i));
    fprintf(ctx->fp,
	"\t.align 2\n"
	".LEFDE1:\n\n");
    break;
  default:
    break;
  }
}

