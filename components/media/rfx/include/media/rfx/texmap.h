#ifndef MEDIALIB_RFX_TEXMAP_HEADER
#define MEDIALIB_RFX_TEXMAP_HEADER

#include <cstddef>

namespace media
{

namespace rfx
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Текстурная карта
///////////////////////////////////////////////////////////////////////////////////////////////////
class Texmap
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы / деструктор / присваивание
///////////////////////////////////////////////////////////////////////////////////////////////////
    Texmap  ();
    Texmap  (const Texmap&);
    ~Texmap ();

    Texmap& operator = (const Texmap&);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Идентификатор
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t Id () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Копирование
///////////////////////////////////////////////////////////////////////////////////////////////////
    Texmap Clone () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Имя текстуры
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetImage (const char* name);
    const char* Image    () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Имя сэмплера
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetSampler (const char* name);
    const char* Sampler    () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Имя семантики карты
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetSemantic (const char* name);
    const char* Semantic    () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Swap (Texmap&);
  
  private:
    struct Impl;
    
    Texmap (Impl*);
    
  private:    
    Impl* impl;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////
void swap (Texmap&, Texmap&);

}

}

#endif
