#ifndef MEDIALIB_PHYSICS_BASIC_SHAPES_HEADER
#define MEDIALIB_PHYSICS_BASIC_SHAPES_HEADER

#include <math/vector.h>

namespace media
{

namespace physics
{

namespace shapes
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание тела в виде параллелепипеда
///////////////////////////////////////////////////////////////////////////////////////////////////
struct Box
{
  math::vec3f half_dimensions; //половины длин сторон
  
  Box ();
  Box (const math::vec3f& dimensions);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание тела в виде сферы
///////////////////////////////////////////////////////////////////////////////////////////////////
struct Sphere
{
  float radius; //радиус

  Sphere ();
  Sphere (float radius);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание тела в виде капсулы
///////////////////////////////////////////////////////////////////////////////////////////////////
struct Capsule
{
  float radius;  //радиус полусфер
  float height;  //высота тела
  
  Capsule ();
  Capsule (float radius, float height);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание тела в виде плоскости
///////////////////////////////////////////////////////////////////////////////////////////////////
struct Plane
{
  math::vec3f normal;  //нормаль
  float       d;       //смещение

  Plane ();
  Plane (const math::vec3f& normal, float d = 0.0f);
};

}

}

}

#endif
