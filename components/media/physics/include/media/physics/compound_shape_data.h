#ifndef MEDIALIB_PHYSICS_COMPOUND_SHAPE_DATA_HEADER
#define MEDIALIB_PHYSICS_COMPOUND_SHAPE_DATA_HEADER

namespace media
{

namespace physics
{

class Shape;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание тела в виде набора тел
///////////////////////////////////////////////////////////////////////////////////////////////////
class CompoundShapeData
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы/деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    CompoundShapeData  ();
    CompoundShapeData  (const CompoundShapeData&);
    ~CompoundShapeData ();

    CompoundShapeData& operator = (const CompoundShapeData&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление/удаление тел
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t Size     () const;
    size_t Capacity () const;
    void   Reserve  (size_t size);

    void Attach    (const Shape& shape);
    void Detach    (const Shape& shape);
    void DetachAll ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение тел
///////////////////////////////////////////////////////////////////////////////////////////////////
    const Shape& Shape (size_t index);

  private:
    struct Impl;
    Impl* impl;
};

}

}

#endif
