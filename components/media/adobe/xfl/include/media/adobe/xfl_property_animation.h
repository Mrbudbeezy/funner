#ifndef MEDIALIB_ADOBE_XFL_PROPERTY_ANIMATION_HEADER
#define MEDIALIB_ADOBE_XFL_PROPERTY_ANIMATION_HEADER

#include <cstddef>

#include <media/adobe/xfl_collection.h>

namespace media
{

namespace adobe
{

namespace xfl
{

struct PropertyAnimationKeyframe
{
  float value; //значение
  float time;  //время начала активности ключевого кадра в секундах
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Анимируемое свойство
///////////////////////////////////////////////////////////////////////////////////////////////////
class PropertyAnimation
{
  public:
    typedef ICollection<PropertyAnimationKeyframe> KeyframeList;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор/деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    PropertyAnimation  ();
    PropertyAnimation  (const PropertyAnimation&);
    ~PropertyAnimation ();

    PropertyAnimation& operator = (const PropertyAnimation&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Имя свойства
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* Name    () const;
    void        SetName (const char* id);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Включена ли анимация для этого свойства
///////////////////////////////////////////////////////////////////////////////////////////////////
    bool Enabled    () const;
    void SetEnabled (bool enabled);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Ключевые точки
///////////////////////////////////////////////////////////////////////////////////////////////////
          KeyframeList& Keyframes ();
    const KeyframeList& Keyframes () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Swap (PropertyAnimation&);

  private:
    struct Impl;
    Impl* impl;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////
void swap (PropertyAnimation&, PropertyAnimation&);

}

}

}

#endif
