#ifndef MEDIALIB_COMPRESSED_IMAGE_HEADER
#define MEDIALIB_COMPRESSED_IMAGE_HEADER

#include <cstddef>

#include <common/serializer_manager.h>

namespace media
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Сжатая картинка
///////////////////////////////////////////////////////////////////////////////////////////////////
class CompressedImage
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы / деструктор / присваивание
///////////////////////////////////////////////////////////////////////////////////////////////////
    CompressedImage  ();
    CompressedImage  (const char* file_name);
    CompressedImage  (const CompressedImage&);
    ~CompressedImage ();

    CompressedImage& operator = (const CompressedImage&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Размеры картинки в пикселях
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t Width    () const;
    size_t Height   () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Количество слоёв / mip-уровней
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t Depth     () const;
    size_t MipsCount () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Формат - платформо-зависим, предполагается непосредственная загрузка сжатых образов в видеопамять
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* Format () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Размер битовой карты
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t BitmapSize (size_t layer, size_t mip_level) const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение битовой карты
///////////////////////////////////////////////////////////////////////////////////////////////////
    const void* Bitmap (size_t layer, size_t mip_level) const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Загрузка
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Load (const char* file_name);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Swap (CompressedImage&);

  private:
    struct Impl;
    Impl* impl;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////
void swap (CompressedImage&, CompressedImage&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Интерфейс реализации сжатой картинки
///////////////////////////////////////////////////////////////////////////////////////////////////
class ICustomCompressedImage
{
  public:
    virtual ~ICustomCompressedImage () {}

///////////////////////////////////////////////////////////////////////////////////////////////////
///Информация о картинке
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual size_t      Width     () = 0;
    virtual size_t      Height    () = 0;
    virtual size_t      Depth     () = 0;
    virtual size_t      MipsCount () = 0;
    virtual const char* Format    () = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Размер образа / получение образа
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual size_t      BitmapSize (size_t layer, size_t mip_level) = 0;  
    virtual const void* Bitmap     (size_t layer, size_t mip_level) = 0;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Система управления картинками
///////////////////////////////////////////////////////////////////////////////////////////////////
typedef common::ResourceSerializerManager<ICustomCompressedImage* (const char* file_name), void ()> CompressedImageManager;

}

#endif
