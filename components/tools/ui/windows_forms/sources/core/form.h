///////////////////////////////////////////////////////////////////////////////////////////////////
///События формы
///////////////////////////////////////////////////////////////////////////////////////////////////
enum FormEvent
{
  FormEvent_OnClosing, //срабатывает при попытке закрытия формы (закрытие может быть отменено посредством Form::CancelClose)
  FormEvent_OnClosed,  //срабатывает после уничтожения формы

  FormEvent_Num
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовый класс форм
///////////////////////////////////////////////////////////////////////////////////////////////////
class Form: public xtl::reference_counter, public xtl::dynamic_cast_root
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Изменение текста формы
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetText (const char*);
    const char* Text    ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Управление видимостью формы
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Show       ();
    void Hide       ();
    void SetVisible (bool state);
    bool IsVisible  ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка меню
///////////////////////////////////////////////////////////////////////////////////////////////////
    void                      SetMenuStrip (windows_forms::MenuStrip*);
    windows_forms::MenuStrip* MenuStrip    ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление / удаление панели кнопок
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Insert (windows_forms::ToolStrip*);
    void Remove (windows_forms::ToolStrip*);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Низкоуровневый дескриптор окна
///////////////////////////////////////////////////////////////////////////////////////////////////
    const void* WindowHandle ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обработка закрытия формы
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Close ();
    void CancelClose (); //может быть вызван в обработчике события закрытия формы

///////////////////////////////////////////////////////////////////////////////////////////////////
///Подписка на события формы
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetEventHandler (FormEvent event, const char* command);
    const char* EventHandler    (FormEvent event) const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация шлюзов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterInvokers (script::Environment&, const char* library_name);

  protected:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Form  (windows_forms::WindowSystem& window_system);
    ~Form ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение оконной системы
///////////////////////////////////////////////////////////////////////////////////////////////////
    windows_forms::WindowSystem& WindowSystem ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение/установка ref-указателя формы
///////////////////////////////////////////////////////////////////////////////////////////////////
    void                          SetHandle (System::Windows::Forms::Form^);
    System::Windows::Forms::Form^ Handle    ();

  private:
    System::Windows::Forms::Form^ CheckedHandle ();    
    void OnClosed (Object^, EventArgs^);
    void OnClosing (Object^, System::ComponentModel::CancelEventArgs^);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
