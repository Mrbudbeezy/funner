///////////////////////////////////////////////////////////////////////////////////////////////////
///Элемент меню
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class T>
class MenuItem: public xtl::reference_counter, public xtl::dynamic_cast_root
{
  public:
    typedef xtl::intrusive_ptr<MenuItem> Pointer;
    typedef msclr::gcroot<T^>            HandlePtr;
  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    MenuItem  (WindowSystem&);
    ~MenuItem ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Дескриптор
///////////////////////////////////////////////////////////////////////////////////////////////////
    HandlePtr& Handle () { return item; }

///////////////////////////////////////////////////////////////////////////////////////////////////
///Работа со свойствами меню
///////////////////////////////////////////////////////////////////////////////////////////////////
    void SetText           (const char* text);
    void SetTip            (const char* tip);
    void SetImage          (const char* image);
    void SetOnClickCommand (const char* command);

    const char* Text           ();
    const char* Tip            ();
    const char* Image          () { return image.c_str (); }
    const char* OnClickCommand () { return on_click_command.c_str (); }

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация шлюзов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterInvokers (script::Environment&, const char* library_name);

  private:
    void OnClick (System::Object^, System::EventArgs^);

  private:
    HandlePtr     item;             //элемент меню
    WindowSystem& window_system;    //оконная система
    AutoString    text;             //текст пункта меню
    AutoString    tip;              //текст подсказки
    stl::string   image;            //ссылка на файл с изображением
    stl::string   on_click_command; //команда, выполняемая при выборе пункта меню
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление вложений
///////////////////////////////////////////////////////////////////////////////////////////////////
void insert (MenuItem<System::Windows::Forms::ToolStripMenuItem>& parent,
             MenuItem<System::Windows::Forms::ToolStripMenuItem>& child);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Меню
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class T, class Item>
class Menu: public xtl::reference_counter, public xtl::dynamic_cast_root
{
  public:
    typedef xtl::intrusive_ptr<Menu> Pointer;
    typedef msclr::gcroot<T^>        HandlePtr;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Menu  ();
    ~Menu ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Дескриптор
///////////////////////////////////////////////////////////////////////////////////////////////////
    HandlePtr& Handle () { return menu; }

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление пунктов меню
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Insert (Item&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация шлюзов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterInvokers (script::Environment&, const char* library_name);

  private:
    HandlePtr menu; //меню
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Переопределения
///////////////////////////////////////////////////////////////////////////////////////////////////
typedef MenuItem<System::Windows::Forms::ToolStripMenuItem>      MenuStripItem;
typedef Menu<System::Windows::Forms::MenuStrip, MenuStripItem>   MenuStrip;
typedef MenuItem<System::Windows::Forms::ToolStripButton>        ToolStripButton;
typedef Menu<System::Windows::Forms::ToolStrip, ToolStripButton> ToolStrip;
