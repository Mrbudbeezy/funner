//forward declaration
ref class MainFormImpl;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Главная форма
///////////////////////////////////////////////////////////////////////////////////////////////////
class MainForm: public Form
{
  public:
    typedef xtl::intrusive_ptr<MainForm> Pointer;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    ~MainForm ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание формы
///////////////////////////////////////////////////////////////////////////////////////////////////
    static Pointer Create (windows_forms::WindowSystem& window_system);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация шлюзов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterInvokers (script::Environment&, const char* library_name, const char* base_library_name);

  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    MainForm (windows_forms::WindowSystem& window_system);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение ref-указателя формы
///////////////////////////////////////////////////////////////////////////////////////////////////
    System::Windows::Forms::Form^ Handle ();

  private:
    typedef msclr::gcroot<MainFormImpl^> HandlePtr;    

  private:
    HandlePtr form; //дескриптор формы
};
