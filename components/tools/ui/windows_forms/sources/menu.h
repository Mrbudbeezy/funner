///////////////////////////////////////////////////////////////////////////////////////////////////
///Элемент меню
///////////////////////////////////////////////////////////////////////////////////////////////////
class ToolMenuItem: public xtl::reference_counter, public xtl::dynamic_cast_root
{
  public:
    typedef xtl::intrusive_ptr<ToolMenuItem>  Pointer;
    typedef msclr::gcroot<ToolStripMenuItem^> HandlePtr;
  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    ToolMenuItem  (IApplicationServer& server);
    ~ToolMenuItem ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Дескриптор
///////////////////////////////////////////////////////////////////////////////////////////////////
    HandlePtr& Handle () { return item; }

///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка текста
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetText (const stl::string& text);
    stl::string Text    ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Подсказка
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetTip (const stl::string& text);
    stl::string Tip ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка команды, выполняемой при выборе пункта меню
///////////////////////////////////////////////////////////////////////////////////////////////////
    void         SetOnClickCommand (const stl::string& command);
    stl::string& OnClickCommand    () { return on_click_command; }

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление вложений
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Insert (const ToolMenuItem::Pointer&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация шлюзов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterInvokers (script::Environment&);
    
  private:
    void OnClick (System::Object^, System::EventArgs^);

  private:
    HandlePtr           item;             //элемент меню
    IApplicationServer& server;           //сервер приложения
    stl::string         on_click_command; //команда, выполняемая при выборе пункта меню
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Цепочка меню
///////////////////////////////////////////////////////////////////////////////////////////////////
class ToolMenuStrip: public xtl::reference_counter, public xtl::dynamic_cast_root
{
  public:
    typedef xtl::intrusive_ptr<ToolMenuStrip> Pointer;
    typedef msclr::gcroot<MenuStrip^>         HandlePtr;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    ToolMenuStrip  ();
    ~ToolMenuStrip ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Дескриптор
///////////////////////////////////////////////////////////////////////////////////////////////////
    HandlePtr& Handle () { return menu; }

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление пунктов меню
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Insert (const ToolMenuItem::Pointer&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация шлюзов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterInvokers (script::Environment&);

  private:
    HandlePtr menu; //меню
};
