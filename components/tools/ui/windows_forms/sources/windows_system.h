///////////////////////////////////////////////////////////////////////////////////////////////////
///Оконная система на базе Windows Forms
///////////////////////////////////////////////////////////////////////////////////////////////////
class WindowSystem: public ICustomWindowSystem, public xtl::reference_counter
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    WindowSystem  (IApplicationServer*);
    ~WindowSystem ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Выполнение команды на стороне оконной системы
///////////////////////////////////////////////////////////////////////////////////////////////////
    void ExecuteCommand (const char* command);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Подсчёт ссылок
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AddRef  ();
    void Release ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение сервера приложения
///////////////////////////////////////////////////////////////////////////////////////////////////
    IApplicationServer& ApplicationServer () { return *application_server; }
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Реестры контролов
///////////////////////////////////////////////////////////////////////////////////////////////////
    typedef ControlRegistry<ToolMenuItem>  MenuItemRegistry;
    typedef ControlRegistry<ToolMenuStrip> MenuStripRegistry;

    MenuItemRegistry&  MenuItems  () { return menu_items; }
    MenuStripRegistry& MenuStrips () { return menu_strips; }

  private:
    void RegisterInvokers  ();
    void LoadConfiguration (const char* file_name_mask);

  private:
    typedef xtl::shared_ptr<script::Environment> ShellEnvironmentPtr;

  private:
    ApplicationServerPtr application_server; //сервер приложения
    ToolForm::Pointer    main_form;          //главная форма приложения
    ShellEnvironmentPtr  shell_environment;  //окружение скриптовой среды
    script::Shell        shell;              //скриптовый интерпретатор
    MenuItemRegistry     menu_items;         //реестр элементов меню
    MenuStripRegistry    menu_strips;        //реестр цепочек меню
};
