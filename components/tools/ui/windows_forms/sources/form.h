///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовый класс форм
///////////////////////////////////////////////////////////////////////////////////////////////////
class Form: public xtl::reference_counter, public xtl::dynamic_cast_root
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Изменение текста формы
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetText (const char*);
    const char* Text    ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Управление видимостью формы
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Show       ();
    void Hide       ();
    void SetVisible (bool state);
    bool IsVisible  ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка меню
///////////////////////////////////////////////////////////////////////////////////////////////////
    void                      SetMenuStrip (windows_forms::MenuStrip*);
    windows_forms::MenuStrip* MenuStrip    () { return menu_strip; }

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление / удаление панели кнопок
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Insert (windows_forms::ToolStrip*);
    void Remove (windows_forms::ToolStrip*);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация шлюзов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterInvokers (script::Environment&, const char* library_name);

  protected:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Form  (windows_forms::WindowSystem& window_system);
    ~Form ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение оконной системы
///////////////////////////////////////////////////////////////////////////////////////////////////
    windows_forms::WindowSystem& WindowSystem () { return window_system; }

  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение ref-указателя формы
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual System::Windows::Forms::Form^ Handle () = 0;

  private:
    windows_forms::WindowSystem& window_system; //оконная система
    windows_forms::MenuStrip*    menu_strip;    //цепочка меню формы
    AutoString                   text;          //текст формы
};
