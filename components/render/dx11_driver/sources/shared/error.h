#ifndef RENDER_DX11_DRIVER_SHARED_ERROR_HEADER
#define RENDER_DX11_DRIVER_SHARED_ERROR_HEADER

#include <D3D11.h>

#include <xtl/common_exceptions.h>

namespace render
{

namespace low_level
{

namespace dx11
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Исключение DX
///////////////////////////////////////////////////////////////////////////////////////////////////
class Dx11Exception: virtual public xtl::message_exception_base
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Dx11Exception (const char* source, HRESULT result);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Результат
///////////////////////////////////////////////////////////////////////////////////////////////////
    HRESULT GetResult () const { return hresult; }

  private:
    HRESULT hresult;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Проверка ошибок
///////////////////////////////////////////////////////////////////////////////////////////////////
void check_errors (HRESULT result);
void check_errors (const char* source, HRESULT result);

}

}

}

#endif
