#ifndef RENDER_DX11_DRIVER_OBJECT_HEADER
#define RENDER_DX11_DRIVER_OBJECT_HEADER

#include <typeinfo>

#include <render/low_level/helpers/object.h>

namespace render
{

namespace low_level
{

namespace dx11
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Реализация объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
class Object: public helpers::Object
{
  public:
    static const size_t FAMILY_ID = 'DX11';

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение семейства объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
    void GetFamily (ObjectFamily& family, void*& root);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Приведение типов объектов
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class DstT, class SrcT>
DstT* cast_object (SrcT* ptr, const char* source, const char* argument_name);

#include <shared/detail/object.inl>

}

}

}

#endif
