#ifndef RENDER_DX11_DRIVER_CONTEXT_STATE_HEADER
#define RENDER_DX11_DRIVER_CONTEXT_STATE_HEADER

#include <render/low_level/state_block.h>

namespace render
{

namespace low_level
{

namespace dx11
{

typedef xtl::com_ptr<ID3D11DeviceContext> DxContextPtr;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Интерфейс состояния контекста устройства отрисовки
///////////////////////////////////////////////////////////////////////////////////////////////////
class IContextState
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~IContextState () {}

///////////////////////////////////////////////////////////////////////////////////////////////////
///Захват / восстановление состояния
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void Capture (const StateBlockMask&, IContextState& src_state) = 0;
    virtual void Apply   (const StateBlockMask&, IContextState& dst_state) = 0;
};

}

}

}

#endif
