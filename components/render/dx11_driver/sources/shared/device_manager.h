#ifndef RENDER_DX11_DEVICE_MANAGER_HEADER
#define RENDER_DX11_DEVICE_MANAGER_HEADER

#include <D3D11.h>

#include <xtl/intrusive_ptr.h>

#include <render/low_level/helpers/object.h>

namespace render
{

namespace low_level
{

namespace dx11
{

using helpers::cast_object;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Менеджер устройства
///////////////////////////////////////////////////////////////////////////////////////////////////
class DeviceManager
{
  public:
    typedef xtl::com_ptr<ID3D11Device> DxDevicePtr;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы / деструктор / присваивание
///////////////////////////////////////////////////////////////////////////////////////////////////
    DeviceManager  (const DxDevicePtr& device);
    DeviceManager  (const DeviceManager&);
    ~DeviceManager ();

    DeviceManager& operator = (const DeviceManager&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Дескриптор устройства
///////////////////////////////////////////////////////////////////////////////////////////////////
    ID3D11Device& GetDevice () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Swap (DeviceManager&);

  private:
    struct Impl;
    Impl* impl;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Объект устройства отрисовки
///////////////////////////////////////////////////////////////////////////////////////////////////
class DeviceObject: public helpers::Object
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    DeviceObject (const DeviceManager&);

  protected:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Дескриптор устройства
///////////////////////////////////////////////////////////////////////////////////////////////////
    ID3D11Device& GetDevice () const;

  private:
    DeviceManager manager; //менеджер устройства отрисовки
};

}

}

}

#endif

