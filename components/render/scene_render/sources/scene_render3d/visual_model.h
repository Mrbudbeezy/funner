///////////////////////////////////////////////////////////////////////////////////////////////////
///Визуализируемая модель
///////////////////////////////////////////////////////////////////////////////////////////////////
class VisualModel: public Renderable
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    VisualModel  (Scene& scene, scene_graph::VisualModel& entity);
    ~VisualModel ();
    
  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Отрисовка / обновление состояния
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void DrawCore   (Frame& frame);
    virtual void UpdateCore (Frame& frame);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
