///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовый визуализируемый объект
///////////////////////////////////////////////////////////////////////////////////////////////////
class Renderable: public Node
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Renderable (Scene& scene, scene_graph::Entity& entity);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обновление кадра
///////////////////////////////////////////////////////////////////////////////////////////////////
    void UpdateFrame (Frame& frame);
    
  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Отрисовка / обновление состояния
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void UpdateFrameCore (Frame& frame) = 0;    

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обход
///////////////////////////////////////////////////////////////////////////////////////////////////
    void VisitCore (IVisitor&);
};
