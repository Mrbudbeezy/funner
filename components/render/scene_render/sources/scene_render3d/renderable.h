///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовый визуализируемый объект
///////////////////////////////////////////////////////////////////////////////////////////////////
class Renderable: public xtl::noncopyable, public xtl::reference_counter
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Renderable  (Scene& scene, scene_graph::Entity& entity);
    ~Renderable ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Отрисовка
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Draw (Frame& frame);
    
  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Отрисовка / обновление состояния
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void DrawCore   (Frame& frame) = 0;
    virtual void UpdateCore (Frame& frame) = 0;

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
