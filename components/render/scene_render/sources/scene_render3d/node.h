///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовый объект сцены
///////////////////////////////////////////////////////////////////////////////////////////////////
class Node: public xtl::noncopyable, public xtl::reference_counter
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Node  (Scene& scene, scene_graph::Entity& entity);
    virtual ~Node ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Положение в пространстве
///////////////////////////////////////////////////////////////////////////////////////////////////
    const math::mat4f& WorldTM ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обход
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Visit (IVisitor&);

  protected:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обновление состояния
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Update ();

  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обновление состояния
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void UpdateCore ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обход
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void VisitCore (IVisitor&);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
