///////////////////////////////////////////////////////////////////////////////////////////////////
///Результаты обхода сцены
///////////////////////////////////////////////////////////////////////////////////////////////////
struct TraverseResults
{
  typedef stl::vector<Renderable> RenderableArray;
//  typedef stl::vector<Light>      LightArray;
  
  RenderableArray renderables; //список отображаемых объектов
//  LightArray      lights;      //список источников света  
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Интерфейс диспетчера объектов при обходе сцены
///////////////////////////////////////////////////////////////////////////////////////////////////
class IVisitor
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Диспетчеризация по типам
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void Visit (Node& entity) {}
    virtual void Visit (Renderable& entity) {}
    virtual void Visit (VisualModel& entity) {}
    virtual void Visit (Light& entity) {}    

  protected:
    virtual ~IVisitor () {}
};

