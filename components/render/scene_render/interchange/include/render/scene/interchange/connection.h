#ifndef RENDER_SCENE_INTERCHANGE_CONNECTION_HEADER
#define RENDER_SCENE_INTERCHANGE_CONNECTION_HEADER

#include <render/scene/interchange/command_buffer.h>

namespace render
{

namespace scene
{

namespace interchange
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Слушатель событий соединения
///////////////////////////////////////////////////////////////////////////////////////////////////
class IConnectionListener
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Оповещение о событии обратной связи
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void OnFeedback (const CommandBuffer&) = 0;

  protected:
    virtual ~IConnectionListener () {}
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Соединение
///////////////////////////////////////////////////////////////////////////////////////////////////
class IConnection
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Посылка команд на рендеринг
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void Send (const CommandBuffer& commands) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Ожидание обратной связи
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void WaitFeedback () = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Подписка на события соединения
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void AttachListener (IConnectionListener*) = 0;
    virtual void DetachListener (IConnectionListener*) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Подсчет ссылок
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void AddRef  () = 0;
    virtual void Release () = 0;

  protected:
    virtual ~IConnection () {}
};

}

}

}

#endif
