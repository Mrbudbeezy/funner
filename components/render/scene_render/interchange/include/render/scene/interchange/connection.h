#ifndef RENDER_SCENE_INTERCHANGE_CONNECTION_HEADER
#define RENDER_SCENE_INTERCHANGE_CONNECTION_HEADER

#include <xtl/trackable.h>

#include <render/scene/interchange/command_buffer.h>

namespace render
{

namespace scene
{

namespace interchange
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Соединение
///////////////////////////////////////////////////////////////////////////////////////////////////
class IConnection
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обработка входного потока данных
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void ProcessCommands (const CommandBuffer& commands) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Является ли соединение внутрипроцессным
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual bool IsInprocessed () = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение события оповещения об удалении
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual xtl::trackable& GetTrackable () = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Подсчет ссылок
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void AddRef  () = 0;
    virtual void Release () = 0;

  protected:
    virtual ~IConnection () {}
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение события оповещения об удалении
///////////////////////////////////////////////////////////////////////////////////////////////////
inline xtl::trackable& get_trackable (IConnection& connection)
{
  return connection.GetTrackable ();
}

}

}

}

#endif
