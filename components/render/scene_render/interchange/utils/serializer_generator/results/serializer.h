#ifndef RENDER_SCENE_INVOKE_SERIALIZER_HEADER
#define RENDER_SCENE_INVOKE_SERIALIZER_HEADER

namespace render
{

namespace scene
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///»дентификаторы команд (кодогенераци€)
///////////////////////////////////////////////////////////////////////////////////////////////////
enum CommandId
{
  CommandId_LoadResource,
  CommandId_UnloadResource,
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///—ериализатор команд от клиента к серверу
///////////////////////////////////////////////////////////////////////////////////////////////////
class ClientToServerSerializer
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///ƒоступные команды сериализации (кодогенераци€)
///////////////////////////////////////////////////////////////////////////////////////////////////
    void LoadResource(const char* name);
    void UnloadResource(const char* name);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///—ериализатор команд от сервера к клиенту
///////////////////////////////////////////////////////////////////////////////////////////////////
class ServerToClientSerializer
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///ƒоступные команды сериализации (кодогенераци€)
///////////////////////////////////////////////////////////////////////////////////////////////////

};

#include <render/scene/detail/serializer.inl>
#include <render/scene/detail/deserializer.inl>

}

}

#endif
