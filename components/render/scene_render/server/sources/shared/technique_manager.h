#ifndef RENDER_SCENE_SERVER_TECHNIQUE_MANAGER_SHARED_HEADER
#define RENDER_SCENE_SERVER_TECHNIQUE_MANAGER_SHARED_HEADER

#include <xtl/function.h>

#include <common/component.h>

#include <shared/technique.h>

namespace render
{

namespace scene
{

namespace server
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Менеджер техник рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
class TechniqueManager
{
  public:
    typedef xtl::function<Technique* (RenderManager& manager, const common::ParseNode& configuration)> TechniqueCreator;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация техник
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterTechnique       (const char* technique, const TechniqueCreator& creator);
    static void UnregisterTechnique     (const char* technique);
    static void UnregisterAllTechniques ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание техники
///////////////////////////////////////////////////////////////////////////////////////////////////
    static TechniquePtr CreateTechnique (const char* technique, RenderManager& manager, const common::ParseNode& configuration);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистратор техники
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class T> class TechniqueRegistrator
{
  public:
    TechniqueRegistrator ();
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистратор техники
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class T> class TechniqueComponentRegistrator: public common::ComponentRegistrator<TechniqueRegistrator<T> >
{
  public:
    TechniqueComponentRegistrator ();
};

#include <shared/detail/technique_manager.inl>

}

}

}

#endif
