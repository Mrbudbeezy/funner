#ifndef RENDER_SCENE_SERVER_PAGE_CURL_SHARED_HEADER
#define RENDER_SCENE_SERVER_PAGE_CURL_SHARED_HEADER

#include <shared/sg/entity.h>

namespace render
{

namespace scene
{

namespace server
{

using interchange::PageCurlParams;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Разворот книги
///////////////////////////////////////////////////////////////////////////////////////////////////
class PageCurl: public Entity
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / Деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    PageCurl ();
    ~PageCurl ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Параметры
///////////////////////////////////////////////////////////////////////////////////////////////////          
    void                  SetParams (const PageCurlParams& params, const char* front_left_material,
                                     const char* front_right_material, const char* back_left_material,
                                     const char* back_right_material);
    const PageCurlParams& Params    () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Тип
///////////////////////////////////////////////////////////////////////////////////////////////////          
    interchange::NodeType Type () const;

  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обход
///////////////////////////////////////////////////////////////////////////////////////////////////
    void VisitCore (ISceneVisitor&);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

}

}

}

#endif
