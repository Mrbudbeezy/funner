#ifndef RENDER_SCENE_SERVER_STATIC_MESH_SHARED_HEADER
#define RENDER_SCENE_SERVER_STATIC_MESH_SHARED_HEADER

#include <shared/sg/visual_model.h>

namespace render
{

namespace scene
{

namespace server
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Статический меш
///////////////////////////////////////////////////////////////////////////////////////////////////
class StaticMesh: public VisualModel
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы / деструктор / присваивание
///////////////////////////////////////////////////////////////////////////////////////////////////
    StaticMesh  (RenderManager& render_manager);
    ~StaticMesh ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Имя меша
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetMeshName (const char* name);
    const char* MeshName    () const;

  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Отрисовка
///////////////////////////////////////////////////////////////////////////////////////////////////
    void DrawCore (RenderingContext&);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

}

}

}

#endif
