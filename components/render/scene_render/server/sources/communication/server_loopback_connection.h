///////////////////////////////////////////////////////////////////////////////////////////////////
///Исходящее соединение от сервера к серверу
///////////////////////////////////////////////////////////////////////////////////////////////////
class ServerLoopbackConnection: public xtl::noncopyable
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    ServerLoopbackConnection  (const char* name);
    ~ServerLoopbackConnection ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Сообщения серверу
///////////////////////////////////////////////////////////////////////////////////////////////////
    void OnWindowAttached        (size_t id, const char* name, const char* init_string, void* handle, size_t width, size_t height, size_t left, size_t top, size_t right, size_t bottom);
    void OnWindowDetached        (size_t id);
    void OnWindowSizeChanged     (size_t id, size_t width, size_t height);
    void OnWindowViewportChanged (size_t id, size_t left, size_t top, size_t right, size_t bottom);
    void OnWindowHandleChanged   (size_t id, void* handle);
    void OnWindowPaint           (size_t id);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обработка входящей команды
///////////////////////////////////////////////////////////////////////////////////////////////////
    static bool ProcessIncomingCommand (InternalCommandId id, interchange::InputStream&, ConnectionState& state);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
