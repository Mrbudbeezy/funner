///////////////////////////////////////////////////////////////////////////////////////////////////
///Соединение с клиентом
///////////////////////////////////////////////////////////////////////////////////////////////////
class Connection: public interchange::IConnection, public xtl::reference_counter
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Connection  (ServerImpl& server, const char* init_string); //must be thread neutral
    ~Connection ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Является ли соединение внутрипроцессным
///////////////////////////////////////////////////////////////////////////////////////////////////
    bool IsInprocessed ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обработка входного потока данных
///////////////////////////////////////////////////////////////////////////////////////////////////
    void ProcessCommands (const interchange::CommandBuffer& commands);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение события оповещения об удалении
///////////////////////////////////////////////////////////////////////////////////////////////////
    xtl::trackable& GetTrackable ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Подсчет ссылок
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AddRef  ();
    void Release ();

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;  
};
