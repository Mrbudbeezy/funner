#ifndef SCENE_RENDER_SERVER_HEADER
#define SCENE_RENDER_SERVER_HEADER

#include <stl/auto_ptr.h>

namespace syslib
{

//forward declaration
class Window;

}

namespace render
{

namespace scene
{

namespace server
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Сервер рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
class Server
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Server  (const char* name);
    ~Server ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Присоединение окон
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AttachWindow     (const char* name, syslib::Window& window, const char* init_string);
    void DetachWindow     (const char* name);
    void DetachAllWindows ();

  private:
    Server (const Server&); //no impl
    Server& operator = (const Server&); //no impl

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

}

}

using scene::server::Server;

}

#endif
