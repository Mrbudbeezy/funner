#ifndef RENDER_CUSTOM_SCENE_RENDER_HEADER
#define RENDER_CUSTOM_SCENE_RENDER_HEADER

#include <xtl/functional_fwd>

namespace scene_graph
{

//forward declaration
class Camera;
class Viewport;
class Screen;

}

namespace render
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Интерфейс области отрисовки
///////////////////////////////////////////////////////////////////////////////////////////////////
class RenderView
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Область вывода
///////////////////////////////////////////////////////////////////////////////////////////////////
    void                  SetViewport (scene_graph::Viewport*);
    scene_graph::Viewport Viewport () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Экран
///////////////////////////////////////////////////////////////////////////////////////////////////
    void                SetScreen (scene_graph::Screen*);
    scene_graph::Screen Screen () const;    
  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Отрисовка сцены
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Draw (Frame* parent_frame = 0);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Подсчёт ссылок
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AddRef  ();
    void Release ();

  protected:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
            RenderView  ();  
    virtual ~RenderView ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Камера и свойства ренедринга
///////////////////////////////////////////////////////////////////////////////////////////////////
    scene_graph::Camera*       Camera     () const;
    const common::PropertyMap& Properties () const;    
    
  private:
    RenderView (const RenderView&); //no impl
    RenderView& operator = (const RenderView&); //no impl
    
  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Рисование
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void DrawCore (Frame& frame) = 0;
  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Оповещения
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void CameraUpdateNotify     () {}
    virtual void PropertiesUpdateNotify () {}
    virtual void ViewportUpdateNotify   () {}
    virtual void ScreenUpdateNotify     () {}
    
  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Менеджер путей рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
class RenderPathManager
{
  public:
    typedef xtl::function<RenderView* (RenderManager& manager, const char* render_path)> RenderPathCreater;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация путей рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterRenderPath       (const char* path_name, const RenderPathCreater& creater);
    static void UnregisterRenderPath     (const char* path_name);
    static void UnregisterAllRenderPaths ();
};

}

#endif
