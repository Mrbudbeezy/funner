///////////////////////////////////////////////////////////////////////////////////////////////////
///Реализация рендера сцены
///////////////////////////////////////////////////////////////////////////////////////////////////
class ClientImpl: public xtl::noncopyable
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    ClientImpl  ();
    ~ClientImpl ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Связывание с контекстом
///////////////////////////////////////////////////////////////////////////////////////////////////
    void SetContext (Context*);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Выделение идентификаторов
///////////////////////////////////////////////////////////////////////////////////////////////////
    interchange::uint32 AllocateId   (ObjectType type);
    void                DeallocateId (ObjectType type, interchange::uint32 id);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Синхронизация свойств
///////////////////////////////////////////////////////////////////////////////////////////////////
    PropertyMapSynchronizer CreateSynchronizer  (const common::PropertyMap&);
    common::PropertyMap     GetServerProperties (uint64 id); 

///////////////////////////////////////////////////////////////////////////////////////////////////
///Выполнение синхронизации с сервером
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Sync ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обработчики ответов сервера
///////////////////////////////////////////////////////////////////////////////////////////////////
    void UpdatePropertyMap    (interchange::InputStream&);
    void RemovePropertyMap    (uint64 id);
    void RemovePropertyLayout (uint64 id);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
