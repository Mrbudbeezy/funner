///////////////////////////////////////////////////////////////////////////////////////////////////
///Узел
///////////////////////////////////////////////////////////////////////////////////////////////////
class Node: protected SceneObject, public xtl::reference_counter, public xtl::trackable
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Node  (scene_graph::Node&, SceneManager&, interchange::NodeType node_type = interchange::NodeType_Node);
    ~Node ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Идентификатор узла / тип узла
///////////////////////////////////////////////////////////////////////////////////////////////////
    object_id_t           Id   () const;
    interchange::NodeType Type () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Исходный узел
///////////////////////////////////////////////////////////////////////////////////////////////////
    scene_graph::Node& SourceNode ();

  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Реализация синхронизации
///////////////////////////////////////////////////////////////////////////////////////////////////
    void UpdateCore (client::Context&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Имя объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* NameCore ();

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

typedef xtl::intrusive_ptr<Node> NodePtr;
