///////////////////////////////////////////////////////////////////////////////////////////////////
///Область вывода
///////////////////////////////////////////////////////////////////////////////////////////////////
class RenderableView: public xtl::reference_counter
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    RenderableView  (const ConnectionPtr& connection, scene_graph::Viewport& viewport, object_id_t render_target_id);
    ~RenderableView ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Идентификатор
///////////////////////////////////////////////////////////////////////////////////////////////////
    object_id_t Id ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Область вывода
///////////////////////////////////////////////////////////////////////////////////////////////////
    const scene_graph::Viewport& Viewport ();   

///////////////////////////////////////////////////////////////////////////////////////////////////
///Синхронизация с сервером
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Synchronize ();

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

typedef xtl::intrusive_ptr<RenderableView> RenderableViewPtr;
