#ifndef RENDER_LOW_LEVEL_HELPERS_PROGRAM_PARAMETERS_LAYOUT_HEADER
#define RENDER_LOW_LEVEL_HELPERS_PROGRAM_PARAMETERS_LAYOUT_HEADER

#include <stl/auto_ptr.h>

#include <render/low_level/state.h>

#include <render/low_level/helpers/object.h>

namespace render
{

namespace low_level
{

namespace helpers
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание расположения параметров в группе (группировка произодится по индексам константных буферов)
///////////////////////////////////////////////////////////////////////////////////////////////////
struct ProgramParameterGroup
{
  size_t                  slot;       //индекс константного буфера
  size_t                  count;      //количество параметров в группе
  const ProgramParameter* parameters; //указатель на начало области с параметрами группы
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание расположения параметров программы шейдинга
///////////////////////////////////////////////////////////////////////////////////////////////////
class ProgramParametersLayout: virtual public IProgramParametersLayout
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    ProgramParametersLayout  (const ProgramParametersLayoutDesc&);
    ~ProgramParametersLayout ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение параметров
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t                  GetParametersCount () const;
    const ProgramParameter* GetParameters      () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение групп
///////////////////////////////////////////////////////////////////////////////////////////////////    
    size_t                       GetGroupsCount () const;
    const ProgramParameterGroup* GetGroups      () const;
    const ProgramParameterGroup& GetGroup       (size_t index);

  private:  
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

}

}

}

#endif
