#ifndef RENDER_LOW_LEVEL_HELPERS_LOG_HEADER
#define RENDER_LOW_LEVEL_HELPERS_LOG_HEADER

namespace render
{

namespace low_level
{

namespace helpers
{

//implementation forward
class LogImpl;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Протокол
///////////////////////////////////////////////////////////////////////////////////////////////////
class Log
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы / деструктор / присваивание
///////////////////////////////////////////////////////////////////////////////////////////////////
    Log  ();
    Log  (const Log&);
    ~Log ();

    Log& operator = (const Log&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Печать сообщений
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Print   (const char* message) const;
    void Printf  (const char* message, ...) const;
    void VPrintf (const char* message, va_list list) const;

  private:
    LogImpl* impl;
};

}

}

}

#endif
