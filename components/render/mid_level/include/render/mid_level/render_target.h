#ifndef RENDER_MANAGER_RENDER_TARGET_HEADER
#define RENDER_MANAGER_RENDER_TARGET_HEADER

#include <cstddef>

namespace media
{

//forward declarations
class Image;

}

namespace render
{

namespace mid_level
{

//implementation forwards
class RenderTargetImpl;
class Wrappers;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Цель рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
class RenderTarget
{
  friend class Wrappers;
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    RenderTarget  (const RenderTarget&);
    ~RenderTarget ();
    
    RenderTarget& operator = (const RenderTarget&);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Размеры цели рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t Width  () const;
    size_t Height () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Захват изображения
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Capture (media::Image&) const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Swap (RenderTarget&);
    
  private:
    RenderTarget (RenderTargetImpl*);

  private:
    RenderTargetImpl* impl;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////
void swap (RenderTarget&, RenderTarget&);

}

}

#endif
