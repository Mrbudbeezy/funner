#ifndef RENDER_GL_DRIVER_LIBRARY_HEADER
#define RENDER_GL_DRIVER_LIBRARY_HEADER

namespace render
{

namespace low_level
{

namespace opengl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Флаги поиска точки входа
///////////////////////////////////////////////////////////////////////////////////////////////////
enum EntrySearch
{
  EntrySearch_Library = 1, //искать в библиотеке
  EntrySearch_Context = 2, //искать в контексте
  EntrySearch_NoThrow = 4, //без исключений, возвращать 0 в случае ошибки    
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Интерфейс запроса точек входа OpenGL
///////////////////////////////////////////////////////////////////////////////////////////////////
class ILibrary
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение адреса точки входа
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual const void* GetProcAddress (const char* name, size_t search_flags) = 0;

  protected:
    virtual ~ILibrary () {}
};

}

}

}

#endif

