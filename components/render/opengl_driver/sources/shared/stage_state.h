#ifndef RENDER_GL_DRIVER_STAGE_STATE_HEADER
#define RENDER_GL_DRIVER_STAGE_STATE_HEADER

#include <render/low_level/state_block.h>

namespace render
{

namespace low_level
{

namespace opengl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Интерфейс состояния уровня устройства отрисовки
///////////////////////////////////////////////////////////////////////////////////////////////////
class IStageState
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~IStageState () {}

///////////////////////////////////////////////////////////////////////////////////////////////////
///Захват / восстановление состояния
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void Capture (const StateBlockMask&) = 0;
    virtual void Apply   (const StateBlockMask&) = 0;
};

}

}

}

#endif
