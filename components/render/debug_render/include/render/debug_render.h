#ifndef RENDER_DEBUG_RENDER_HEADER
#define RENDER_DEBUG_RENDER_HEADER

#include <math/vector.h>

namespace render
{

namespace debug
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Визуализируемая точка
///////////////////////////////////////////////////////////////////////////////////////////////////
struct RenderablePoint
{
  math::vec3f position;
  math::vec4f color;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Интерфейс для рендеринга вспомогательной геометрии
///////////////////////////////////////////////////////////////////////////////////////////////////
class IPrimitiveRender
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Рисование примитивов
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void DrawLine     (const RenderablePoint& from, const RenderablePoint& to) = 0;
    virtual void DrawTriangle (const RenderablePoint& points [3]) = 0;
    virtual void DrawText     (const char* text, const math::vec3f& position, const math::vec3f& color) = 0;

  protected:
    virtual ~IPrimitiveRender () {}
};

}

}

#endif
