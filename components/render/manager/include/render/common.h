#ifndef RENDER_MANAGER_COMMON_HEADER
#define RENDER_MANAGER_COMMON_HEADER

namespace render
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Формат пикселей
///////////////////////////////////////////////////////////////////////////////////////////////////
enum PixelFormat
{
  PixelFormat_RGB8,
  PixelFormat_RGBA8,
  PixelFormat_L8,
  PixelFormat_A8,
  PixelFormat_LA8,
  PixelFormat_DXT1,
  PixelFormat_DXT3,
  PixelFormat_DXT5,
  PixelFormat_RGB_PVRTC2,
  PixelFormat_RGB_PVRTC4,
  PixelFormat_RGBA_PVRTC2,
  PixelFormat_RGBA_PVRTC4,

  PixelFormat_Num
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Утилиты
///////////////////////////////////////////////////////////////////////////////////////////////////
const char* get_name (PixelFormat); //получение имени формата

///////////////////////////////////////////////////////////////////////////////////////////////////
///Прямоугольная область
///////////////////////////////////////////////////////////////////////////////////////////////////
struct Rect
{
  int    x;      //абсцисса левого верхнего угла области
  int    y;      //ордината левого верхнего угла области
  size_t width;  //ширина области
  size_t height; //высота области
  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы
///////////////////////////////////////////////////////////////////////////////////////////////////
  Rect ();
  Rect (int x, int y, size_t width, size_t height);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Сравнение
///////////////////////////////////////////////////////////////////////////////////////////////////
  bool operator == (const Rect&) const;
  bool operator != (const Rect&) const;
    
};

}

#endif
