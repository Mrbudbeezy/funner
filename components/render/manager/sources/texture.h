///////////////////////////////////////////////////////////////////////////////////////////////////
///Текстура
///////////////////////////////////////////////////////////////////////////////////////////////////
class TextureImpl: public Object
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор / присваивание
///////////////////////////////////////////////////////////////////////////////////////////////////
    TextureImpl  (const DeviceManagerPtr& manager,
                  TextureDimension        dimension,
                  size_t                  width,
                  size_t                  height,
                  size_t                  depth,
                  PixelFormat             format,
                  bool                    generate_mipmaps,
                  const char*             name = "");
    TextureImpl  (const DeviceManagerPtr&       manager,
                  const low_level::TextureDesc& desc,
                  const char*                   name = "");                  
    TextureImpl  (const DeviceManagerPtr&       manager,
                  TextureDimension              dimension,
                  const media::CompressedImage& image,
                  const char*                   name = "");
    ~TextureImpl ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Имя текстуры
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* Name    ();
    void        SetName (const char* id);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Низкоуровневый объект текстуры
///////////////////////////////////////////////////////////////////////////////////////////////////
    LowLevelTexturePtr DeviceTexture ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Размерность
///////////////////////////////////////////////////////////////////////////////////////////////////
    TextureDimension Dimension ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Формат и размеры
///////////////////////////////////////////////////////////////////////////////////////////////////
    PixelFormat Format ();
    size_t      Width  ();
    size_t      Height ();
    size_t      Depth  ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение цели рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
    RenderTargetPtr RenderTarget (size_t layer, size_t mip_level);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обновление образа
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Update (const media::Image&);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Захват образа
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Capture (size_t layer, size_t mip_level, media::Image& image);
    void Capture (size_t mip_level, media::Image& image);
    
  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
