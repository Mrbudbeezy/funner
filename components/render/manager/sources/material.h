///////////////////////////////////////////////////////////////////////////////////////////////////
///Материал
///////////////////////////////////////////////////////////////////////////////////////////////////
class MaterialImpl: public Object, public CacheSource
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    MaterialImpl  (const DeviceManagerPtr&, const TextureManagerPtr&, const ShadingManagerPtr&);
    ~MaterialImpl ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Идентификатор материала
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* Id    ();
    void        SetId (const char* id);    
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Блок состояний материала
///////////////////////////////////////////////////////////////////////////////////////////////////
    LowLevelStateBlockPtr StateBlock ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение текстуры
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t                   TexturesCount ();
    TexturePtr               Texture       (size_t index); //может вернуть 0 в случае динамической текстуры
    LowLevelTexturePtr       DeviceTexture (size_t index); //может вернуть 0 в случае динамической текстуры
    const char*              TextureName   (size_t index);
    LowLevelSamplerStatePtr  Sampler       (size_t index);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Есть ли в материале динамические текстуры
///////////////////////////////////////////////////////////////////////////////////////////////////
    bool HasDynamicTextures ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обновление материала
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Update (const media::rfx::Material&);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
