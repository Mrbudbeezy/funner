///////////////////////////////////////////////////////////////////////////////////////////////////
///Цель рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
class RenderTargetImpl: public Object
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    RenderTargetImpl  (const DeviceManagerPtr& device_manager, low_level::ITexture* texture, size_t layer = 0, size_t mip_level = 0);
    ~RenderTargetImpl ();    

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение отображения (в случае отсутствия - исключение)
///////////////////////////////////////////////////////////////////////////////////////////////////
    low_level::IView& View ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Размеры цели рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t Width  ();
    size_t Height ();
    void   Resize (size_t width, size_t height);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Смещение области вывода от начала координат цели рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
    void                SetViewportOffset (const math::vec2ui& offset);
    const math::vec2ui& ViewportOffset    ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Обновление текстуры
///////////////////////////////////////////////////////////////////////////////////////////////////
    void SetTarget (low_level::ITexture* texture, size_t layer = 0, size_t mip_level = 0);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Захват изображения
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Capture (media::Image&);
    
  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
