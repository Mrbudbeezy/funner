///////////////////////////////////////////////////////////////////////////////////////////////////
///Динамический примитив
///////////////////////////////////////////////////////////////////////////////////////////////////
class DynamicPrimitive: public CacheSource, public xtl::trackable
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~DynamicPrimitive () {}

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обновление
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void UpdateOnPrerender (EntityImpl& entity) = 0;
    virtual void UpdateOnRender    (EntityImpl& entity, FrameImpl& frame) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Группа примитивов рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual manager::RendererPrimitiveGroup& RendererPrimitiveGroup () = 0;

//TODO: добавить ссылки на обновленный кадр и объект
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Хранилище динамических примитивов
///////////////////////////////////////////////////////////////////////////////////////////////////
class DynamicPrimitiveEntityStorage: public CacheSource
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    DynamicPrimitiveEntityStorage  (EntityImpl& entity);
    ~DynamicPrimitiveEntityStorage ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обновление 
//TODO: убрать!!!!
///////////////////////////////////////////////////////////////////////////////////////////////////
    void UpdateOnPrerender ();
    void UpdateOnRender    (FrameImpl& frame);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление динамических примитивов
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AddPrimitive        (DynamicPrimitive*);
    void RemovePrimitive     (DynamicPrimitive*);
    void RemoveAllPrimitives ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Группы примитивов рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
//TODO: заменить на формирование списка групп с указателями на DynamicPrimitive
    size_t                  RendererPrimitiveGroupsCount ();
    RendererPrimitiveGroup* RendererPrimitiveGroups      ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Управление кэшированием
///////////////////////////////////////////////////////////////////////////////////////////////////
    using CacheSource::UpdateCache;
    using CacheSource::ResetCache;
      
  private:
    void UpdateCacheCore ();
    void ResetCacheCore ();

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
