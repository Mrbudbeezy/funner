///////////////////////////////////////////////////////////////////////////////////////////////////
///Менеджер лэйаутов геометрии
///////////////////////////////////////////////////////////////////////////////////////////////////
class InputLayoutManager: public xtl::noncopyable
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы / деструктор / присваивание
///////////////////////////////////////////////////////////////////////////////////////////////////
    InputLayoutManager  (const LowLevelDevicePtr&, const SettingsPtr&);
    ~InputLayoutManager ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание лэйаута
///////////////////////////////////////////////////////////////////////////////////////////////////
    LowLevelInputLayoutPtr CreateInputLayout (size_t hash, const render::low_level::InputLayoutDesc&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение константной копии
///////////////////////////////////////////////////////////////////////////////////////////////////
    media::geometry::VertexFormat Clone (const media::geometry::VertexFormat& format) const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Лэйауты для спрайтов и линий
///////////////////////////////////////////////////////////////////////////////////////////////////
    const LowLevelInputLayoutPtr& DynamicPrimitivesInputLayout () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение хэша атрибутов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static size_t GetVertexAttributesHash (size_t count, const low_level::VertexAttribute* attributes);

  private:
    void InitDynamicPrimitivesLayout ();

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
