///////////////////////////////////////////////////////////////////////////////////////////////////
///Менеджер шэйдинга
///////////////////////////////////////////////////////////////////////////////////////////////////
class EffectManager: public Object
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    EffectManager  (const DeviceManagerPtr&, const TextureManagerPtr&, const ProgramManagerPtr&);
    ~EffectManager ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Проверка: является ли ресурс библиотекой эффектов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static bool IsEffectLibraryResource (const char* name);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Загрузка / выгрузка эффектов
///////////////////////////////////////////////////////////////////////////////////////////////////
    void LoadEffectLibrary   (const char* name);
    void UnloadEffectLibrary (const char* name);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение прокси
///////////////////////////////////////////////////////////////////////////////////////////////////
    EffectProxy GetEffectProxy (const char* name); //создание прокси в случае отсутствия
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Поиск загруженного эффекта
///////////////////////////////////////////////////////////////////////////////////////////////////
    EffectPtr FindEffect (const char* name);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка эффекта по умолчанию
///////////////////////////////////////////////////////////////////////////////////////////////////
    void      SetDefaultEffect (const EffectPtr& effect);
    EffectPtr DefaultEffect    ();
  
  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
