///////////////////////////////////////////////////////////////////////////////////////////////////
///Менеджер текстур
///////////////////////////////////////////////////////////////////////////////////////////////////
class TextureManager: public xtl::noncopyable
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    TextureManager  (RenderManagerImpl& owner);
    ~TextureManager ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Проверка: является ли ресурс текстурой
///////////////////////////////////////////////////////////////////////////////////////////////////
    static bool IsTextureResource (const char* name);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Загрузка / выгрузка текстур
///////////////////////////////////////////////////////////////////////////////////////////////////
    void LoadTexture   (const char* name);
    void UnloadTexture (const char* name);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение прокси
///////////////////////////////////////////////////////////////////////////////////////////////////
    TextureProxy GetTextureProxy (const char* name); //создание прокси в случае отсутствия
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Поиск загруженной текстуры
///////////////////////////////////////////////////////////////////////////////////////////////////
    TexturePtr FindTexture (const char* name);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка текстуры по умолчанию
///////////////////////////////////////////////////////////////////////////////////////////////////
    void       SetDefaultTexture (const TexturePtr& texture);
    TexturePtr DefaultTexture    ();
  
  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};
