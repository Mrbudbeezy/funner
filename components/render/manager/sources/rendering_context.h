///////////////////////////////////////////////////////////////////////////////////////////////////
///Контекст рендеринга
///////////////////////////////////////////////////////////////////////////////////////////////////
class RenderingContext: public xtl::noncopyable
{
  public: 
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    RenderingContext (FrameImpl& frame, const math::mat4f& vp_tm, RenderingContext* previous = 0);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Поиск локальных объектов
///////////////////////////////////////////////////////////////////////////////////////////////////
    TexturePtr          FindLocalTexture (const char* name);
    RenderTargetDescPtr FindRenderTarget (const char* name);
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Фрейм
///////////////////////////////////////////////////////////////////////////////////////////////////
    FrameImpl& Frame () { return frame; }

///////////////////////////////////////////////////////////////////////////////////////////////////
///Матрицы преобразований
///////////////////////////////////////////////////////////////////////////////////////////////////
    const math::mat4f& ViewProjectionMatrix        () { return vp_tm; }
    const math::mat4f& InverseViewProjectionMatrix () { return inv_vp_tm; }

  private:
    FrameImpl&         frame;     //кадр
    RenderingContext*  previous;  //предыдущий контекст
    const math::mat4f& vp_tm;     //матрица view-projection
    math::mat4f        inv_vp_tm; //обратная матрица view-projection
};
