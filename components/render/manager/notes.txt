1. TODO

1.1. Тестирование
  1.3. Комплексные тесты использования компонента
    1.3.3. Визуализация спрайтов (+scissor)
  1.4. Тестирование сброса кэшей

1.2. Настройка производительности
  1.2.1. Проверить корректность работы кэшей: кэши не  должны  сбрасываться  на
  каждом кадре. Проверить корректность зависимостей  кэшей  -  обновление  кэша
  должно осуществляться только при изменении значимых зависимых параметров
  1.2.2.  Оптимизировать  кэширование  переключения  состояний  при   рисовании
  в EffectRenderer. Использовать для кэширования  RedningContext  (общую  часть
  для всей цепочки отрисовок)

1.3. Функциональность
  1.3.1. Sprites/Lines batch rendering
    - группировать спрайты и линии в буферы для отрисовки
    - в случае малого числа спрайтов  в  примитиве  группировать  примитивы  (как
      это сочетается с отсутствием трансформаций в Entity?)
  1.3.2. Entity skinning
    - добавить  возможность  software/hardware  skinning  по  параметру skinning  в  блоке
    program {} (rfx)  
  1.3.3. Instancing
    - добавить возможность группировки примитивов по параметру instancing в блоке
    program {}


!!! 1.4. Sprites:
  - добавить указание точки расчета eye-distance в каждый меш
  - добавить общие вершинный и индексный буферы для построение спрайтов
  - ввести SpriteImpl, ссылающийся на RendererPrimitive 
  - ввести матрицу объекта и матрицу вида
  - рассчитывать MV без участия пользовательского кода
  - перед отрисовкой кадра строить вершинный буфер спрайтов (получать списки спрайтов у каждого Entity), обновлять индексы в SpriteImpl, 
    обновлять RendererPrimitive, на который ссылается SpriteImpl
  - перед отрисовкой прохода построить индексный буфер пакетных примитивов (буфер может быть переполнен, предусмотреть частичное заполнение)
  - в процессе отрисовки определять группы примитивов с общим хэшем пакета и отрисовывать их пакетом