Results of mathlib1_test:
Test vec3f library:
Input:     1 2 3
Get v.x:   1
Get v.y:   2
Get v.z:   3
Get v.xzy: 1 3 2
tmp = v.xyz + v.yzx: 3 5 4
tmp = tmp - v * v.zxy: 0 3 -2
v * 2: 2 4 6
3 * v: 3 6 9
4 * v / 2: 2 4 6
vec3(4,5,6): 4 5 6
v1 = vec3(7): 7 7 7
v1:normalize(): 0.57735 0.57735 0.57735
v1 = vec3 (-1, 2, -3):abs (): 1 2 3
v2 = v1:min (tmp): 0 2 -2
v2 = v1:max (tmp): 1 3 3
v3 = v1:cross (v2): -3 0 1
v3.qlength: 10
After set values: 4 5 6
Test mat4f library:
Input:   
1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1
After m[0].zxy=vec3(1,2,3): 2 3 1 0
Result of matrix multiplies: 6 0 0 0 0 6 0 0 0 0 6 0 0 0 0 6
After m3:set(1,1,123): 6 0 0 0 0 123 0 0 0 0 6 0 0 0 0 6
After m3 [2][2]=456: 6 0 0 0 0 123 0 0 0 0 456 0 0 0 0 6
mat4(2):det (): 16
m5 * m5: 4 0 0 0 0 4 0 0 0 0 4 0 0 0 0 4
m5 * 2: 4 0 0 0 0 4 0 0 0 0 4 0 0 0 0 4
3 * m5: 6 0 0 0 0 6 0 0 0 0 6 0 0 0 0 6
4 * m5 / 2: 4 0 0 0 0 4 0 0 0 0 4 0 0 0 0 4
m5 * vec3 (1, 2, 3): 2 4 6
m5 * vec4 (1, 2, 3, 4): 2 4 6 8
vec3 (1, 2, 3) * m5: 2 4 6
vec4 (1, 2, 3, 4) * m5: 2 4 6 8
Test quatf library:
Input: 1 1 1 1
After q1:set(1,2): 1 2 1 1
      q:get(0): 1
      q:get(1): 2
      q:get(2): 1
      q:get(3): 1
      q [0]: 1
      q [1]: 2
      q [2]: 1
      q [3]: 1
      q.x:1
      q.y:2
      q.z:1
      q.w:1
Test q.{x,y,z,w}={5,6,7,8}:
 q[0]:5
 q[1]:6
 q[2]:7
 q[3]:8
Test q2=quat(8,9,10,11): 8 9 10 11
Test quat(1): 1 1 1 1
Test -q2: -8 -9 -10 -11
Test q+q2:13 15 17 19
Test q-q2:-3 -3 -3 -3
Test q2*q2:176 198 220 -124
Test q2:normalize(): 0.418167 0.470438 0.522708 0.574979
Test q2:inner(q): 252
