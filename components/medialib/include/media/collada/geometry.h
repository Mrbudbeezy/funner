#ifndef MEDIALIB_COLLADA_GEOMETRY_HEADER
#define MEDIALIB_COLLADA_GEOMETRY_HEADER

#include "material.h"
#include <math/mathlib.h>

namespace medialib
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовые атрибуты вершины
///////////////////////////////////////////////////////////////////////////////////////////////////
struct ColladaVertex
{
  math::vec3f coord;    //координаты вершины
  math::vec3f normal;   //нормаль в вершине
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Атрибуты текстурирования вершины
///////////////////////////////////////////////////////////////////////////////////////////////////
struct ColladaTexVertex
{
  math::vec3f coord;    //текстурные координаты вершины
  math::vec3f tangent;  //касательная в texture space
  math::vec3f binormal; //бинормаль в texture space
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Атрибуты текстурирования вершины
///////////////////////////////////////////////////////////////////////////////////////////////////
enum ColladaPrimitiveType
{
  COLLADA_PRIMITIVE_LINE_LIST,      //список отрезков
  COLLADA_PRIMITIVE_LINE_STRIP,     //цепочка отрезков
  COLLADA_PRIMITIVE_TRIANGLE_LIST,  //список треугольников
  COLLADA_PRIMITIVE_TRIANGLE_STRIP, //цепочка треугольников
  COLLADA_PRIMITIVE_TRIANGLE_FAN    //веер треугольников
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Поверхность
///////////////////////////////////////////////////////////////////////////////////////////////////
class ColladaSurface: public ColladaEntity
{
  friend class ColladaWrappers;
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Материал поверхности
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* Material () const;
  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Тип примитивов
///////////////////////////////////////////////////////////////////////////////////////////////////
    ColladaPrimitiveType PrimitiveType () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Работа с вершинами
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t                  VerticesCount      () const;
    const ColladaVertex*    Vertices           () const;    
    size_t                  TextureChannels    () const;
    const char*             TextureChannelName (size_t channel) const; 
    const ColladaTexVertex* TextureVertices    (size_t channel) const;
    bool                    HasVertexColors    () const;
    const math::vec4f*            VertexColors       () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Индексы примитивов
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t        IndicesCount () const;
    const size_t* Indices      () const;
    
  private:
    ColladaSurface (const ColladaSurfaceImpl*);

  private:
    const ColladaSurfaceImpl* impl;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Меш
///////////////////////////////////////////////////////////////////////////////////////////////////
class ColladaMesh: public ColladaEntity
{
  friend class ColladaWrappers;
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Работа с поверхностями
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t          SurfacesCount () const;
    ColladaSurface  Surface       (size_t index) const;

  private:
    ColladaMesh (const ColladaMeshImpl*);

  private:
    const ColladaMeshImpl* impl;
};

}

#endif
