#ifndef MEDIALIB_COLLADA_GEOMETRY_HEADER
#define MEDIALIB_COLLADA_GEOMETRY_HEADER

//#include "material.h"
#include <math/mathlib.h>

namespace medialib
{

namespace collada
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовые атрибуты вершины
///////////////////////////////////////////////////////////////////////////////////////////////////
struct Vertex
{
  math::vec3f coord;    //координаты вершины
  math::vec3f normal;   //нормаль в вершине
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Атрибуты текстурирования вершины
///////////////////////////////////////////////////////////////////////////////////////////////////
struct TexVertex
{
  math::vec3f coord;    //текстурные координаты вершины
  math::vec3f tangent;  //касательная в texture space
  math::vec3f binormal; //бинормаль в texture space
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Тип примитивов
///////////////////////////////////////////////////////////////////////////////////////////////////
enum PrimitiveType
{
  PrimitiveType_LineList,      //список отрезков
  PrimitiveType_LineStrip,     //цепочка отрезков
  PrimitiveType_TriangleList,  //список треугольников
  PrimitiveType_TriangleStrip, //цепочка треугольников
  PrimitiveType_TriangleFan    //вейер треугольников
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Поверхность
///////////////////////////////////////////////////////////////////////////////////////////////////
class Surface: public Entity
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Материал поверхности
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* Material () const;
  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Тип примитивов
///////////////////////////////////////////////////////////////////////////////////////////////////
    collada::PrimitiveType PrimitiveType () const;
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Работа с вершинами
///////////////////////////////////////////////////////////////////////////////////////////////////
    typedef Array<Vertex>      VertexArray;
    typedef Array<TexVertex>   TexVertexArray;
    typedef Array<math::vec4f> VertexColorArray;
    
          VertexArray&      Vertices        ();
    const VertexArray&      Vertices        () const;
          TexVertexArray&   TextureVertices (size_t channel);
    const TexVertexArray&   TextureVertices (size_t channel) const;
          VertexColorArray& VertexColors    ();
    const VertexColorArray& VertexColors    () const;
          bool              HasVertexColors () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Индексы примитивов
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t        IndicesCount () const;
    const size_t* Indices      () const;
    
  private:
    ColladaSurface (const ColladaSurfaceImpl*);

  private:
    const ColladaSurfaceImpl* impl;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Меш
///////////////////////////////////////////////////////////////////////////////////////////////////
class ColladaMesh: public ColladaEntity
{
  friend class ColladaWrappers;
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Работа с поверхностями
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t          SurfacesCount () const;
    ColladaSurface  Surface       (size_t index) const;

  private:
    ColladaMesh (const ColladaMeshImpl*);

  private:
    const ColladaMeshImpl* impl;
};

}

}

#endif
