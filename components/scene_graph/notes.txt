1. —писок контроллеров, линкуемый в сцену
2. —ериализатор
  - обобщение по имени типа узла

Node не зависит от SceneManager
ƒобавить Entity::IsVisible/SetVisible

“аймеры:
  - таймеры хран€тс€ в сцене, есть доступ по имени
  - дл€ узла по умолчанию проассоциирован таймер "default" (ищетс€ в сцене)
  - можно установить кастомный таймер

”брать Node::Update, добавить Scene::Update (без времени)

¬озможно сделать один таймер на сцену и Scene::Update (t, dt)

SceneManager::PlayAnimation (const char* name, Node& root_node)

Trigger
InputTrigger
  - eventType -> action
  - geometry
  
Ётапы:
1. —делать контроллер, аналог main.lua EvalSpriteState
2. —делать загрузку данных дл€ контроллера из XML
  
------------------------------------------------------------------

1. ResourceList, хранимый в Node. ѕостроение полного списка по дочерним узлам
2. Node не зависит от SceneManager
3. ParticleSystem при создании принимает ParticleManager
4. AnimationController при создании принимает AnimationManager
5. ?—оздание  узлов  при  помощи  SceneManager,  которые  требуют  передачи  в
конструктор  кастомного  менеджера   ->   регистраци€   кастомных   загрузчиков
непосредственно в SceneManager (возможность использовани€ bind+function)
6. ?«агрузка ресурсов в AnimationManager и ParticleManager


------------------------------------------------

1. ѕеребор узлов:
  - в начале перебора дочерних узлов в данном узле запоминаетс€ указатель на итератор
  - итератор увеличивает счЄтчик ссылок узла, захватыва€ его на врем€ итерации
  -  при  удалении  любого  дочернего  узла  из  списка  узлов   данного   узла
  провер€етс€: указывает ли какой-либо итератор на удал€емый узел
  - если итератор указывает, то происходит перемещение итератора  на  следующий
  по пор€дку узел
  - при добавлении любого дочернего узла провер€етс€: указывает  ли  какой-либо
  итератор на конец списка
  - если итератор указывает на конец списка,  то  его  значение  измен€етс€  на
  новый добавл€емый узел
