#ifndef SCENE_GRAPH_SCISSOR_HEADER
#define SCENE_GRAPH_SCISSOR_HEADER

#include <stl/auto_ptr.h>
#include <sg/entity.h>

namespace scene_graph
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Область отсечения
///////////////////////////////////////////////////////////////////////////////////////////////////
class Scissor: public Entity
{
  public:
    typedef xtl::com_ptr<Scissor>       Pointer;
    typedef xtl::com_ptr<const Scissor> ConstPointer;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание
///////////////////////////////////////////////////////////////////////////////////////////////////
    static Pointer Create ();

  protected:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Scissor  ();
    ~Scissor ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Динамическая диспетчеризация
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AcceptCore (Visitor&);
};

}

#endif
