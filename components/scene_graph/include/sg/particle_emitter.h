#ifndef SCENE_GRAPH_PARTICLE_EMITTER_HEADER
#define SCENE_GRAPH_PARTICLE_EMITTER_HEADER

#include <sg/visual_model.h>

namespace scene_graph
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Эмиттер частиц
///////////////////////////////////////////////////////////////////////////////////////////////////
class ParticleEmitter: public VisualModel
{
  public:  
    typedef xtl::com_ptr<ParticleEmitter>       Pointer;
    typedef xtl::com_ptr<const ParticleEmitter> ConstPointer;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание эмиттера частиц
///////////////////////////////////////////////////////////////////////////////////////////////////
    static Pointer Create (const char* declaration_name, Node::Pointer particles_parent);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Имя системы частиц
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* DeclarationName () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Узел, в системе координат которого генерируются частицы
///////////////////////////////////////////////////////////////////////////////////////////////////
    Node::Pointer ParticlesParent () const;

  protected:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    ParticleEmitter  (const char* declaration_name, Node::Pointer particles_parent);
    ~ParticleEmitter ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Метод, вызываемый при посещении данного объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AcceptCore (Visitor&);

  private:
    struct Impl;
    Impl* impl;
};

}

#endif
