#ifndef SCENE_GRAPH_SPRITE_HEADER
#define SCENE_GRAPH_SPRITE_HEADER

#include <stl/auto_ptr.h>
#include <sg/entity.h>

namespace scene_graph
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Спрайт
///////////////////////////////////////////////////////////////////////////////////////////////////
class Sprite: public Entity
{
  public:
    typedef xtl::com_ptr<Sprite>       Pointer;
    typedef xtl::com_ptr<const Sprite> ConstPointer;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание спрайта
///////////////////////////////////////////////////////////////////////////////////////////////////
    static Pointer Create ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Материал
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetMaterial (const char* material);
    const char* Material    () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка номера кадра
///////////////////////////////////////////////////////////////////////////////////////////////////
    void   SetFrame (size_t frame);
    size_t Frame    () const;
    
  private:
    Sprite  ();
    ~Sprite ();

    void AcceptCore (Visitor&);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

}

#endif
