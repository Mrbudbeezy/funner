#ifndef SCENE_GRAPH_PHYSICS_HEADER
#define SCENE_GRAPH_PHYSICS_HEADER

#include <sg/entity.h>
#include <stl/auto_ptr.h>

namespace scene_graph
{

namespace physics
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовый класс физического тела
///////////////////////////////////////////////////////////////////////////////////////////////////
class Body: public Entity
{
  public:
    typedef xtl::com_ptr<Body>       Pointer;
    typedef xtl::com_ptr<const Body> ConstPointer;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание тела
///////////////////////////////////////////////////////////////////////////////////////////////////
    static Pointer Create ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка физической модели
///////////////////////////////////////////////////////////////////////////////////////////////////
    void        SetModelName (const char* name);
    const char* ModelName    () const;
    
  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Body  ();
    ~Body ();    

///////////////////////////////////////////////////////////////////////////////////////////////////
///Метод, вызываемый при посещении данного объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AcceptCore (Visitor&);

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

}

}

#endif
