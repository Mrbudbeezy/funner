/*
   Class: Scene.NodeArray
 
   Массив узлов сцены.
 */


/*
   Group: Функции
 
 */

/*
   Function: Create
 
   Создание массива узлов.

   Возвращает:
     <Scene.NodeArray>
 */
Create ()

/*
   Function: Create
 
   Создание массива узлов с указанным режимом связывания массива и элементов.

   Параметры:
     link_mode - режим связывания

   Возвращает:
     <Scene.NodeArray>
 */
Create (Scene.NodeArrayLinkMode link_mode)

/*
   Function: Item
 
   Получение узла по индексу.

   Параметры:
     index - индекс в массиве

   Возвращает:
     <Scene.Node>
 */
Item (number index)

/*
   Function: Add
 
   Добавление узла node в массив. Функция возвращает индекс элемента после добавления.

   Параметры:
     node - узел

   Возвращает:
     number
 */
Add (Scene.Node node)

/*
   Function: Remove
 
   Удаление узла из массива по значению.

   Параметры:
     node - узел
 */
Remove (Scene.Node node)

/*
   Function: Remove
 
   Удаление узла из массива по индексу.

   Параметры:
     index - индекс в массиве
 */
Remove (number index)

/*
   Function: Clear
 
   Очистка массива.
 */
Clear ()

/*
   Function: Reserve
 
   Резервирование count элементов в массиве для последующего добавления.

   Параметры:
     count - количество элементов
 */
Reserve (number count)

/*
   Group: Поля
 
 */

/*
   Property: Size
 
   Количество элементов в массиве.

   Тип:
     number
 
   Доступ:
     Получение.
 */
Size

/*
   Property: Empty
 
   Пуст ли массив.

   Тип:
     bool
 
   Доступ:
     Получение.
 */
Empty

/*
   Property: Capacity
 
   Количество элементов, зарезервированных в массиве.

   Тип:
     number
 
   Доступ:
     Получение.
 */
Capacity

/*
   Property: LinkMode
 
   Режим связывания элементов с массивом.

   Тип:
     <Scene.NodeArrayLinkMode>
 
   Доступ:
     Получение.
 */
LinkMode

/*
   Group: Примеры
 
 */
/*
  Topic: Пример кода
 
  (start code) 
  function print_node_array (title, array)
    print (title .. " (array has " .. tostring (array.Size) .. " items):")

    for i=0,array.Size-1,1 do
      print ("  " .. array:Item (i).Name)
    end
  end

  function test_node_array (link_mode)
    if link_mode == Scene.NodeArrayLinkMode.AddRef  then print ("NodeArray addref test") end
    if link_mode == Scene.NodeArrayLinkMode.WeakRef then print ("NodeArray weak-ref test") end

    local node1 = Scene.Node.Create ()
    local node2 = Scene.Node.Create ()
    local node3 = Scene.Node.Create ()
    
    node1.Name = "node1"
    node2.Name = "node2"
    node3.Name = "node3"
    
    local array = Scene.NodeArray.Create (link_mode)
    local index = array:Add (node1)

    array:Add (node2)
    array:Add (node3)
    
    print_node_array ("after insert", array)
    
    node2 = nil
    
    collectgarbage ("collect")
    
    print_node_array ("after node2 destroy", array)
     
    array:Remove (index)
    
    print_node_array ("after remove node by index", array)

    array:Remove (node3)

    print_node_array ("after remove by value", array)
  end

  test_node_array (Scene.NodeArrayLinkMode.AddRef)
  test_node_array (Scene.NodeArrayLinkMode.WeakRef)
  (end code)
*/

/*
  Topic: Результат
 
  (start code) 
  NodeArray addref test
  after insert (array has 3 items):
    node1
    node2
    node3
  after node2 destroy (array has 3 items):
    node1
    node2
    node3
  after remove node by index (array has 2 items):
    node2
    node3
  after remove by value (array has 1 items):
    node2
  NodeArray weak-ref test
  after insert (array has 3 items):
    node1
    node2
    node3
  after node2 destroy (array has 2 items):
    node1
    node3
  after remove node by index (array has 1 items):
    node3
  after remove by value (array has 0 items):
  (end code)
*/
