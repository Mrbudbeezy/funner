#ifndef PHYSICS_LOW_LEVEL_SCENE_HEADER
#define PHYSICS_LOW_LEVEL_SCENE_HEADER

namespace physics
{

namespace low_level
{

//forward declarations
class IRigidBody;
class IShape;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Физическая сцена
///////////////////////////////////////////////////////////////////////////////////////////////////
class IScene : virtual public IObject
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Управление гравитацией
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual const math::vec3f& Gravity    () = 0;
    virtual void               SetGravity (const math::vec3f&) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Симуляция
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual float SimulationStep    () = 0;
    virtual void  SetSimulationStep (float) = 0;

    virtual void  PreformSimulation (float dt) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление/удаление тел в сцену
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void AddRigidBody (IRigidBody*) = 0;
    virtual void RemoveRigidBody (IRigidBody*) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание тел
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IRigidBody* CreateRigidBody (IShape* shape, float mass, const math::mat4f& world_position) = 0;

};

}

}

#endif
