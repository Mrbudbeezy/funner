#ifndef __COMMONLIB_PLATFORM__
#define __COMMONLIB_PLATFORM__

namespace common
{

//implementation forwards
class ICustomAllocator;
class ICustomFileSystem;

/*
    Платформо-зависимые интерфейсы
*/

///////////////////////////////////////////////////////////////////////////////////////////////////
///Платформа по умолчанию
///////////////////////////////////////////////////////////////////////////////////////////////////
class DefaultPlatform
{
  public:
    static ICustomAllocator*  GetSystemAllocator ();
    static ICustomFileSystem* GetFileSystem ();
    static ICustomFileSystem* GetIOSystem ();
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Win32
///////////////////////////////////////////////////////////////////////////////////////////////////
class Win32Platform
{
  public:
    static ICustomAllocator*  GetSystemAllocator ();
    static ICustomFileSystem* GetFileSystem ();
    static ICustomFileSystem* GetIOSystem ();
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Linux
///////////////////////////////////////////////////////////////////////////////////////////////////
class LinuxPlatform: public DefaultPlatform
{
  public:
    static ICustomFileSystem* GetFileSystem ();
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Указание текущей платформы
///////////////////////////////////////////////////////////////////////////////////////////////////
#ifdef COMMONLIB_PLATFORM
typedef COMMONLIB_PLATFORM Platform;
#else
typedef DefaultPlatform Platform;
#endif

}

#endif
