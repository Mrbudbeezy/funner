#ifndef COMMON_REFERENCE_COUNT_HEADER
#define COMMON_REFERENCE_COUNT_HEADER

#include <stl/stdexcept>

namespace common
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовый класс подсчёта ссылок на объект
///////////////////////////////////////////////////////////////////////////////////////////////////
class ReferenceCounter
{
  public:
             ReferenceCounter  ();
             ReferenceCounter  (const ReferenceCounter&); //ref_count = 1
    explicit ReferenceCounter  (size_t init_ref_count);
    virtual  ~ReferenceCounter () {}

///////////////////////////////////////////////////////////////////////////////////////////////////
///Присваивание
///////////////////////////////////////////////////////////////////////////////////////////////////
    ReferenceCounter& operator = (const ReferenceCounter&) { return *this; }

///////////////////////////////////////////////////////////////////////////////////////////////////
///Количество ссылок на объект
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t UseCount () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Увеличение числа ссылок на объект / освобождение объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AddRef  ();
    void Release ();
    
  private:
///////////////////////////////////////////////////////////////////////////////////////////////////
///События, генерируемые данным классом
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void OnLostReferences ();    //на данный объект больше никто не ссылается
    virtual void OnRestoreReferences (); //вызывается при переходе ref_count: 0-> 1, default: throw logic_error

  private:
    size_t ref_count;
};

#include <common/detail/refcount.inl>

}

#endif
