#ifndef SCENE_GRAPH_SOUND_EMITTER_HEADER
#define SCENE_GRAPH_SOUND_EMITTER_HEADER

#include <mathlib.h>
#include <sg/entity.h>

namespace scene_graph
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Источник звука
///////////////////////////////////////////////////////////////////////////////////////////////////
class SoundEmitter : public Entity
{
  public:  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание источника звука
///////////////////////////////////////////////////////////////////////////////////////////////////
    static SoundEmitter* Create (const char* sound_declaration_name);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Имя звука
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* SoundDeclarationName () const;

  protected:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    SoundEmitter  (const char* sound_declaration_name);
    ~SoundEmitter ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Метод, вызываемый при посещении данного объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AcceptCore (Visitor&);

  private:
    struct Impl;
    Impl* impl;
};

}

#endif
