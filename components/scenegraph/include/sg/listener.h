#ifndef SCENE_GRAPH_LISTENER_HEADER
#define SCENE_GRAPH_LISTENER_HEADER

#include <mathlib.h>
#include <sg/entity.h>

namespace scene_graph
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Слушатель  //!!!!!!!!!Добавить методы положения
///////////////////////////////////////////////////////////////////////////////////////////////////
class Listener : public Entity
{
  public:  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание слушателя
///////////////////////////////////////////////////////////////////////////////////////////////////
    static Listener* Create ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Усиление
///////////////////////////////////////////////////////////////////////////////////////////////////
    float Gain    () const;
    void  SetGain (float gain);

  protected:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Listener  ();
    ~Listener ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Метод, вызываемый при посещении данного объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AcceptCore (Visitor&);

  private:
    struct Impl;
    Impl* impl;
};

}

#endif
