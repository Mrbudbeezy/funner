Results of lexical_cast_test:
conversion to char:
expression ''A' == lexical_cast<char>('A')' is true
expression '' ' == lexical_cast<char>(' ')' is true
expression ''1' == lexical_cast<char>(1)' is true
expression ''0' == lexical_cast<char>(0)' is true
exception 'bad_lexical_cast' accepted
expression ''1' == lexical_cast<char>(1.0)' is true
expression ''1' == lexical_cast<char>(true)' is true
expression ''0' == lexical_cast<char>(false)' is true
expression ''A' == lexical_cast<char>("A")' is true
expression '' ' == lexical_cast<char>(" ")' is true
exception 'bad_lexical_cast' accepted
exception 'bad_lexical_cast' accepted
expression ''A' == lexical_cast<char>(stl::string("A"))' is true
expression '' ' == lexical_cast<char>(stl::string(" "))' is true
exception 'bad_lexical_cast' accepted
exception 'bad_lexical_cast' accepted
conversion to int:
expression '1 == lexical_cast<int>('1')' is true
expression '0 == lexical_cast<int>('0')' is true
exception 'bad_lexical_cast' accepted
expression '1 == lexical_cast<int>(1)' is true
expression '(stl::numeric_limits<int>::max)() == lexical_cast<int>((stl::numeric_limits<int>::max)())' is true
expression '1 == lexical_cast<int>(1.0)' is true
executed 'lexical_cast<int>(1.23)'
exception 'bad_lexical_cast' accepted
expression '1 == lexical_cast<int>(true)' is true
expression '0 == lexical_cast<int>(false)' is true
expression '123 == lexical_cast<int>("123")' is true
executed 'lexical_cast<int>(" 123")'
exception 'bad_lexical_cast' accepted
exception 'bad_lexical_cast' accepted
expression '123 == lexical_cast<int>("123")' is true
expression '123 == lexical_cast<int>(stl::string("123"))' is true
executed 'lexical_cast<int>(stl::string(" 123"))'
exception 'bad_lexical_cast' accepted
exception 'bad_lexical_cast' accepted
conversion to double:
expression '1.0==lexical_cast<double>('1')' is true
exception 'bad_lexical_cast' accepted
expression '1.0==lexical_cast<double>(1)' is true
expression '1.23==lexical_cast<double>(1.23)' is true
expression '1.0==lexical_cast<double>(true)' is true
expression '0.0==lexical_cast<double>(false)' is true
expression '1.23==lexical_cast<double>("1.23")' is true
exception 'bad_lexical_cast' accepted
exception 'bad_lexical_cast' accepted
expression '1.23==lexical_cast<double>(stl::string("1.23"))' is true
exception 'bad_lexical_cast' accepted
exception 'bad_lexical_cast' accepted
conversion to bool:
expression 'true == lexical_cast<bool>('1')' is true
expression 'false == lexical_cast<bool>('0')' is true
exception 'bad_lexical_cast' accepted
expression 'true == lexical_cast<bool>(1)' is true
expression 'false == lexical_cast<bool>(0)' is true
executed 'lexical_cast<bool>(123)'
expression 'true == lexical_cast<bool>(1.0)' is true
expression 'false == lexical_cast<bool>(0.0)' is true
expression 'true == lexical_cast<bool>(true)' is true
expression 'false == lexical_cast<bool>(false)' is true
expression 'true == lexical_cast<bool>("1")' is true
expression 'false == lexical_cast<bool>("0")' is true
exception 'bad_lexical_cast' accepted
exception 'bad_lexical_cast' accepted
expression 'true == lexical_cast<bool>("1")' is true
expression 'false == lexical_cast<bool>("0")' is true
expression 'true == lexical_cast<bool>(stl::string("1"))' is true
expression 'false == lexical_cast<bool>(stl::string("0"))' is true
exception 'bad_lexical_cast' accepted
exception 'bad_lexical_cast' accepted
conversion from to wchar_t_alias:
expression '123u == lexical_cast<unsigned short>("123")' is true
expression '123u == lexical_cast<unsigned int>("123")' is true
expression '123u == lexical_cast<unsigned long>("123")' is true
expression 'stl::string("123") == lexical_cast<stl::string>(static_cast<unsigned short>(123))' is true
expression 'stl::string("123") == lexical_cast<stl::string>(123u)' is true
expression 'stl::string("123") == lexical_cast<stl::string>(123ul)' is true
conversion to pointer:
exception 'bad_lexical_cast' accepted
exception 'bad_lexical_cast' accepted
conversion to string:
expression '"A" == lexical_cast<stl::string>('A')' is true
expression '" " == lexical_cast<stl::string>(' ')' is true
expression '"123" == lexical_cast<stl::string>(123)' is true
expression '"1.23" == lexical_cast<stl::string>(1.23)' is true
expression '"1.111111111" == lexical_cast<stl::string>(1.111111111)' is true
expression '"1" == lexical_cast<stl::string>(true)' is true
expression '"0" == lexical_cast<stl::string>(false)' is true
expression '"Test" == lexical_cast<stl::string>("Test")' is true
expression '" " == lexical_cast<stl::string>(" ")' is true
expression '"" == lexical_cast<stl::string>("")' is true
expression '"Test" == lexical_cast<stl::string>(stl::string("Test"))' is true
expression '" " == lexical_cast<stl::string>(stl::string(" "))' is true
expression '"" == lexical_cast<stl::string>(stl::string(""))' is true
bad_lexical_cast test:
expression '&e.source_type() == &typeid(stl::string)' is true
expression '&e.target_type() == &typeid(int)' is true
no whitespace stripping test:
executed 'lexical_cast<int>(" 123")'
exception 'bad_lexical_cast' accepted
