Results of add_reference_test:
expression add_reference<bool const>::type=bool const&
expression add_reference<char const>::type=char const&
expression add_reference<wchar_t const>::type=wchar_t const&
expression add_reference<signed char const>::type=signed char const&
expression add_reference<unsigned char const>::type=unsigned char const&
expression add_reference<short const>::type=short const&
expression add_reference<unsigned short const>::type=unsigned short const&
expression add_reference<int const>::type=int const&
expression add_reference<unsigned int const>::type=unsigned int const&
expression add_reference<long const>::type=long const&
expression add_reference<unsigned long const>::type=unsigned long const&
expression add_reference<float const>::type=float const&
expression add_reference<long double const>::type=long double const&
expression add_reference<double const>::type=double const&
expression add_reference<UDT const>::type=UDT const&
expression add_reference<enum1 const>::type=enum1 const&
expression add_reference<bool volatile>::type=bool volatile&
expression add_reference<char volatile>::type=char volatile&
expression add_reference<wchar_t volatile>::type=wchar_t volatile&
expression add_reference<signed char volatile>::type=signed char volatile&
expression add_reference<unsigned char volatile>::type=unsigned char volatile&
expression add_reference<short volatile>::type=short volatile&
expression add_reference<unsigned short volatile>::type=unsigned short volatile&
expression add_reference<int volatile>::type=int volatile&
expression add_reference<unsigned int volatile>::type=unsigned int volatile&
expression add_reference<long volatile>::type=long volatile&
expression add_reference<unsigned long volatile>::type=unsigned long volatile&
expression add_reference<float volatile>::type=float volatile&
expression add_reference<long double volatile>::type=long double volatile&
expression add_reference<double volatile>::type=double volatile&
expression add_reference<UDT volatile>::type=UDT volatile&
expression add_reference<enum1 volatile>::type=enum1 volatile&
expression add_reference<bool *>::type=bool *&
expression add_reference<char *>::type=char *&
expression add_reference<wchar_t *>::type=wchar_t *&
expression add_reference<signed char *>::type=signed char *&
expression add_reference<unsigned char *>::type=unsigned char *&
expression add_reference<short *>::type=short *&
expression add_reference<unsigned short *>::type=unsigned short *&
expression add_reference<int *>::type=int *&
expression add_reference<unsigned int *>::type=unsigned int *&
expression add_reference<long *>::type=long *&
expression add_reference<unsigned long *>::type=unsigned long *&
expression add_reference<float *>::type=float *&
expression add_reference<long double *>::type=long double *&
expression add_reference<double *>::type=double *&
expression add_reference<UDT *>::type=UDT *&
expression add_reference<enum1 *>::type=enum1 *&
expression add_reference<bool >::type=bool &
expression add_reference<char >::type=char &
expression add_reference<wchar_t >::type=wchar_t &
expression add_reference<signed char >::type=signed char &
expression add_reference<unsigned char >::type=unsigned char &
expression add_reference<short >::type=short &
expression add_reference<unsigned short >::type=unsigned short &
expression add_reference<int >::type=int &
expression add_reference<unsigned int >::type=unsigned int &
expression add_reference<long >::type=long &
expression add_reference<unsigned long >::type=unsigned long &
expression add_reference<float >::type=float &
expression add_reference<long double >::type=long double &
expression add_reference<double >::type=double &
expression add_reference<UDT >::type=UDT &
expression add_reference<enum1 >::type=enum1 &
expression add_reference<bool const &>::type=bool const&
expression add_reference<char const &>::type=char const&
expression add_reference<wchar_t const &>::type=wchar_t const&
expression add_reference<signed char const &>::type=signed char const&
expression add_reference<unsigned char const &>::type=unsigned char const&
expression add_reference<short const &>::type=short const&
expression add_reference<unsigned short const &>::type=unsigned short const&
expression add_reference<int const &>::type=int const&
expression add_reference<unsigned int const &>::type=unsigned int const&
expression add_reference<long const &>::type=long const&
expression add_reference<unsigned long const &>::type=unsigned long const&
expression add_reference<float const &>::type=float const&
expression add_reference<long double const &>::type=long double const&
expression add_reference<double const &>::type=double const&
expression add_reference<UDT const &>::type=UDT const&
expression add_reference<enum1 const &>::type=enum1 const&
expression add_reference<bool &>::type=bool &
expression add_reference<char &>::type=char &
expression add_reference<wchar_t &>::type=wchar_t &
expression add_reference<signed char &>::type=signed char &
expression add_reference<unsigned char &>::type=unsigned char &
expression add_reference<short &>::type=short &
expression add_reference<unsigned short &>::type=unsigned short &
expression add_reference<int &>::type=int &
expression add_reference<unsigned int &>::type=unsigned int &
expression add_reference<long &>::type=long &
expression add_reference<unsigned long &>::type=unsigned long &
expression add_reference<float &>::type=float &
expression add_reference<long double &>::type=long double &
expression add_reference<double &>::type=double &
expression add_reference<UDT &>::type=UDT &
expression add_reference<enum1 &>::type=enum1 &
expression add_reference<bool *volatile>::type=bool *volatile&
expression add_reference<char *volatile>::type=char *volatile&
expression add_reference<wchar_t *volatile>::type=wchar_t *volatile&
expression add_reference<signed char *volatile>::type=signed char *volatile&
expression add_reference<unsigned char *volatile>::type=unsigned char *volatile&
expression add_reference<short *volatile>::type=short *volatile&
expression add_reference<unsigned short *volatile>::type=unsigned short *volatile&
expression add_reference<int *volatile>::type=int *volatile&
expression add_reference<unsigned int *volatile>::type=unsigned int *volatile&
expression add_reference<long *volatile>::type=long *volatile&
expression add_reference<unsigned long *volatile>::type=unsigned long *volatile&
expression add_reference<float *volatile>::type=float *volatile&
expression add_reference<long double *volatile>::type=long double *volatile&
expression add_reference<double *volatile>::type=double *volatile&
expression add_reference<UDT *volatile>::type=UDT *volatile&
expression add_reference<enum1 *volatile>::type=enum1 *volatile&
expression add_reference<bool const [2]>::type=bool const (&)[2]
expression add_reference<char const [2]>::type=char const (&)[2]
expression add_reference<wchar_t const [2]>::type=wchar_t const (&)[2]
expression add_reference<signed char const [2]>::type=signed char const (&)[2]
expression add_reference<unsigned char const [2]>::type=unsigned char const (&)[2]
expression add_reference<short const [2]>::type=short const (&)[2]
expression add_reference<unsigned short const [2]>::type=unsigned short const (&)[2]
expression add_reference<int const [2]>::type=int const (&)[2]
expression add_reference<unsigned int const [2]>::type=unsigned int const (&)[2]
expression add_reference<long const [2]>::type=long const (&)[2]
expression add_reference<unsigned long const [2]>::type=unsigned long const (&)[2]
expression add_reference<float const [2]>::type=float const (&)[2]
expression add_reference<long double const [2]>::type=long double const (&)[2]
expression add_reference<double const [2]>::type=double const (&)[2]
expression add_reference<UDT const [2]>::type=UDT const (&)[2]
expression add_reference<enum1 const [2]>::type=enum1 const (&)[2]
expression add_reference<bool const &>::type=bool const&
expression add_reference<char const &>::type=char const&
expression add_reference<wchar_t const &>::type=wchar_t const&
expression add_reference<signed char const &>::type=signed char const&
expression add_reference<unsigned char const &>::type=unsigned char const&
expression add_reference<short const &>::type=short const&
expression add_reference<unsigned short const &>::type=unsigned short const&
expression add_reference<int const &>::type=int const&
expression add_reference<unsigned int const &>::type=unsigned int const&
expression add_reference<long const &>::type=long const&
expression add_reference<unsigned long const &>::type=unsigned long const&
expression add_reference<float const &>::type=float const&
expression add_reference<long double const &>::type=long double const&
expression add_reference<double const &>::type=double const&
expression add_reference<UDT const &>::type=UDT const&
expression add_reference<enum1 const &>::type=enum1 const&
expression add_reference<bool const*>::type=bool const*&
expression add_reference<char const*>::type=char const*&
expression add_reference<wchar_t const*>::type=wchar_t const*&
expression add_reference<signed char const*>::type=signed char const*&
expression add_reference<unsigned char const*>::type=unsigned char const*&
expression add_reference<short const*>::type=short const*&
expression add_reference<unsigned short const*>::type=unsigned short const*&
expression add_reference<int const*>::type=int const*&
expression add_reference<unsigned int const*>::type=unsigned int const*&
expression add_reference<long const*>::type=long const*&
expression add_reference<unsigned long const*>::type=unsigned long const*&
expression add_reference<float const*>::type=float const*&
expression add_reference<long double const*>::type=long double const*&
expression add_reference<double const*>::type=double const*&
expression add_reference<UDT const*>::type=UDT const*&
expression add_reference<enum1 const*>::type=enum1 const*&
expression add_reference<bool volatile*>::type=bool volatile*&
expression add_reference<char volatile*>::type=char volatile*&
expression add_reference<wchar_t volatile*>::type=wchar_t volatile*&
expression add_reference<signed char volatile*>::type=signed char volatile*&
expression add_reference<unsigned char volatile*>::type=unsigned char volatile*&
expression add_reference<short volatile*>::type=short volatile*&
expression add_reference<unsigned short volatile*>::type=unsigned short volatile*&
expression add_reference<int volatile*>::type=int volatile*&
expression add_reference<unsigned int volatile*>::type=unsigned int volatile*&
expression add_reference<long volatile*>::type=long volatile*&
expression add_reference<unsigned long volatile*>::type=unsigned long volatile*&
expression add_reference<float volatile*>::type=float volatile*&
expression add_reference<long double volatile*>::type=long double volatile*&
expression add_reference<double volatile*>::type=double volatile*&
expression add_reference<UDT volatile*>::type=UDT volatile*&
expression add_reference<enum1 volatile*>::type=enum1 volatile*&
expression add_reference<bool const[2][3]>::type=bool const (&)[2][3]
expression add_reference<char const[2][3]>::type=char const (&)[2][3]
expression add_reference<wchar_t const[2][3]>::type=wchar_t const (&)[2][3]
expression add_reference<signed char const[2][3]>::type=signed char const (&)[2][3]
expression add_reference<unsigned char const[2][3]>::type=unsigned char const (&)[2][3]
expression add_reference<short const[2][3]>::type=short const (&)[2][3]
expression add_reference<unsigned short const[2][3]>::type=unsigned short const (&)[2][3]
expression add_reference<int const[2][3]>::type=int const (&)[2][3]
expression add_reference<unsigned int const[2][3]>::type=unsigned int const (&)[2][3]
expression add_reference<long const[2][3]>::type=long const (&)[2][3]
expression add_reference<unsigned long const[2][3]>::type=unsigned long const (&)[2][3]
expression add_reference<float const[2][3]>::type=float const (&)[2][3]
expression add_reference<long double const[2][3]>::type=long double const (&)[2][3]
expression add_reference<double const[2][3]>::type=double const (&)[2][3]
expression add_reference<UDT const[2][3]>::type=UDT const (&)[2][3]
expression add_reference<enum1 const[2][3]>::type=enum1 const (&)[2][3]
expression add_reference<bool (&)[2]>::type=bool (&)[2]
expression add_reference<char (&)[2]>::type=char (&)[2]
expression add_reference<wchar_t (&)[2]>::type=wchar_t (&)[2]
expression add_reference<signed char (&)[2]>::type=signed char (&)[2]
expression add_reference<unsigned char (&)[2]>::type=unsigned char (&)[2]
expression add_reference<short (&)[2]>::type=short (&)[2]
expression add_reference<unsigned short (&)[2]>::type=unsigned short (&)[2]
expression add_reference<int (&)[2]>::type=int (&)[2]
expression add_reference<unsigned int (&)[2]>::type=unsigned int (&)[2]
expression add_reference<long (&)[2]>::type=long (&)[2]
expression add_reference<unsigned long (&)[2]>::type=unsigned long (&)[2]
expression add_reference<float (&)[2]>::type=float (&)[2]
expression add_reference<long double (&)[2]>::type=long double (&)[2]
expression add_reference<double (&)[2]>::type=double (&)[2]
expression add_reference<UDT (&)[2]>::type=UDT (&)[2]
expression add_reference<enum1 (&)[2]>::type=enum1 (&)[2]
