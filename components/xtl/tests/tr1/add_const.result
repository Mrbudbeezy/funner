Results of add_const_test:
expression add_const<bool const>::type=bool const
expression add_const<char const>::type=char const
expression add_const<wchar_t const>::type=wchar_t const
expression add_const<signed char const>::type=signed char const
expression add_const<unsigned char const>::type=unsigned char const
expression add_const<short const>::type=short const
expression add_const<unsigned short const>::type=unsigned short const
expression add_const<int const>::type=int const
expression add_const<unsigned int const>::type=unsigned int const
expression add_const<long const>::type=long const
expression add_const<unsigned long const>::type=unsigned long const
expression add_const<float const>::type=float const
expression add_const<long double const>::type=long double const
expression add_const<double const>::type=double const
expression add_const<UDT const>::type=UDT const
expression add_const<enum1 const>::type=enum1 const
expression add_const<bool volatile>::type=bool volatile const
expression add_const<char volatile>::type=char volatile const
expression add_const<wchar_t volatile>::type=wchar_t volatile const
expression add_const<signed char volatile>::type=signed char volatile const
expression add_const<unsigned char volatile>::type=unsigned char volatile const
expression add_const<short volatile>::type=short volatile const
expression add_const<unsigned short volatile>::type=unsigned short volatile const
expression add_const<int volatile>::type=int volatile const
expression add_const<unsigned int volatile>::type=unsigned int volatile const
expression add_const<long volatile>::type=long volatile const
expression add_const<unsigned long volatile>::type=unsigned long volatile const
expression add_const<float volatile>::type=float volatile const
expression add_const<long double volatile>::type=long double volatile const
expression add_const<double volatile>::type=double volatile const
expression add_const<UDT volatile>::type=UDT volatile const
expression add_const<enum1 volatile>::type=enum1 volatile const
expression add_const<bool *>::type=bool *const
expression add_const<char *>::type=char *const
expression add_const<wchar_t *>::type=wchar_t *const
expression add_const<signed char *>::type=signed char *const
expression add_const<unsigned char *>::type=unsigned char *const
expression add_const<short *>::type=short *const
expression add_const<unsigned short *>::type=unsigned short *const
expression add_const<int *>::type=int *const
expression add_const<unsigned int *>::type=unsigned int *const
expression add_const<long *>::type=long *const
expression add_const<unsigned long *>::type=unsigned long *const
expression add_const<float *>::type=float *const
expression add_const<long double *>::type=long double *const
expression add_const<double *>::type=double *const
expression add_const<UDT *>::type=UDT *const
expression add_const<enum1 *>::type=enum1 *const
expression add_const<bool >::type=bool const
expression add_const<char >::type=char const
expression add_const<wchar_t >::type=wchar_t const
expression add_const<signed char >::type=signed char const
expression add_const<unsigned char >::type=unsigned char const
expression add_const<short >::type=short const
expression add_const<unsigned short >::type=unsigned short const
expression add_const<int >::type=int const
expression add_const<unsigned int >::type=unsigned int const
expression add_const<long >::type=long const
expression add_const<unsigned long >::type=unsigned long const
expression add_const<float >::type=float const
expression add_const<long double >::type=long double const
expression add_const<double >::type=double const
expression add_const<UDT >::type=UDT const
expression add_const<enum1 >::type=enum1 const
expression add_const<bool *volatile>::type=bool *volatile const
expression add_const<char *volatile>::type=char *volatile const
expression add_const<wchar_t *volatile>::type=wchar_t *volatile const
expression add_const<signed char *volatile>::type=signed char *volatile const
expression add_const<unsigned char *volatile>::type=unsigned char *volatile const
expression add_const<short *volatile>::type=short *volatile const
expression add_const<unsigned short *volatile>::type=unsigned short *volatile const
expression add_const<int *volatile>::type=int *volatile const
expression add_const<unsigned int *volatile>::type=unsigned int *volatile const
expression add_const<long *volatile>::type=long *volatile const
expression add_const<unsigned long *volatile>::type=unsigned long *volatile const
expression add_const<float *volatile>::type=float *volatile const
expression add_const<long double *volatile>::type=long double *volatile const
expression add_const<double *volatile>::type=double *volatile const
expression add_const<UDT *volatile>::type=UDT *volatile const
expression add_const<enum1 *volatile>::type=enum1 *volatile const
expression add_const<bool const*>::type=bool const*const
expression add_const<char const*>::type=char const*const
expression add_const<wchar_t const*>::type=wchar_t const*const
expression add_const<signed char const*>::type=signed char const*const
expression add_const<unsigned char const*>::type=unsigned char const*const
expression add_const<short const*>::type=short const*const
expression add_const<unsigned short const*>::type=unsigned short const*const
expression add_const<int const*>::type=int const*const
expression add_const<unsigned int const*>::type=unsigned int const*const
expression add_const<long const*>::type=long const*const
expression add_const<unsigned long const*>::type=unsigned long const*const
expression add_const<float const*>::type=float const*const
expression add_const<long double const*>::type=long double const*const
expression add_const<double const*>::type=double const*const
expression add_const<UDT const*>::type=UDT const*const
expression add_const<enum1 const*>::type=enum1 const*const
expression add_const<bool volatile*>::type=bool volatile*const
expression add_const<char volatile*>::type=char volatile*const
expression add_const<wchar_t volatile*>::type=wchar_t volatile*const
expression add_const<signed char volatile*>::type=signed char volatile*const
expression add_const<unsigned char volatile*>::type=unsigned char volatile*const
expression add_const<short volatile*>::type=short volatile*const
expression add_const<unsigned short volatile*>::type=unsigned short volatile*const
expression add_const<int volatile*>::type=int volatile*const
expression add_const<unsigned int volatile*>::type=unsigned int volatile*const
expression add_const<long volatile*>::type=long volatile*const
expression add_const<unsigned long volatile*>::type=unsigned long volatile*const
expression add_const<float volatile*>::type=float volatile*const
expression add_const<long double volatile*>::type=long double volatile*const
expression add_const<double volatile*>::type=double volatile*const
expression add_const<UDT volatile*>::type=UDT volatile*const
expression add_const<enum1 volatile*>::type=enum1 volatile*const
expression add_const<bool const &>::type=bool const&
expression add_const<char const &>::type=char const&
expression add_const<wchar_t const &>::type=wchar_t const&
expression add_const<signed char const &>::type=signed char const&
expression add_const<unsigned char const &>::type=unsigned char const&
expression add_const<short const &>::type=short const&
expression add_const<unsigned short const &>::type=unsigned short const&
expression add_const<int const &>::type=int const&
expression add_const<unsigned int const &>::type=unsigned int const&
expression add_const<long const &>::type=long const&
expression add_const<unsigned long const &>::type=unsigned long const&
expression add_const<float const &>::type=float const&
expression add_const<long double const &>::type=long double const&
expression add_const<double const &>::type=double const&
expression add_const<UDT const &>::type=UDT const&
expression add_const<enum1 const &>::type=enum1 const&
expression add_const<bool &>::type=bool &
expression add_const<char &>::type=char &
expression add_const<wchar_t &>::type=wchar_t &
expression add_const<signed char &>::type=signed char &
expression add_const<unsigned char &>::type=unsigned char &
expression add_const<short &>::type=short &
expression add_const<unsigned short &>::type=unsigned short &
expression add_const<int &>::type=int &
expression add_const<unsigned int &>::type=unsigned int &
expression add_const<long &>::type=long &
expression add_const<unsigned long &>::type=unsigned long &
expression add_const<float &>::type=float &
expression add_const<long double &>::type=long double &
expression add_const<double &>::type=double &
expression add_const<UDT &>::type=UDT &
expression add_const<enum1 &>::type=enum1 &
expression add_const<bool const [2]>::type=bool const [2]
expression add_const<char const [2]>::type=char const [2]
expression add_const<wchar_t const [2]>::type=wchar_t const [2]
expression add_const<signed char const [2]>::type=signed char const [2]
expression add_const<unsigned char const [2]>::type=unsigned char const [2]
expression add_const<short const [2]>::type=short const [2]
expression add_const<unsigned short const [2]>::type=unsigned short const [2]
expression add_const<int const [2]>::type=int const [2]
expression add_const<unsigned int const [2]>::type=unsigned int const [2]
expression add_const<long const [2]>::type=long const [2]
expression add_const<unsigned long const [2]>::type=unsigned long const [2]
expression add_const<float const [2]>::type=float const [2]
expression add_const<long double const [2]>::type=long double const [2]
expression add_const<double const [2]>::type=double const [2]
expression add_const<UDT const [2]>::type=UDT const [2]
expression add_const<enum1 const [2]>::type=enum1 const [2]
expression add_const<bool volatile &>::type=bool volatile&
expression add_const<char volatile &>::type=char volatile&
expression add_const<wchar_t volatile &>::type=wchar_t volatile&
expression add_const<signed char volatile &>::type=signed char volatile&
expression add_const<unsigned char volatile &>::type=unsigned char volatile&
expression add_const<short volatile &>::type=short volatile&
expression add_const<unsigned short volatile &>::type=unsigned short volatile&
expression add_const<int volatile &>::type=int volatile&
expression add_const<unsigned int volatile &>::type=unsigned int volatile&
expression add_const<long volatile &>::type=long volatile&
expression add_const<unsigned long volatile &>::type=unsigned long volatile&
expression add_const<float volatile &>::type=float volatile&
expression add_const<long double volatile &>::type=long double volatile&
expression add_const<double volatile &>::type=double volatile&
expression add_const<UDT volatile &>::type=UDT volatile&
expression add_const<enum1 volatile &>::type=enum1 volatile&
expression add_const<bool [2][3]>::type=bool const[2][3]
expression add_const<char [2][3]>::type=char const[2][3]
expression add_const<wchar_t [2][3]>::type=wchar_t const[2][3]
expression add_const<signed char [2][3]>::type=signed char const[2][3]
expression add_const<unsigned char [2][3]>::type=unsigned char const[2][3]
expression add_const<short [2][3]>::type=short const[2][3]
expression add_const<unsigned short [2][3]>::type=unsigned short const[2][3]
expression add_const<int [2][3]>::type=int const[2][3]
expression add_const<unsigned int [2][3]>::type=unsigned int const[2][3]
expression add_const<long [2][3]>::type=long const[2][3]
expression add_const<unsigned long [2][3]>::type=unsigned long const[2][3]
expression add_const<float [2][3]>::type=float const[2][3]
expression add_const<long double [2][3]>::type=long double const[2][3]
expression add_const<double [2][3]>::type=double const[2][3]
expression add_const<UDT [2][3]>::type=UDT const[2][3]
expression add_const<enum1 [2][3]>::type=enum1 const[2][3]
expression add_const<bool (&)[2]>::type=bool (&)[2]
expression add_const<char (&)[2]>::type=char (&)[2]
expression add_const<wchar_t (&)[2]>::type=wchar_t (&)[2]
expression add_const<signed char (&)[2]>::type=signed char (&)[2]
expression add_const<unsigned char (&)[2]>::type=unsigned char (&)[2]
expression add_const<short (&)[2]>::type=short (&)[2]
expression add_const<unsigned short (&)[2]>::type=unsigned short (&)[2]
expression add_const<int (&)[2]>::type=int (&)[2]
expression add_const<unsigned int (&)[2]>::type=unsigned int (&)[2]
expression add_const<long (&)[2]>::type=long (&)[2]
expression add_const<unsigned long (&)[2]>::type=unsigned long (&)[2]
expression add_const<float (&)[2]>::type=float (&)[2]
expression add_const<long double (&)[2]>::type=long double (&)[2]
expression add_const<double (&)[2]>::type=double (&)[2]
expression add_const<UDT (&)[2]>::type=UDT (&)[2]
expression add_const<enum1 (&)[2]>::type=enum1 (&)[2]
