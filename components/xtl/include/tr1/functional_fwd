/*
    TR1 functional fordwards
*/

#ifndef MYTR1_FUNCTIONAL_FWD_HEADER
#define MYTR1_FUNCTIONAL_FWD_HEADER

namespace tr1
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Определение типа возвращаемого значения функции
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class FunctionCallType> struct result_of;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обёртка над ссылкой
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class T> class reference_wrapper;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Исключение, генерируемое при вызове пустой функции обратного вызова
///////////////////////////////////////////////////////////////////////////////////////////////////
struct bad_function_call;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Функция обратного вызова
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class Signature> class function;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Сигнал
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class Signature, class Accumulator> class signal;

}

#endif
