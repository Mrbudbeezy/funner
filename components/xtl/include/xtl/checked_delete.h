#ifndef XTL_CHECKED_DELETE_HEADER
#define XTL_CHECKED_DELETE_HEADER

namespace xtl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Удаление с проверкой на "полноту" типа
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class T> void checked_delete       (T*);
template <class T> void checked_array_delete (T*);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Функтор удаления объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class T> struct checked_deleter
{
  typedef void result_type;
  typedef T*   argument_type;
  
  void operator () (T* ptr) const { xtl::checked_delete (ptr); }
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Функтор удаления массива
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class T> struct checked_array_deleter
{
  typedef void result_type;
  typedef T*   argument_type;
  
  void operator () (T* ptr) const { xtl::checked_array_delete (ptr); }
};

#include <xtl/detail/checked_delete.inl>

}

#endif
