#ifndef XTL_ANY_CAST_EXCEPTHION_HEADER
#define XTL_ANY_CAST_EXCEPTHION_HEADER

#include <exception>
#include <typeinfo>

namespace xtl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Исключение: ошибка приведения any-типа данных
///////////////////////////////////////////////////////////////////////////////////////////////////
class bad_any_cast: public std::bad_cast
{
  public: 
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы
///////////////////////////////////////////////////////////////////////////////////////////////////
    bad_any_cast ();
    bad_any_cast (const std::type_info& source_type, const std::type_info& target_type);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Исходный и целевой типы
///////////////////////////////////////////////////////////////////////////////////////////////////
    const std::type_info& source_type () const;
    const std::type_info& target_type () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение сообщения
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* what () const throw () { return "xtl::bad_any_cast"; }

  private:
    const std::type_info *source, *target;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Исключение: ошибка приведения any-типа данных (несовпадение CV)
///////////////////////////////////////////////////////////////////////////////////////////////////
class bad_cv_any_cast: public bad_any_cast
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы
///////////////////////////////////////////////////////////////////////////////////////////////////
    bad_cv_any_cast ();
    bad_cv_any_cast (const std::type_info& source_type, const std::type_info& target_type);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение сообщения
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* what () const throw () { return "xtl::bad_cv_any_cast"; }
};

#include <xtl/detail/any_cast_exception.inl>

}

#endif
