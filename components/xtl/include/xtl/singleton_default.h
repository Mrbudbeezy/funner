#ifndef XTL_SINGLETON_DEFAULT_HEADER
#define XTL_SINGLETON_DEFAULT_HEADER

#include <new>

namespace xtl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Класс, используемый для гарантированной инициализации объекта до main() в случае
///наличия вызова singleton::instance()
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class T, bool need_destroy=true> class singleton_default
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение экземпляра объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
    static T& instance ();
};

#include <xtl/detail/singleton_default.inl>

}

#endif
