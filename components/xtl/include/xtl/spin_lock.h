#ifndef XTL_SPIN_LOCK_HEADER
#define XTL_SPIN_LOCK_HEADER

#include <xtl/interlocked.h>
#include <xtl/utility>

namespace xtl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Быстрая блокировка многопоточного доступа
///////////////////////////////////////////////////////////////////////////////////////////////////
class spin_lock: public xtl::noncopyable
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    spin_lock  ();
    ~spin_lock ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Запирание / отпирание
///////////////////////////////////////////////////////////////////////////////////////////////////
    void lock     ();
    bool try_lock ();
    void unlock   ();

  private:
    volatile int counter;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Запирание / отпирание
///////////////////////////////////////////////////////////////////////////////////////////////////
void lock   (spin_lock&);
void unlock (spin_lock&);

#include <xtl/detail/spin_lock.inl>

}

#endif
