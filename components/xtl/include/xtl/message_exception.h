#ifndef XTL_MESSAGE_EXCEPTION_HEADER
#define XTL_MESSAGE_EXCEPTION_HEADER

#include <xtl/exception.h>
#include <xtl/string_buffer.h>

namespace xtl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Класс исключения, основанный на строковом сообщении
///////////////////////////////////////////////////////////////////////////////////////////////////
class message_exception: public exception
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструкторы
///////////////////////////////////////////////////////////////////////////////////////////////////
    message_exception (const char* message);
    message_exception (const char* source, const char* message);
    ~message_exception () throw () {}

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение сообщения
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* what () const throw ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление информации о контексте выброса
///////////////////////////////////////////////////////////////////////////////////////////////////
    void touch  (const char* format, ...) throw ();
    void vtouch (const char* format, va_list args) throw ();

  private:
    string_buffer message;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Враппер для создания производного класса исключения
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class Tag, class BaseException=message_exception>
class derived_exception: public BaseException
{
  public:
    derived_exception (const char* message);
    derived_exception (const char* source, const char* message);
};

#include <xtl/detail/message_exception.inl>

}

#endif
