#ifndef __MYSTL_BITS_OPERATIONS__
#define __MYSTL_BITS_OPERATIONS__

#include <stl/config.h>

namespace stl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///"Ссылка" на бит
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class WordT>
class bit_reference
{  
  public:
    typedef WordT word_type;
  
    bit_reference (word_type* pos,word_type mask);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Присваивание
///////////////////////////////////////////////////////////////////////////////////////////////////            
    bit_reference& operator = (bool);
    bit_reference& operator = (const bit_reference&);        
 
///////////////////////////////////////////////////////////////////////////////////////////////////
///Двоичные операции
///////////////////////////////////////////////////////////////////////////////////////////////////                
    bit_reference& flip ();    
   
    bool           operator ~  () const;    
    bit_reference& operator |= (bool value);
    bit_reference& operator &= (bool value);
    bool           operator |  (bool value) const;
    bool           operator &  (bool value) const;
   
///////////////////////////////////////////////////////////////////////////////////////////////////
///Приведение типов
///////////////////////////////////////////////////////////////////////////////////////////////////
    operator bool () const;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////                        
    void swap (bit_reference&);       
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Сравнение
///////////////////////////////////////////////////////////////////////////////////////////////////                        
    bool operator == (const bit_reference&) const;
    bool operator != (const bit_reference&) const;
    bool operator <  (const bit_reference&) const;
    bool operator >  (const bit_reference&) const;
    bool operator <= (const bit_reference&) const;
    bool operator >= (const bit_reference&) const;

  private:
    word_type* pos, mask;            
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////                        
template <class WordT>
void swap (bit_reference<WordT>&,bit_reference<WordT>&);  

#include <stl/detail/bitref.inl>

}

#endif
