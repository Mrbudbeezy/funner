#ifndef SOUND_SYSTEM_LOW_LEVEL_DRIVER_HEADER
#define SOUND_SYSTEM_LOW_LEVEL_DRIVER_HEADER

#include <sound/device.h>

namespace sound
{

namespace low_level
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Драйвер устройств воспроизведения
///////////////////////////////////////////////////////////////////////////////////////////////////
class IDriver
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание драйвера
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual const char* GetDescription () = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Перечисление доступных устройств
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual size_t      GetDevicesCount () = 0;
    virtual const char* GetDeviceName   (size_t index) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Создаение устройства ввода
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IDevice* CreateDevice (const char* name, const char* init_string = "") = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Подсчёт ссылок
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void AddRef  () = 0;
    virtual void Release () = 0;

  protected:
    virtual ~IDriver () {}
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Менеджер драйверов устройств воспроизведения
///////////////////////////////////////////////////////////////////////////////////////////////////
class DriverManager
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация драйверов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterDriver       (const char* name, IDriver* driver);
    static void UnregisterDriver     (const char* name);
    static void UnregisterAllDrivers ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Поиск драйвера по имени
///////////////////////////////////////////////////////////////////////////////////////////////////
    static IDriver* FindDriver (const char* name);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Перечисление драйверов
///////////////////////////////////////////////////////////////////////////////////////////////////
    static size_t      DriversCount ();
    static IDriver*    Driver       (size_t index);
    static const char* DriverName   (size_t index);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание устройства
///////////////////////////////////////////////////////////////////////////////////////////////////
    static IDevice* CreateDevice (const char* driver_mask, const char* device_mask, const char* init_string = "");
};

}

}

#endif
