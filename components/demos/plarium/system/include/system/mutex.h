#ifndef SYSTEM_MUTEX_HEADER
#define SYSTEM_MUTEX_HEADER

namespace plarium
{

namespace system
{

//implementation forwards
class Condition;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Mutex
///////////////////////////////////////////////////////////////////////////////////////////////////
class Mutex
{
  friend class Condition;
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Constructor / destructor
///////////////////////////////////////////////////////////////////////////////////////////////////
    Mutex  ();
    ~Mutex ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Access lock
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Lock   ();
    void Unlock ();

  private:
    Mutex  (const Mutex&); //no impl
    Mutex& operator = (const Mutex&); //no impl
    
    void* Handle ();

  private:
    struct Impl;
    Impl* impl;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Block lock
///////////////////////////////////////////////////////////////////////////////////////////////////
class Lock
{
  public:
    Lock  (Mutex& in_Mutex);
    ~Lock ();

  private:
    Lock (const Lock&); //no impl
    Lock& operator = (const Lock&); //no impl

  private:
    Mutex& mutex;
};

#include <system/detail/mutex.inl>

}

}

#endif
