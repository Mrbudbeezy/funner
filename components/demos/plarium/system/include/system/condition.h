#ifndef SYSTEM_CONDITION_HEADER
#define SYSTEM_CONDITION_HEADER

#include <system/mutex.h>

namespace plarium
{

namespace system
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Thread execution condition
///////////////////////////////////////////////////////////////////////////////////////////////////
class Condition
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Constructor / destructor
///////////////////////////////////////////////////////////////////////////////////////////////////
    Condition  ();
    ~Condition ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Condition unblock
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Notify (bool broadcast);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Condition wait
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Wait (Mutex& lock);
    void Wait (Mutex& lock, size_t wait_in_milliseconds);

  private:
    Condition  (const Condition&); //no impl
    Condition& operator = (const Condition&); //no impl

  private:
    struct Impl;
    Impl* impl;
};

}

}

#endif
