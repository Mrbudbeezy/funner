#ifndef SYSTEM_THREAD_HEADER
#define SYSTEM_THREAD_HEADER

namespace plarium
{

namespace system
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Thread
///////////////////////////////////////////////////////////////////////////////////////////////////
class Thread
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Constructor / destructor
///////////////////////////////////////////////////////////////////////////////////////////////////
    typedef void *(*ThreadFunction) (void *);

    Thread  (ThreadFunction start, void* thread_arg = 0);
    ~Thread ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Wait thread function
///////////////////////////////////////////////////////////////////////////////////////////////////
    int Join (); //return exit code

///////////////////////////////////////////////////////////////////////////////////////////////////
///Sleep
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void Sleep (size_t milliseconds);

  private:
    Thread  (const Thread&); //no impl
    Thread& operator = (const Thread&); //no impl

  private:
    struct Impl;
    Impl* impl;
};

}

}

#endif
