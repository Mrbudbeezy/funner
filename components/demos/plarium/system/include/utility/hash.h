#ifndef UTILITY_HASH_HEADER
#define UTILITY_HASH_HEADER

namespace plarium
{

namespace utility
{

/*
   SHA256
*/

///////////////////////////////////////////////////////////////////////////////////////////////////
///Context for SHA-256 calculation
///////////////////////////////////////////////////////////////////////////////////////////////////
class Sha256Context
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Constructor / destructor
///////////////////////////////////////////////////////////////////////////////////////////////////
     Sha256Context  ();
     ~Sha256Context ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Update
///////////////////////////////////////////////////////////////////////////////////////////////////
     void Update (const void* data, size_t data_size);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Finish hash calculation and write result data to output buffer
///////////////////////////////////////////////////////////////////////////////////////////////////
     void Finish (unsigned char result_hash_value [32]);

  private:
    Sha256Context (const Sha256Context&);             //no impl
    Sha256Context& operator = (const Sha256Context&); //no impl

  private:
    struct Impl;
    Impl* impl;
};

void sha256 (const void* data, size_t size, unsigned char result_hash_value [32]);

/*
   HMAC-SHA256
*/

///////////////////////////////////////////////////////////////////////////////////////////////////
///Context for HMAC-SHA-256 calculation
///////////////////////////////////////////////////////////////////////////////////////////////////
class HmacSha256Context
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Constructor / destructor
///////////////////////////////////////////////////////////////////////////////////////////////////
     HmacSha256Context  (const void* key, size_t key_size);
     ~HmacSha256Context ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Update
///////////////////////////////////////////////////////////////////////////////////////////////////
     void Update (const void* data, size_t data_size);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Finish hash calculation and write result data to output buffer
///////////////////////////////////////////////////////////////////////////////////////////////////
     void Finish (unsigned char result_hash_value [32]);

  private:
    HmacSha256Context (const HmacSha256Context&);             //no impl
    HmacSha256Context& operator = (const HmacSha256Context&); //no impl

  private:
    struct Impl;
    Impl* impl;
};

void hmac_sha256 (const void* key, size_t key_size, const void* data, size_t data_size, unsigned char result_hash_value [32]);

}

}

#endif
