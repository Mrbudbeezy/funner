#ifndef CLIENT_WINDOW_MANAGER_HEADER
#define CLIENT_WINDOW_MANAGER_HEADER

namespace client
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Менеджер окон
///////////////////////////////////////////////////////////////////////////////////////////////////
class WindowManager
{
  public:
    typedef xtl::function<void (syslib::Window& window, VarRegistry& var_registry, Engine& engine)> StartupHandler;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Работа с обработчиками
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void RegisterStartupHandler       (const char* name, const StartupHandler&, int order = 0); //чем ниже order, тем раньше запускается
    static void UnregisterStartupHandler     (const char* name);
    static void UnregisterAllStartupHandlers ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление окон
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void AddWindow  (syslib::Window& window, VarRegistry& var_registry, Engine& engine);
    static void AddWindows (VarRegistry& var_registry, Engine& engine);
};

}

#endif
