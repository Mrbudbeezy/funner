#ifndef SOCIAL_COMMON_HEADER
#define SOCIAL_COMMON_HEADER

namespace common
{

//forward declaration
class PropertyMap;

}

namespace social
{

//forward declaration
class User;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Результат операции
///////////////////////////////////////////////////////////////////////////////////////////////////
enum OperationStatus
{
  OperationStatus_Success, //Операция завершена успешно
  OperationStatus_Failure  //В ходе выполнения операции произошла ошибка
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Менеджер сессии
///////////////////////////////////////////////////////////////////////////////////////////////////
class ISessionManager
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual ~ISessionManager () {}

///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание сессии
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual const char* GetDescription () = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Показ стандартных окон
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void ShowWindow (const char* window_name, const common::PropertyMap& properties) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение залогиненного пользователя
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual User& CurrentUser () = 0;
};

}

#endif
