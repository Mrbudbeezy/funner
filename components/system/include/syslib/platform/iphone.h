#ifndef SYSLIB_PLATFORM_IPHONE_HEADER
#define SYSLIB_PLATFORM_IPHONE_HEADER

#include <syslib/window.h>

namespace syslib
{

namespace iphone
{

struct touch_handle;

typedef touch_handle* touch_t;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание одного касания
///////////////////////////////////////////////////////////////////////////////////////////////////
struct TouchDescription
{
  touch_t touch;       //идентификатор касания
  float   current_x;   //текущее положение пальца относительно окна
  float   current_y;   //текущее положение пальца относительно окна
  float   previous_x;  //предыдущее положение пальца относительно окна
  float   previous_y;  //предыдущее положение пальца относительно окна
  size_t  tap_count;   //количество касаний
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Интерфейс слушателя событий окна
///////////////////////////////////////////////////////////////////////////////////////////////////
class IWindowListener
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///События касания
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void OnTouchesBegan (size_t touches_count, const TouchDescription* touches) {} //один или несколько пальцев дотронулись до окна
    virtual void OnTouchesMoved (size_t touches_count, const TouchDescription* touches) {} //один или несколько пальцев двигаются в окне
    virtual void OnTouchesEnded (size_t touches_count, const TouchDescription* touches) {} //один или несколько пальцев поднялись с окна

///////////////////////////////////////////////////////////////////////////////////////////////////
///События движения
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void OnShakeMotionBegan () {} //пользователь начал жест "тряски" телефона
    virtual void OnShakeMotionEnded () {} //пользователь закончил жест "тряски" телефона

  protected:
    virtual ~IWindowListener () {}
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление/удаление подписчиков на события окна
///////////////////////////////////////////////////////////////////////////////////////////////////
void attach_window_listener (const Window& window, IWindowListener* listener);
void detach_window_listener (const Window& window, IWindowListener* listener);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Интерфейс слушателя событий приложения
///////////////////////////////////////////////////////////////////////////////////////////////////
class IApplicationListener
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///События
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void OnAcceleration  (double x, double y, double z) {}  //произошло движение телефона
    virtual void OnMemoryWarning () {}                              //нехватка памяти
    virtual void OnActive        () {}                              //приложение стало активным
    virtual void OnInactive      () {}                              //приложение стало неактивным

  protected:
    virtual ~IApplicationListener () {}
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Добавление/удаление подписчиков на события приложения
///////////////////////////////////////////////////////////////////////////////////////////////////
void attach_application_listener (IApplicationListener* listener);
void detach_application_listener (IApplicationListener* listener);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка параметров устройства
///////////////////////////////////////////////////////////////////////////////////////////////////
void set_accelerometer_update_interval (double seconds); //установка периода опроса акселерометра телефона (не гарантируется, что будет установлен именно запрошенный интервал)

}

}

#endif
