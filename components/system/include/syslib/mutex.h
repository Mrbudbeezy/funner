#ifndef SYSLIB_MUTEX_HEADER
#define SYSLIB_MUTEX_HEADER

#include <stl/auto_ptr.h>

namespace syslib
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Исключающий семафор
///////////////////////////////////////////////////////////////////////////////////////////////////
class Mutex
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор / деструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Mutex  ();
    ~Mutex ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Блокирование доступа
///////////////////////////////////////////////////////////////////////////////////////////////////
    bool TryLock ();
    void Lock    ();
    void Lock    (size_t wait_in_milliseconds);
    void Unlock  ();

  private:
    Mutex  (const Mutex&); //no impl
    Mutex& operator = (const Mutex&); //no impl

  private:
    struct Impl;
    stl::auto_ptr<Impl> impl;
};

}

#endif
