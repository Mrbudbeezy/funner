#ifndef SYSLIB_DEFAULT_SCREEN_KEYBOARD_MANAGER_HEADER
#define SYSLIB_DEFAULT_SCREEN_KEYBOARD_MANAGER_HEADER

#include <syslib/screen_keyboard.h>

#include <shared/default_window_manager.h>

namespace syslib
{

struct screen_keyboard_handle;

typedef screen_keyboard_handle* screen_keyboard_t;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Менеджер экранной клавитуары по умолчанию
///////////////////////////////////////////////////////////////////////////////////////////////////
class DefaultScreenKeyboardManager
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание и уничтожение экранной клавиатуры
///////////////////////////////////////////////////////////////////////////////////////////////////
    static screen_keyboard_t CreateScreenKeyboard  (window_t window, ScreenKeyboardType type, const char* platform_specific);
    static void              DestroyScreenKeyboard (screen_keyboard_t);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Показ и скрытие клавиатуры
///////////////////////////////////////////////////////////////////////////////////////////////////
    static void ShowScreenKeyboard (screen_keyboard_t);
    static void HideScreenKeyboard (screen_keyboard_t);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Проверка поддержки клавиатуры
///////////////////////////////////////////////////////////////////////////////////////////////////
    static bool IsScreenKeyboardSupported (ScreenKeyboardType type);
    static bool IsScreenKeyboardSupported (const char* keyboard_name);
};

}

#endif
