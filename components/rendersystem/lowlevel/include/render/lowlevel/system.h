#ifndef RENDER_LOW_LEVEL_SYSTEM_HEADER
#define RENDER_LOW_LEVEL_SYSTEM_HEADER

#include <render/lowlevel/driver.h>

namespace render
{

namespace low_level
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Система низкоуровневой отрисовки
///////////////////////////////////////////////////////////////////////////////////////////////////
class RenderSystem
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация драйверов
///////////////////////////////////////////////////////////////////////////////////////////////////
    void RegisterDriver   (const char* name, IDriver* driver);
    void UnregisterDriver (const char* name);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Поиск драйвера по имени
///////////////////////////////////////////////////////////////////////////////////////////////////
    IDriver* FindDriver (const char* name);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание устройства отрисовки
///////////////////////////////////////////////////////////////////////////////////////////////////
    IDevice* CreateDevice (const char*          driver_mask,       //маска имени драйвера
                           const char*          output_mask,       //маска имени устройства вывода
                           const SwapChainDesc& swap_chain,        //дескриптор цепочки обмена
                           const char*          init_string = ""); //строка инициализации
};

}

}

#endif
