#ifndef RENDER_LOW_LEVEL_OBJECT_HEADER
#define RENDER_LOW_LEVEL_OBJECT_HEADER

#include <typeinfo>

namespace render
{

namespace low_level
{

//forward declaration
class IDevice;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовый класс семейства низкоуровневых классов отрисовки
///////////////////////////////////////////////////////////////////////////////////////////////////
class IObject
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Проверка совместимости объеков
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual bool IsCompatible (IObject*) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Подсчёт ссылок
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void AddRef  () = 0;
    virtual void Release () = 0;

  protected:
    virtual ~IObject () {}
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Объект, созданный устройством отрисовки
///////////////////////////////////////////////////////////////////////////////////////////////////
class IDeviceObject: virtual public IObject
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Указатель на устройство отрисовки, которому принадлежит ресурс
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IDevice* GetDevice () = 0;
};

}

}

#endif
