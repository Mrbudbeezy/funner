#ifndef RENDER_LOW_LEVEL_COMMON_HEADER
#define RENDER_LOW_LEVEL_COMMON_HEADER

#include <stddef.h>

namespace render
{

namespace low_level
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Режим сравнения
///////////////////////////////////////////////////////////////////////////////////////////////////
enum CompareMode
{
  CompareMode_AlwaysFail,   //результат сравнения всегда ложь
  CompareMode_AlwaysPass,   //результат сравнения всегда истина
  CompareMode_Equal,        //new_value == reference_value
  CompareMode_NotEqual,     //new_value != reference_value
  CompareMode_Less,         //new_value <  reference_value
  CompareMode_LessEqual,    //new_value <= reference_value
  CompareMode_Greater,      //new_value >  reference_value
  CompareMode_GreaterEqual, //new_value >= reference_value

  CompareMode_Num
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Цвета
///////////////////////////////////////////////////////////////////////////////////////////////////
struct Color3f
{
  float red, green, blue;
};

struct Color4f: public Color3f
{
  float alpha;
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Прямоугольная область
///////////////////////////////////////////////////////////////////////////////////////////////////
struct Rect
{
  int    x;      //абсцисса левого верхнего угла области
  int    y;      //ордината левого верхнего угла области
  size_t width;  //ширина области
  size_t height; //высота области
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Область вывода
///////////////////////////////////////////////////////////////////////////////////////////////////
struct Viewport: public Rect
{
  float  min_depth; //минимальная глубина [0;1]
  float  max_depth; //максимальная глубина [0;1]
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Матрица
///////////////////////////////////////////////////////////////////////////////////////////////////
typedef float Matrix4f;

}

}

#endif
