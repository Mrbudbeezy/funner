#ifndef RENDER_LOW_LEVEL_FRAME_BUFFER
#define RENDER_LOW_LEVEL_FRAME_BUFFER

#include <render/low_level/buffer.h>

namespace render
{

namespace low_level
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Дескриптор буфера кадра
///////////////////////////////////////////////////////////////////////////////////////////////////
struct FrameBufferDesc
{
  size_t width;        //ширина буферов
  size_t height;       //высота буферов
  size_t color_bits;   //количество бит на цвет
  size_t alpha_bits;   //количество бит на альфу
  size_t depth_bits;   //количество бит на глубину
  size_t stencil_bits; //количество бит на шаблон  
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Поверхности отрисовки: color, depth-stencil
///////////////////////////////////////////////////////////////////////////////////////////////////
class IRenderTargetSurface: virtual public IBuffer {};
class IDepthStencilSurface: virtual public IBuffer {};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Буфер кадра
///////////////////////////////////////////////////////////////////////////////////////////////////
class IFrameBuffer: virtual public IObject
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение дескриптора
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void GetDesc (FrameBufferDesc&) = 0;
  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение поверхностей отрисовки
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual IRenderTargetSurface* GetRenderTarget () = 0;
    virtual IDepthStencilSurface* GetDepthStencil () = 0;
};

}

}

#endif
