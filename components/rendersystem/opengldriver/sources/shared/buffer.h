#ifndef RENDER_GL_DRIVER_BUFFER_HEADER
#define RENDER_GL_DRIVER_BUFFER_HEADER

#include <render/low_level/buffer.h>
#include <shared/object.h>

namespace render
{

namespace low_level
{

namespace opengl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Буфер
///////////////////////////////////////////////////////////////////////////////////////////////////
class Buffer: virtual public IBuffer, public Object
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Размер буфера
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t GetSize ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Копирование данных между буферами
///////////////////////////////////////////////////////////////////////////////////////////////////
    void CopyTo (size_t source_offset, size_t size, IBuffer& destination, size_t destination_offset);
    
  protected:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Реализация копирования данных между буферами без проверки границ
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void CopyToImpl (size_t source_offset, size_t size, IBuffer& destination, size_t destination_offset);
};

}

}

}

#endif
