#ifndef RENDER_GL_DRIVER_OBJECT_HEADER
#define RENDER_GL_DRIVER_OBJECT_HEADER

#include <typeinfo>
#include <render/low_level/object.h>
#include <xtl/reference_counter.h>
#include <common/exception.h>

#ifdef _MSC_VER
  #pragma warning (disable : 4250) //'class1' : inherits 'class2::member' via dominance
#endif

namespace render
{

namespace low_level
{

namespace opengl
{

//forward declarations
class Device;

//+logobject

///////////////////////////////////////////////////////////////////////////////////////////////////
///Базовый объект семейства низкоуровневых средств отрисовки
///////////////////////////////////////////////////////////////////////////////////////////////////
class Object: virtual public IObject, public xtl::reference_counter
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Object () {}
  
///////////////////////////////////////////////////////////////////////////////////////////////////
///Подсчёт ссылок
///////////////////////////////////////////////////////////////////////////////////////////////////
    void AddRef  ();
    void Release ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///По умолчанию объекты не имеют списка свойств
///////////////////////////////////////////////////////////////////////////////////////////////////
    IPropertyList* GetProperties ();

  private:
    Object (const Object&); //no impl
    Object& operator = (const Object&); //no impl
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Приведение типов объектов
///////////////////////////////////////////////////////////////////////////////////////////////////
template <class DstT, class SrcT>
DstT* cast_object (SrcT* ptr, const char* source, const char* argument_name);

#include <shared/detail/object.inl>

}

}

}

#endif
