#ifndef _H_VERTEX_BUFFER_H_
#define _H_VERTEX_BUFFER_H_

#include <render/lowlevel/buffer.h>

namespace render
{

namespace lowlevel
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Вершинный буфер
///////////////////////////////////////////////////////////////////////////////////////////////////
class VertexBuffer: public IVertexBuffer
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Создание и уничтожение
///////////////////////////////////////////////////////////////////////////////////////////////////
    VertexBuffer ();
    VertexBuffer (const VertexBuffer&);
    ~VertexBuffer ();
///////////////////////////////////////////////////////////////////////////////////////////////////
///Размер
///////////////////////////////////////////////////////////////////////////////////////////////////
    size_t GetSize () const;
    size_t GetElementCount () const;
///////////////////////////////////////////////////////////////////////////////////////////////////
///Тип
///////////////////////////////////////////////////////////////////////////////////////////////////
    BufferType GetType () { return BufferType_VertexBuffer; }
///////////////////////////////////////////////////////////////////////////////////////////////////
///Дескриптор
///////////////////////////////////////////////////////////////////////////////////////////////////
    void GetDesc (BufferDesc&);
///////////////////////////////////////////////////////////////////////////////////////////////////
///Данные
///////////////////////////////////////////////////////////////////////////////////////////////////
    void SetData (size_t offset, size_t size, const void* data);
    void GetData (size_t offset, size_t size, void* data);
///////////////////////////////////////////////////////////////////////////////////////////////////
///Копирование данных между буферами
///////////////////////////////////////////////////////////////////////////////////////////////////
    void CopyTo  (size_t src_offset, size_t size, VertexBuffer& dst, size_t dst_offset);
};

}

}

#endif  _H_VERTEX_BUFFER_H_