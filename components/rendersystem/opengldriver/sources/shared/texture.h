#ifndef RENDER_GL_DRIVER_TEXTURE_HEADER
#define RENDER_GL_DRIVER_TEXTURE_HEADER

#include <render/low_level/texture.h>

namespace render
{

namespace low_level
{

namespace opengl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Текстура
///////////////////////////////////////////////////////////////////////////////////////////////////
class Texture: virtual public ITexture
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Конструктор
///////////////////////////////////////////////////////////////////////////////////////////////////
    Texture (const TextureDesc&);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Биндинг
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Bind (size_t slot_index);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение дескриптора
///////////////////////////////////////////////////////////////////////////////////////////////////
    void GetDesc (TextureDesc&);

  private:
    Texture ();                           //no impl
    Texture (const Texture&);             //no impl
    Texture& operator = (const Texture&); //no impl
};

}

}

}

#endif
