#ifndef RENDER_GL_DRIVER_TRACKABLE_HEADER
#define RENDER_GL_DRIVER_TRACKABLE_HEADER

#include <xtl/trackable.h>

namespace render
{

namespace low_level
{

namespace opengl
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Объект, оповещающий клиентов при удалении
///////////////////////////////////////////////////////////////////////////////////////////////////
class Trackable: private xtl::trackable
{
  public:
    typedef xtl::trackable::slot_type     SlotType;
    typedef xtl::trackable::function_type FunctionType;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение trackable
///////////////////////////////////////////////////////////////////////////////////////////////////
    const xtl::trackable& GetTrackable () const;
          xtl::trackable& GetTrackable ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Регистрация обработчика события удаления объекта
///////////////////////////////////////////////////////////////////////////////////////////////////
    xtl::connection RegisterDestroyHandler (SlotType& handler);
    xtl::connection RegisterDestroyHandler (FunctionType& handler);
};

///////////////////////////////////////////////////////////////////////////////////////////////////
///Получение trackable
///////////////////////////////////////////////////////////////////////////////////////////////////
xtl::trackable& get_trackable (Trackable&);

#include <shared/detail/trackable.inl>

}

}

}

#endif
