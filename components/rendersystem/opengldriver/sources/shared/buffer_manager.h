#ifndef _H_BUFFER_MANAGER_H_
#define _H_BUFFER_MANAGER_H_

#include <render/low_level/buffer.h>

namespace render
{

namespace low_level
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Класс буфер менеджера
///////////////////////////////////////////////////////////////////////////////////////////////////
class BufferManager
{
  public:
///////////////////////////////////////////////////////////////////////////////////////////////////
///Создать новый буфер
///////////////////////////////////////////////////////////////////////////////////////////////////
    IBuffer*  CreateBuffer(BufferType type, size_t size, BufferUsageType usage, size_t accessflags);
///////////////////////////////////////////////////////////////////////////////////////////////////
///Сделать буфер активным
///////////////////////////////////////////////////////////////////////////////////////////////////
    void      BindBuffer(IBuffer* buffer);
///////////////////////////////////////////////////////////////////////////////////////////////////
///Имплементация
/////////////////////////////////////////////////////////////////////////////////////////////////// 
  private:
    struct  Impl;
    Impl*   impl;
};

}

}

#endif  _H_BUFFER_MANAGER_H_