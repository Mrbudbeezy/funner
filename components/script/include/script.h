#ifndef SCRIPT_HEADER
#define SCRIPT_HEADER

#include <stl/memory>
#include <xtl/functional_fwd>

namespace scriptlib
{

enum ScriptType
{
  ST_LUA
};

//implementation forwards
class ScriptEnvImpl;

//////////////////////////////////////////////////////////////////////////////////////////////////
///Скриптовая среда
//////////////////////////////////////////////////////////////////////////////////////////////////
class ScriptEnv
{
  public:
    ScriptEnv  (ScriptType type);
    ~ScriptEnv ();

///////////////////////////////////////////////////////////////////////////////////////////////////
///Загрузка и выполнение файла скрипта
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Load (const char* file_name);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Имя среды
///////////////////////////////////////////////////////////////////////////////////////////////////
    const char* Name   () const;
    void        Rename (const char* new_name);

///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка и получение переменных
///////////////////////////////////////////////////////////////////////////////////////////////////
    template <class T>
    void SetVariable (const char* name, T value);
    template <class T>
    T    GetVariable (const char* name);
template<> const char* ScriptEnv::GetVariable <const char*> (const char* name); 


///////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Swap (ScriptEnv&);

  private:
    ScriptEnv ();
    ScriptEnv (ScriptEnvImpl*);

    stl::auto_ptr<ScriptEnvImpl> impl;
};

//////////////////////////////////////////////////////////////////////////////////////////////////
///Обмен
//////////////////////////////////////////////////////////////////////////////////////////////////
void swap (ScriptEnv&,ScriptEnv&);

}

#endif
