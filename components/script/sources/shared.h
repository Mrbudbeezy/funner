#ifndef SCRIPTLIB_SHARED_HEADER
#define SCRIPTLIB_SHARED_HEADER

#include <stl/string>
#include <script.h>

namespace scriptlib
{

///////////////////////////////////////////////////////////////////////////////////////////////////
///Описание реализации скриптовой среды
///////////////////////////////////////////////////////////////////////////////////////////////////
class ScriptEnvImpl
{
  public:
    virtual ~ScriptEnvImpl () {}

///////////////////////////////////////////////////////////////////////////////////////////////////
///Загрузка и выполнение файла скрипта
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void Load (const char* file_name) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Установка и получение переменных
///////////////////////////////////////////////////////////////////////////////////////////////////
    virtual void        SetVariable (const char* name, const char* value) = 0;
    virtual const char* GetVariable (const char* name) = 0;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Данные
///////////////////////////////////////////////////////////////////////////////////////////////////
    stl::string str_name;  //Script environment name
};

}

class LuaImpl;

///////////////////////////////////////////////////////////////////////////////////////////////////
///Lua среда
///////////////////////////////////////////////////////////////////////////////////////////////////
class LuaEnvImpl : public scriptlib::ScriptEnvImpl
{
  public:
    LuaEnvImpl ();
    ~LuaEnvImpl ();
    
///////////////////////////////////////////////////////////////////////////////////////////////////
///Переопределение основных функций
///////////////////////////////////////////////////////////////////////////////////////////////////
    void Load (const char* file_name);

    void        SetVariable (const char* name, const char* value);
    const char* GetVariable (const char* name);

  private:
    stl::auto_ptr<LuaImpl> impl;
};

#endif
